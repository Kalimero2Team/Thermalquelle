From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: RednedEpic <redned235@gmail.com>
Date: Tue, 9 May 2023 11:46:06 -0500
Subject: [PATCH] Add support for custom entities in the API

Allows for creating custom entity definitions upon registration as well as modifying existing entity spawns to use custom entity identifiers.

diff --git a/api/src/main/java/org/geysermc/geyser/api/entity/EntityDefinition.java b/api/src/main/java/org/geysermc/geyser/api/entity/EntityDefinition.java
new file mode 100644
index 0000000000000000000000000000000000000000..753e67f68997e43fe7189e0efdb1e5dedf44bb13
--- /dev/null
+++ b/api/src/main/java/org/geysermc/geyser/api/entity/EntityDefinition.java
@@ -0,0 +1,112 @@
+/*
+ * Copyright (c) 2019-2023 GeyserMC. http://geysermc.org
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @author GeyserMC
+ * @link https://github.com/GeyserMC/Geyser
+ */
+
+package org.geysermc.geyser.api.entity;
+
+import org.checkerframework.checker.nullness.qual.NonNull;
+import org.geysermc.geyser.api.GeyserApi;
+
+/**
+ * Holds information about an entity that remains constant no matter
+ * its properties. This is typically data such as its identifier,
+ * its height/width, offset, etc.
+ */
+public interface EntityDefinition {
+
+    /**
+     * Gets the identifier of this entity.
+     *
+     * @return the identifier of this entity
+     */
+    @NonNull
+    EntityIdentifier entityIdentifier();
+
+    /**
+     * Gets the width of this entity.
+     *
+     * @return the width of this entity
+     */
+    float width();
+
+    /**
+     * Gets the height of this entity.
+     *
+     * @return the height of this entity
+     */
+    float height();
+
+    /**
+     * Gets the offset of this entity.
+     *
+     * @return the offset of this entity
+     */
+    float offset();
+
+    static Builder builder() {
+        return GeyserApi.api().provider(Builder.class);
+    }
+
+    interface Builder {
+
+        /**
+         * Sets the identifier of this entity.
+         *
+         * @param identifier the identifier of this entity
+         * @return the builder
+         */
+        Builder identifier(@NonNull EntityIdentifier identifier);
+
+        /**
+         * Sets the width of this entity.
+         *
+         * @param width the width of this entity
+         * @return the builder
+         */
+        Builder width(float width);
+
+        /**
+         * Sets the height of this entity.
+         *
+         * @param height the height of this entity
+         * @return the builder
+         */
+        Builder height(float height);
+
+        /**
+         * Sets the offset of this entity.
+         *
+         * @param offset the offset of this entity
+         * @return the builder
+         */
+        Builder offset(float offset);
+
+        /**
+         * Builds the entity definition.
+         *
+         * @return the entity definition
+         */
+        EntityDefinition build();
+    }
+}
\ No newline at end of file
diff --git a/api/src/main/java/org/geysermc/geyser/api/entity/EntityIdentifier.java b/api/src/main/java/org/geysermc/geyser/api/entity/EntityIdentifier.java
new file mode 100644
index 0000000000000000000000000000000000000000..0b2851a116523fa42541fec011cc41ef534dc708
--- /dev/null
+++ b/api/src/main/java/org/geysermc/geyser/api/entity/EntityIdentifier.java
@@ -0,0 +1,97 @@
+/*
+ * Copyright (c) 2019-2023 GeyserMC. http://geysermc.org
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @author GeyserMC
+ * @link https://github.com/GeyserMC/Geyser
+ */
+
+package org.geysermc.geyser.api.entity;
+
+import org.checkerframework.checker.nullness.qual.NonNull;
+import org.geysermc.geyser.api.GeyserApi;
+
+/**
+ * Represents the data sent over to a client regarding
+ * an entity's identifier.
+ */
+public interface EntityIdentifier {
+
+    /**
+     * Gets whether this entity has a spawn egg or not.
+     *
+     * @return whether this entity has a spawn egg or not
+     */
+    boolean hasSpawnEgg();
+
+    /**
+     * Gets the entity's identifier that is sent to the client.
+     *
+     * @return the entity's identifier that is sent to the client.
+     */
+    @NonNull
+    String identifier();
+
+    /**
+     * Gets whether the entity is summonable or not.
+     *
+     * @return whether the entity is summonable or not
+     */
+    boolean isSummonable();
+
+    @NonNull
+    static Builder builder() {
+        return GeyserApi.api().provider(Builder.class);
+    }
+
+    interface Builder {
+
+        /**
+         * Sets whether the entity has a spawn egg or not.
+         *
+         * @param spawnEgg whether the entity has a spawn egg or not
+         * @return the builder
+         */
+        Builder spawnEgg(boolean spawnEgg);
+
+        /**
+         * Sets the entity's identifier that is sent to the client.
+         *
+         * @param identifier the entity's identifier that is sent to the client
+         * @return the builder
+         */
+        Builder identifier(String identifier);
+
+        /**
+         * Sets whether the entity is summonable or not.
+         *
+         * @param summonable whether the entity is summonable or not
+         * @return the builder
+         */
+        Builder summonable(boolean summonable);
+
+        /**
+         * Builds the entity identifier.
+         *
+         * @return the entity identifier
+         */
+        EntityIdentifier build();
+    }
+}
\ No newline at end of file
diff --git a/api/src/main/java/org/geysermc/geyser/api/event/bedrock/SessionDefineEntitiesEvent.java b/api/src/main/java/org/geysermc/geyser/api/event/bedrock/SessionDefineEntitiesEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..d83602f416c1a5f16455d7195ef6d60c3fe3f46e
--- /dev/null
+++ b/api/src/main/java/org/geysermc/geyser/api/event/bedrock/SessionDefineEntitiesEvent.java
@@ -0,0 +1,68 @@
+/*
+ * Copyright (c) 2019-2023 GeyserMC. http://geysermc.org
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @author GeyserMC
+ * @link https://github.com/GeyserMC/Geyser
+ */
+
+package org.geysermc.geyser.api.event.bedrock;
+
+import org.checkerframework.checker.nullness.qual.NonNull;
+import org.geysermc.event.Event;
+import org.geysermc.geyser.api.connection.GeyserConnection;
+import org.geysermc.geyser.api.entity.EntityDefinition;
+import org.geysermc.geyser.api.entity.EntityIdentifier;
+import org.geysermc.geyser.api.event.connection.ConnectionEvent;
+
+import java.util.List;
+
+/**
+ * Called when Geyser sends a list of available entities to the
+ * Bedrock client. This will typically contain all the available
+ * entities within vanilla, but can be modified to include any custom
+ * entity defined through a resource pack.
+ */
+public abstract class SessionDefineEntitiesEvent extends ConnectionEvent {
+    private final List<EntityIdentifier> identifiers;
+
+    public SessionDefineEntitiesEvent(@NonNull GeyserConnection connection, @NonNull List<EntityIdentifier> identifiers) {
+        super(connection);
+        this.identifiers = identifiers;
+    }
+
+    /**
+     * Gets the list of entity identifiers.
+     *
+     * @return the list of entity identifiers
+     */
+    @NonNull
+    public List<EntityIdentifier> entityIdentifiers() {
+        return this.identifiers;
+    }
+
+    /**
+     * Registers a new entity identifier for the player.
+     *
+     * @param entityIdentifier the entity identifier to register
+     * @return {@code true} if the entity identifier was registered, {@code false} otherwise
+     */
+    public abstract boolean register(@NonNull EntityIdentifier entityIdentifier);
+}
\ No newline at end of file
diff --git a/api/src/main/java/org/geysermc/geyser/api/event/java/ServerSpawnEntityEvent.java b/api/src/main/java/org/geysermc/geyser/api/event/java/ServerSpawnEntityEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..812d2083e9bcfaa73bec4fc1fb6f0e0fe806bf8e
--- /dev/null
+++ b/api/src/main/java/org/geysermc/geyser/api/event/java/ServerSpawnEntityEvent.java
@@ -0,0 +1,94 @@
+/*
+ * Copyright (c) 2019-2023 GeyserMC. http://geysermc.org
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @author GeyserMC
+ * @link https://github.com/GeyserMC/Geyser
+ */
+
+package org.geysermc.geyser.api.event.java;
+
+import org.checkerframework.checker.nullness.qual.NonNull;
+import org.checkerframework.checker.nullness.qual.Nullable;
+import org.geysermc.geyser.api.connection.GeyserConnection;
+import org.geysermc.geyser.api.entity.EntityDefinition;
+import org.geysermc.geyser.api.event.connection.ConnectionEvent;
+
+import java.util.UUID;
+
+/**
+ * Called when the downstream server spawns an entity.
+ */
+public class ServerSpawnEntityEvent extends ConnectionEvent {
+    private final int entityId;
+    private final UUID uuid;
+
+    private EntityDefinition entityDefinition;
+
+    public ServerSpawnEntityEvent(@NonNull GeyserConnection connection, int entityId, @Nullable UUID uuid,
+                                  @NonNull EntityDefinition entityDefinition) {
+        super(connection);
+        this.entityId = entityId;
+        this.uuid = uuid;
+        this.entityDefinition = entityDefinition;
+    }
+
+    /**
+     * Gets the entity id of the entity being spawned.
+     *
+     * @return the entity id of the entity being spawned
+     */
+    public int entityId() {
+        return this.entityId;
+    }
+
+    /**
+     * Gets the uuid of the entity being spawned.
+     *
+     * @return the uuid of the entity being spawned
+     */
+    @Nullable
+    public UUID uuid() {
+        return this.uuid;
+    }
+
+    /**
+     * Gets the entity definition sent to the connection
+     * when the entity is spawned.
+     *
+     * @return the entity definition sent to the connection
+     *         when the entity is spawned
+     */
+    @NonNull
+    public EntityDefinition entityDefinition() {
+        return this.entityDefinition;
+    }
+
+    /**
+     * Sets the entity definition sent to the connection
+     * when the entity is spawned.
+     *
+     * @param entityDefinition the entity definition sent to the connection
+     *                         when the entity is spawned
+     */
+    public void entityDefinition(@NonNull EntityDefinition entityDefinition) {
+        this.entityDefinition = entityDefinition;
+    }
+}
\ No newline at end of file
diff --git a/api/src/main/java/org/geysermc/geyser/api/event/lifecycle/GeyserDefineCustomItemsEvent.java b/api/src/main/java/org/geysermc/geyser/api/event/lifecycle/GeyserDefineCustomItemsEvent.java
index 0957b8551c108387a3bf387001851dfdd66a0b84..bd14aaf43c7db1c1e3667c6718141032f6ff7e29 100644
--- a/api/src/main/java/org/geysermc/geyser/api/event/lifecycle/GeyserDefineCustomItemsEvent.java
+++ b/api/src/main/java/org/geysermc/geyser/api/event/lifecycle/GeyserDefineCustomItemsEvent.java
@@ -36,7 +36,7 @@ import java.util.Map;
 
 /**
  * Called on Geyser's startup when looking for custom items. Custom items must be registered through this event.
- *
+ * <p>
  * This event will not be called if the "add non-Bedrock items" setting is disabled in the Geyser config.
  */
 public interface GeyserDefineCustomItemsEvent extends Event {
diff --git a/api/src/main/java/org/geysermc/geyser/api/event/lifecycle/GeyserDefineEntitiesEvent.java b/api/src/main/java/org/geysermc/geyser/api/event/lifecycle/GeyserDefineEntitiesEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..4dce40d5fdd640bb904381a0cbba60424a32e3b0
--- /dev/null
+++ b/api/src/main/java/org/geysermc/geyser/api/event/lifecycle/GeyserDefineEntitiesEvent.java
@@ -0,0 +1,58 @@
+/*
+ * Copyright (c) 2019-2023 GeyserMC. http://geysermc.org
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @author GeyserMC
+ * @link https://github.com/GeyserMC/Geyser
+ */
+
+package org.geysermc.geyser.api.event.lifecycle;
+
+import org.checkerframework.checker.nullness.qual.NonNull;
+import org.geysermc.event.Event;
+import org.geysermc.geyser.api.entity.EntityDefinition;
+
+import java.util.List;
+
+/**
+ * Called when entities are defined within Geyser.
+ * <p>
+ * This event can be used to add custom entities to Geyser.
+ * Entity definitions can be created using the builder provided
+ * inside of {@link EntityDefinition}.
+ */
+public interface GeyserDefineEntitiesEvent extends Event {
+
+    /**
+     * Gets the list of entity definitions.
+     *
+     * @return the list of entity definitions
+     */
+    @NonNull
+    List<EntityDefinition> entityDefinitions();
+
+    /**
+     * Registers a new entity definition.
+     *
+     * @param entityDefinition the entity definition to register
+     * @return {@code true} if the entity definition was registered, {@code false} otherwise
+     */
+    boolean register(@NonNull EntityDefinition entityDefinition);
+}
\ No newline at end of file
diff --git a/core/src/main/java/org/geysermc/geyser/GeyserImpl.java b/core/src/main/java/org/geysermc/geyser/GeyserImpl.java
index 185ab7c2a6d35bfafee30c2a979f2a6f7c4eca6e..534651f0e2eba67020df747d0e66dd772e1de198 100644
--- a/core/src/main/java/org/geysermc/geyser/GeyserImpl.java
+++ b/core/src/main/java/org/geysermc/geyser/GeyserImpl.java
@@ -213,6 +213,9 @@ public class GeyserImpl implements GeyserApi {
             CompletableFuture.runAsync(AssetUtils::downloadAndRunClientJarTasks);
         });
 
+        /* Call Registry events */
+        Registries.callRegistryEvents();
+
         startInstance();
 
         GeyserConfiguration config = bootstrap.getGeyserConfig();
diff --git a/core/src/main/java/org/geysermc/geyser/entity/EntityDefinitions.java b/core/src/main/java/org/geysermc/geyser/entity/EntityDefinitions.java
index a88eff1116ff42959d3b7728dd6a99ecc64ced3a..a459b938836eba3a6aff4554233c2c1991ee0612 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/EntityDefinitions.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/EntityDefinitions.java
@@ -51,139 +51,139 @@ import org.geysermc.geyser.registry.Registries;
 import org.geysermc.geyser.translator.text.MessageTranslator;
 
 public final class EntityDefinitions {
-    public static final EntityDefinition<AllayEntity> ALLAY;
-    public static final EntityDefinition<AreaEffectCloudEntity> AREA_EFFECT_CLOUD;
-    public static final EntityDefinition<ArmorStandEntity> ARMOR_STAND;
-    public static final EntityDefinition<TippedArrowEntity> ARROW;
-    public static final EntityDefinition<AxolotlEntity> AXOLOTL;
-    public static final EntityDefinition<BatEntity> BAT;
-    public static final EntityDefinition<BeeEntity> BEE;
-    public static final EntityDefinition<BlazeEntity> BLAZE;
-    public static final EntityDefinition<BoatEntity> BOAT;
-    public static final EntityDefinition<CamelEntity> CAMEL;
-    public static final EntityDefinition<CatEntity> CAT;
-    public static final EntityDefinition<SpiderEntity> CAVE_SPIDER;
-    public static final EntityDefinition<MinecartEntity> CHEST_MINECART;
-    public static final EntityDefinition<ChickenEntity> CHICKEN;
-    public static final EntityDefinition<ChestBoatEntity> CHEST_BOAT;
-    public static final EntityDefinition<AbstractFishEntity> COD;
-    public static final EntityDefinition<CommandBlockMinecartEntity> COMMAND_BLOCK_MINECART;
-    public static final EntityDefinition<CowEntity> COW;
-    public static final EntityDefinition<CreeperEntity> CREEPER;
-    public static final EntityDefinition<DolphinEntity> DOLPHIN;
-    public static final EntityDefinition<ChestedHorseEntity> DONKEY;
-    public static final EntityDefinition<FireballEntity> DRAGON_FIREBALL;
-    public static final EntityDefinition<ZombieEntity> DROWNED;
-    public static final EntityDefinition<ThrowableItemEntity> EGG;
-    public static final EntityDefinition<ElderGuardianEntity> ELDER_GUARDIAN;
-    public static final EntityDefinition<EndermanEntity> ENDERMAN;
-    public static final EntityDefinition<MonsterEntity> ENDERMITE;
-    public static final EntityDefinition<EnderDragonEntity> ENDER_DRAGON;
-    public static final EntityDefinition<ThrowableItemEntity> ENDER_PEARL;
-    public static final EntityDefinition<EnderCrystalEntity> END_CRYSTAL;
-    public static final EntityDefinition<SpellcasterIllagerEntity> EVOKER;
-    public static final EntityDefinition<EvokerFangsEntity> EVOKER_FANGS;
-    public static final EntityDefinition<ThrowableItemEntity> EXPERIENCE_BOTTLE;
-    public static final EntityDefinition<ExpOrbEntity> EXPERIENCE_ORB;
-    public static final EntityDefinition<Entity> EYE_OF_ENDER;
-    public static final EntityDefinition<FallingBlockEntity> FALLING_BLOCK;
-    public static final EntityDefinition<FireballEntity> FIREBALL;
-    public static final EntityDefinition<FireworkEntity> FIREWORK_ROCKET;
-    public static final EntityDefinition<FishingHookEntity> FISHING_BOBBER;
-    public static final EntityDefinition<FoxEntity> FOX;
-    public static final EntityDefinition<FrogEntity> FROG;
-    public static final EntityDefinition<FurnaceMinecartEntity> FURNACE_MINECART; // Not present on Bedrock
-    public static final EntityDefinition<GhastEntity> GHAST;
-    public static final EntityDefinition<GiantEntity> GIANT;
-    public static final EntityDefinition<ItemFrameEntity> GLOW_ITEM_FRAME;
-    public static final EntityDefinition<GlowSquidEntity> GLOW_SQUID;
-    public static final EntityDefinition<GoatEntity> GOAT;
-    public static final EntityDefinition<GuardianEntity> GUARDIAN;
-    public static final EntityDefinition<HoglinEntity> HOGLIN;
-    public static final EntityDefinition<MinecartEntity> HOPPER_MINECART;
-    public static final EntityDefinition<HorseEntity> HORSE;
-    public static final EntityDefinition<ZombieEntity> HUSK;
-    public static final EntityDefinition<SpellcasterIllagerEntity> ILLUSIONER; // Not present on Bedrock
-    public static final EntityDefinition<InteractionEntity> INTERACTION;
-    public static final EntityDefinition<IronGolemEntity> IRON_GOLEM;
-    public static final EntityDefinition<ItemEntity> ITEM;
-    public static final EntityDefinition<ItemFrameEntity> ITEM_FRAME;
-    public static final EntityDefinition<LeashKnotEntity> LEASH_KNOT;
-    public static final EntityDefinition<LightningEntity> LIGHTNING_BOLT;
-    public static final EntityDefinition<LlamaEntity> LLAMA;
-    public static final EntityDefinition<ThrowableEntity> LLAMA_SPIT;
-    public static final EntityDefinition<MagmaCubeEntity> MAGMA_CUBE;
-    public static final EntityDefinition<MinecartEntity> MINECART;
-    public static final EntityDefinition<MooshroomEntity> MOOSHROOM;
-    public static final EntityDefinition<ChestedHorseEntity> MULE;
-    public static final EntityDefinition<OcelotEntity> OCELOT;
-    public static final EntityDefinition<PaintingEntity> PAINTING;
-    public static final EntityDefinition<PandaEntity> PANDA;
-    public static final EntityDefinition<ParrotEntity> PARROT;
-    public static final EntityDefinition<PhantomEntity> PHANTOM;
-    public static final EntityDefinition<PigEntity> PIG;
-    public static final EntityDefinition<PiglinEntity> PIGLIN;
-    public static final EntityDefinition<BasePiglinEntity> PIGLIN_BRUTE;
-    public static final EntityDefinition<PillagerEntity> PILLAGER;
-    public static final EntityDefinition<PlayerEntity> PLAYER;
-    public static final EntityDefinition<PolarBearEntity> POLAR_BEAR;
-    public static final EntityDefinition<ThrownPotionEntity> POTION;
-    public static final EntityDefinition<PufferFishEntity> PUFFERFISH;
-    public static final EntityDefinition<RabbitEntity> RABBIT;
-    public static final EntityDefinition<RaidParticipantEntity> RAVAGER;
-    public static final EntityDefinition<AbstractFishEntity> SALMON;
-    public static final EntityDefinition<SheepEntity> SHEEP;
-    public static final EntityDefinition<ShulkerEntity> SHULKER;
-    public static final EntityDefinition<SnifferEntity> SNIFFER;
-    public static final EntityDefinition<ThrowableEntity> SHULKER_BULLET;
-    public static final EntityDefinition<MonsterEntity> SILVERFISH;
-    public static final EntityDefinition<SkeletonEntity> SKELETON;
-    public static final EntityDefinition<SkeletonHorseEntity> SKELETON_HORSE;
-    public static final EntityDefinition<SlimeEntity> SLIME;
-    public static final EntityDefinition<FireballEntity> SMALL_FIREBALL;
-    public static final EntityDefinition<ThrowableItemEntity> SNOWBALL;
-    public static final EntityDefinition<SnowGolemEntity> SNOW_GOLEM;
-    public static final EntityDefinition<SpawnerMinecartEntity> SPAWNER_MINECART; // Not present on Bedrock
-    public static final EntityDefinition<AbstractArrowEntity> SPECTRAL_ARROW;
-    public static final EntityDefinition<SpiderEntity> SPIDER;
-    public static final EntityDefinition<SquidEntity> SQUID;
-    public static final EntityDefinition<AbstractSkeletonEntity> STRAY;
-    public static final EntityDefinition<StriderEntity> STRIDER;
-    public static final EntityDefinition<TadpoleEntity> TADPOLE;
-    public static final EntityDefinition<TextDisplayEntity> TEXT_DISPLAY;
-    public static final EntityDefinition<TNTEntity> TNT;
-    public static final EntityDefinition<MinecartEntity> TNT_MINECART;
-    public static final EntityDefinition<TraderLlamaEntity> TRADER_LLAMA;
-    public static final EntityDefinition<TridentEntity> TRIDENT;
-    public static final EntityDefinition<TropicalFishEntity> TROPICAL_FISH;
-    public static final EntityDefinition<TurtleEntity> TURTLE;
-    public static final EntityDefinition<VexEntity> VEX;
-    public static final EntityDefinition<VillagerEntity> VILLAGER;
-    public static final EntityDefinition<VindicatorEntity> VINDICATOR;
-    public static final EntityDefinition<AbstractMerchantEntity> WANDERING_TRADER;
-    public static final EntityDefinition<WardenEntity> WARDEN;
-    public static final EntityDefinition<RaidParticipantEntity> WITCH;
-    public static final EntityDefinition<WitherEntity> WITHER;
-    public static final EntityDefinition<AbstractSkeletonEntity> WITHER_SKELETON;
-    public static final EntityDefinition<WitherSkullEntity> WITHER_SKULL;
-    public static final EntityDefinition<WolfEntity> WOLF;
-    public static final EntityDefinition<ZoglinEntity> ZOGLIN;
-    public static final EntityDefinition<ZombieEntity> ZOMBIE;
-    public static final EntityDefinition<ZombieHorseEntity> ZOMBIE_HORSE;
-    public static final EntityDefinition<ZombieVillagerEntity> ZOMBIE_VILLAGER;
-    public static final EntityDefinition<ZombifiedPiglinEntity> ZOMBIFIED_PIGLIN;
+    public static final GeyserEntityDefinition<AllayEntity> ALLAY;
+    public static final GeyserEntityDefinition<AreaEffectCloudEntity> AREA_EFFECT_CLOUD;
+    public static final GeyserEntityDefinition<ArmorStandEntity> ARMOR_STAND;
+    public static final GeyserEntityDefinition<TippedArrowEntity> ARROW;
+    public static final GeyserEntityDefinition<AxolotlEntity> AXOLOTL;
+    public static final GeyserEntityDefinition<BatEntity> BAT;
+    public static final GeyserEntityDefinition<BeeEntity> BEE;
+    public static final GeyserEntityDefinition<BlazeEntity> BLAZE;
+    public static final GeyserEntityDefinition<BoatEntity> BOAT;
+    public static final GeyserEntityDefinition<CamelEntity> CAMEL;
+    public static final GeyserEntityDefinition<CatEntity> CAT;
+    public static final GeyserEntityDefinition<SpiderEntity> CAVE_SPIDER;
+    public static final GeyserEntityDefinition<MinecartEntity> CHEST_MINECART;
+    public static final GeyserEntityDefinition<ChickenEntity> CHICKEN;
+    public static final GeyserEntityDefinition<ChestBoatEntity> CHEST_BOAT;
+    public static final GeyserEntityDefinition<AbstractFishEntity> COD;
+    public static final GeyserEntityDefinition<CommandBlockMinecartEntity> COMMAND_BLOCK_MINECART;
+    public static final GeyserEntityDefinition<CowEntity> COW;
+    public static final GeyserEntityDefinition<CreeperEntity> CREEPER;
+    public static final GeyserEntityDefinition<DolphinEntity> DOLPHIN;
+    public static final GeyserEntityDefinition<ChestedHorseEntity> DONKEY;
+    public static final GeyserEntityDefinition<FireballEntity> DRAGON_FIREBALL;
+    public static final GeyserEntityDefinition<ZombieEntity> DROWNED;
+    public static final GeyserEntityDefinition<ThrowableItemEntity> EGG;
+    public static final GeyserEntityDefinition<ElderGuardianEntity> ELDER_GUARDIAN;
+    public static final GeyserEntityDefinition<EndermanEntity> ENDERMAN;
+    public static final GeyserEntityDefinition<MonsterEntity> ENDERMITE;
+    public static final GeyserEntityDefinition<EnderDragonEntity> ENDER_DRAGON;
+    public static final GeyserEntityDefinition<ThrowableItemEntity> ENDER_PEARL;
+    public static final GeyserEntityDefinition<EnderCrystalEntity> END_CRYSTAL;
+    public static final GeyserEntityDefinition<SpellcasterIllagerEntity> EVOKER;
+    public static final GeyserEntityDefinition<EvokerFangsEntity> EVOKER_FANGS;
+    public static final GeyserEntityDefinition<ThrowableItemEntity> EXPERIENCE_BOTTLE;
+    public static final GeyserEntityDefinition<ExpOrbEntity> EXPERIENCE_ORB;
+    public static final GeyserEntityDefinition<Entity> EYE_OF_ENDER;
+    public static final GeyserEntityDefinition<FallingBlockEntity> FALLING_BLOCK;
+    public static final GeyserEntityDefinition<FireballEntity> FIREBALL;
+    public static final GeyserEntityDefinition<FireworkEntity> FIREWORK_ROCKET;
+    public static final GeyserEntityDefinition<FishingHookEntity> FISHING_BOBBER;
+    public static final GeyserEntityDefinition<FoxEntity> FOX;
+    public static final GeyserEntityDefinition<FrogEntity> FROG;
+    public static final GeyserEntityDefinition<FurnaceMinecartEntity> FURNACE_MINECART; // Not present on Bedrock
+    public static final GeyserEntityDefinition<GhastEntity> GHAST;
+    public static final GeyserEntityDefinition<GiantEntity> GIANT;
+    public static final GeyserEntityDefinition<ItemFrameEntity> GLOW_ITEM_FRAME;
+    public static final GeyserEntityDefinition<GlowSquidEntity> GLOW_SQUID;
+    public static final GeyserEntityDefinition<GoatEntity> GOAT;
+    public static final GeyserEntityDefinition<GuardianEntity> GUARDIAN;
+    public static final GeyserEntityDefinition<HoglinEntity> HOGLIN;
+    public static final GeyserEntityDefinition<MinecartEntity> HOPPER_MINECART;
+    public static final GeyserEntityDefinition<HorseEntity> HORSE;
+    public static final GeyserEntityDefinition<ZombieEntity> HUSK;
+    public static final GeyserEntityDefinition<SpellcasterIllagerEntity> ILLUSIONER; // Not present on Bedrock
+    public static final GeyserEntityDefinition<InteractionEntity> INTERACTION;
+    public static final GeyserEntityDefinition<IronGolemEntity> IRON_GOLEM;
+    public static final GeyserEntityDefinition<ItemEntity> ITEM;
+    public static final GeyserEntityDefinition<ItemFrameEntity> ITEM_FRAME;
+    public static final GeyserEntityDefinition<LeashKnotEntity> LEASH_KNOT;
+    public static final GeyserEntityDefinition<LightningEntity> LIGHTNING_BOLT;
+    public static final GeyserEntityDefinition<LlamaEntity> LLAMA;
+    public static final GeyserEntityDefinition<ThrowableEntity> LLAMA_SPIT;
+    public static final GeyserEntityDefinition<MagmaCubeEntity> MAGMA_CUBE;
+    public static final GeyserEntityDefinition<MinecartEntity> MINECART;
+    public static final GeyserEntityDefinition<MooshroomEntity> MOOSHROOM;
+    public static final GeyserEntityDefinition<ChestedHorseEntity> MULE;
+    public static final GeyserEntityDefinition<OcelotEntity> OCELOT;
+    public static final GeyserEntityDefinition<PaintingEntity> PAINTING;
+    public static final GeyserEntityDefinition<PandaEntity> PANDA;
+    public static final GeyserEntityDefinition<ParrotEntity> PARROT;
+    public static final GeyserEntityDefinition<PhantomEntity> PHANTOM;
+    public static final GeyserEntityDefinition<PigEntity> PIG;
+    public static final GeyserEntityDefinition<PiglinEntity> PIGLIN;
+    public static final GeyserEntityDefinition<BasePiglinEntity> PIGLIN_BRUTE;
+    public static final GeyserEntityDefinition<PillagerEntity> PILLAGER;
+    public static final GeyserEntityDefinition<PlayerEntity> PLAYER;
+    public static final GeyserEntityDefinition<PolarBearEntity> POLAR_BEAR;
+    public static final GeyserEntityDefinition<ThrownPotionEntity> POTION;
+    public static final GeyserEntityDefinition<PufferFishEntity> PUFFERFISH;
+    public static final GeyserEntityDefinition<RabbitEntity> RABBIT;
+    public static final GeyserEntityDefinition<RaidParticipantEntity> RAVAGER;
+    public static final GeyserEntityDefinition<AbstractFishEntity> SALMON;
+    public static final GeyserEntityDefinition<SheepEntity> SHEEP;
+    public static final GeyserEntityDefinition<ShulkerEntity> SHULKER;
+    public static final GeyserEntityDefinition<SnifferEntity> SNIFFER;
+    public static final GeyserEntityDefinition<ThrowableEntity> SHULKER_BULLET;
+    public static final GeyserEntityDefinition<MonsterEntity> SILVERFISH;
+    public static final GeyserEntityDefinition<SkeletonEntity> SKELETON;
+    public static final GeyserEntityDefinition<SkeletonHorseEntity> SKELETON_HORSE;
+    public static final GeyserEntityDefinition<SlimeEntity> SLIME;
+    public static final GeyserEntityDefinition<FireballEntity> SMALL_FIREBALL;
+    public static final GeyserEntityDefinition<ThrowableItemEntity> SNOWBALL;
+    public static final GeyserEntityDefinition<SnowGolemEntity> SNOW_GOLEM;
+    public static final GeyserEntityDefinition<SpawnerMinecartEntity> SPAWNER_MINECART; // Not present on Bedrock
+    public static final GeyserEntityDefinition<AbstractArrowEntity> SPECTRAL_ARROW;
+    public static final GeyserEntityDefinition<SpiderEntity> SPIDER;
+    public static final GeyserEntityDefinition<SquidEntity> SQUID;
+    public static final GeyserEntityDefinition<AbstractSkeletonEntity> STRAY;
+    public static final GeyserEntityDefinition<StriderEntity> STRIDER;
+    public static final GeyserEntityDefinition<TadpoleEntity> TADPOLE;
+    public static final GeyserEntityDefinition<TextDisplayEntity> TEXT_DISPLAY;
+    public static final GeyserEntityDefinition<TNTEntity> TNT;
+    public static final GeyserEntityDefinition<MinecartEntity> TNT_MINECART;
+    public static final GeyserEntityDefinition<TraderLlamaEntity> TRADER_LLAMA;
+    public static final GeyserEntityDefinition<TridentEntity> TRIDENT;
+    public static final GeyserEntityDefinition<TropicalFishEntity> TROPICAL_FISH;
+    public static final GeyserEntityDefinition<TurtleEntity> TURTLE;
+    public static final GeyserEntityDefinition<VexEntity> VEX;
+    public static final GeyserEntityDefinition<VillagerEntity> VILLAGER;
+    public static final GeyserEntityDefinition<VindicatorEntity> VINDICATOR;
+    public static final GeyserEntityDefinition<AbstractMerchantEntity> WANDERING_TRADER;
+    public static final GeyserEntityDefinition<WardenEntity> WARDEN;
+    public static final GeyserEntityDefinition<RaidParticipantEntity> WITCH;
+    public static final GeyserEntityDefinition<WitherEntity> WITHER;
+    public static final GeyserEntityDefinition<AbstractSkeletonEntity> WITHER_SKELETON;
+    public static final GeyserEntityDefinition<WitherSkullEntity> WITHER_SKULL;
+    public static final GeyserEntityDefinition<WolfEntity> WOLF;
+    public static final GeyserEntityDefinition<ZoglinEntity> ZOGLIN;
+    public static final GeyserEntityDefinition<ZombieEntity> ZOMBIE;
+    public static final GeyserEntityDefinition<ZombieHorseEntity> ZOMBIE_HORSE;
+    public static final GeyserEntityDefinition<ZombieVillagerEntity> ZOMBIE_VILLAGER;
+    public static final GeyserEntityDefinition<ZombifiedPiglinEntity> ZOMBIFIED_PIGLIN;
 
     /**
      * Is not sent over the network
      */
-    public static final EntityDefinition<EnderDragonPartEntity> ENDER_DRAGON_PART;
+    public static final GeyserEntityDefinition<EnderDragonPartEntity> ENDER_DRAGON_PART;
     /**
      * Special Bedrock type
      */
-    public static final EntityDefinition<WitherSkullEntity> WITHER_SKULL_DANGEROUS;
+    public static final GeyserEntityDefinition<WitherSkullEntity> WITHER_SKULL_DANGEROUS;
 
     static {
-        EntityDefinition<Entity> entityBase = EntityDefinition.builder(Entity::new)
+        GeyserEntityDefinition<Entity> entityBase = GeyserEntityDefinition.builder(Entity::new)
                 .addTranslator(MetadataType.BYTE, Entity::setFlags)
                 .addTranslator(MetadataType.INT, Entity::setAir) // Air/bubbles
                 .addTranslator(MetadataType.OPTIONAL_CHAT, Entity::setDisplayName)
@@ -196,7 +196,7 @@ public final class EntityDefinitions {
 
         // Extends entity
         {
-            AREA_EFFECT_CLOUD = EntityDefinition.inherited(AreaEffectCloudEntity::new, entityBase)
+            AREA_EFFECT_CLOUD = GeyserEntityDefinition.inherited(AreaEffectCloudEntity::new, entityBase)
                     .type(EntityType.AREA_EFFECT_CLOUD)
                     .height(0.5f).width(1.0f)
                     .addTranslator(MetadataType.FLOAT, AreaEffectCloudEntity::setRadius)
@@ -204,7 +204,7 @@ public final class EntityDefinitions {
                     .addTranslator(null) // Waiting
                     .addTranslator(MetadataType.PARTICLE, AreaEffectCloudEntity::setParticle)
                     .build();
-            BOAT = EntityDefinition.inherited(BoatEntity::new, entityBase)
+            BOAT = GeyserEntityDefinition.inherited(BoatEntity::new, entityBase)
                     .type(EntityType.BOAT)
                     .height(0.6f).width(1.6f)
                     .offset(0.35f)
@@ -218,14 +218,14 @@ public final class EntityDefinitions {
                     .addTranslator(MetadataType.BOOLEAN, BoatEntity::setPaddlingRight)
                     .addTranslator(MetadataType.INT, (boatEntity, entityMetadata) -> boatEntity.getDirtyMetadata().put(EntityDataTypes.BOAT_BUBBLE_TIME, entityMetadata.getValue())) // May not actually do anything
                     .build();
-            CHEST_BOAT = EntityDefinition.inherited(ChestBoatEntity::new, BOAT)
+            CHEST_BOAT = GeyserEntityDefinition.inherited(ChestBoatEntity::new, BOAT)
                     .type(EntityType.CHEST_BOAT)
                     .build();
-            DRAGON_FIREBALL = EntityDefinition.inherited(FireballEntity::new, entityBase)
+            DRAGON_FIREBALL = GeyserEntityDefinition.inherited(FireballEntity::new, entityBase)
                     .type(EntityType.DRAGON_FIREBALL)
                     .heightAndWidth(1.0f)
                     .build();
-            END_CRYSTAL = EntityDefinition.inherited(EnderCrystalEntity::new, entityBase)
+            END_CRYSTAL = GeyserEntityDefinition.inherited(EnderCrystalEntity::new, entityBase)
                     .type(EntityType.END_CRYSTAL)
                     .heightAndWidth(2.0f)
                     .identifier("minecraft:ender_crystal")
@@ -233,27 +233,27 @@ public final class EntityDefinitions {
                     .addTranslator(MetadataType.BOOLEAN,
                             (enderCrystalEntity, entityMetadata) -> enderCrystalEntity.setFlag(EntityFlag.SHOW_BOTTOM, ((BooleanEntityMetadata) entityMetadata).getPrimitiveValue())) // There is a base located on the ender crystal
                     .build();
-            EXPERIENCE_ORB = EntityDefinition.<ExpOrbEntity>inherited(null, entityBase)
+            EXPERIENCE_ORB = GeyserEntityDefinition.<ExpOrbEntity>inherited(null, entityBase)
                     .type(EntityType.EXPERIENCE_ORB)
                     .identifier("minecraft:xp_orb")
                     .build();
-            EVOKER_FANGS = EntityDefinition.inherited(EvokerFangsEntity::new, entityBase)
+            EVOKER_FANGS = GeyserEntityDefinition.inherited(EvokerFangsEntity::new, entityBase)
                     .type(EntityType.EVOKER_FANGS)
                     .height(0.8f).width(0.5f)
                     .identifier("minecraft:evocation_fang")
                     .build();
-            EYE_OF_ENDER = EntityDefinition.inherited(Entity::new, entityBase)
+            EYE_OF_ENDER = GeyserEntityDefinition.inherited(Entity::new, entityBase)
                     .type(EntityType.EYE_OF_ENDER)
                     .heightAndWidth(0.25f)
                     .identifier("minecraft:eye_of_ender_signal")
                     .addTranslator(null)  // Item
                     .build();
-            FALLING_BLOCK = EntityDefinition.<FallingBlockEntity>inherited(null, entityBase)
+            FALLING_BLOCK = GeyserEntityDefinition.<FallingBlockEntity>inherited(null, entityBase)
                     .type(EntityType.FALLING_BLOCK)
                     .heightAndWidth(0.98f)
                     .addTranslator(null) // "start block position"
                     .build();
-            FIREWORK_ROCKET = EntityDefinition.inherited(FireworkEntity::new, entityBase)
+            FIREWORK_ROCKET = GeyserEntityDefinition.inherited(FireworkEntity::new, entityBase)
                     .type(EntityType.FIREWORK_ROCKET)
                     .heightAndWidth(0.25f)
                     .identifier("minecraft:fireworks_rocket")
@@ -261,44 +261,44 @@ public final class EntityDefinitions {
                     .addTranslator(MetadataType.OPTIONAL_VARINT, FireworkEntity::setPlayerGliding)
                     .addTranslator(null) // Shot at angle
                     .build();
-            FISHING_BOBBER = EntityDefinition.<FishingHookEntity>inherited(null, entityBase)
+            FISHING_BOBBER = GeyserEntityDefinition.<FishingHookEntity>inherited(null, entityBase)
                     .type(EntityType.FISHING_BOBBER)
                     .identifier("minecraft:fishing_hook")
                     .addTranslator(MetadataType.INT, FishingHookEntity::setHookedEntity)
                     .addTranslator(null) // Biting TODO check
                     .build();
-            ITEM = EntityDefinition.inherited(ItemEntity::new, entityBase)
+            ITEM = GeyserEntityDefinition.inherited(ItemEntity::new, entityBase)
                     .type(EntityType.ITEM)
                     .heightAndWidth(0.25f)
                     .offset(0.125f)
                     .addTranslator(MetadataType.ITEM, ItemEntity::setItem)
                     .build();
-            LEASH_KNOT = EntityDefinition.inherited(LeashKnotEntity::new, entityBase)
+            LEASH_KNOT = GeyserEntityDefinition.inherited(LeashKnotEntity::new, entityBase)
                     .type(EntityType.LEASH_KNOT)
                     .height(0.5f).width(0.375f)
                     .build();
-            LIGHTNING_BOLT = EntityDefinition.inherited(LightningEntity::new, entityBase)
+            LIGHTNING_BOLT = GeyserEntityDefinition.inherited(LightningEntity::new, entityBase)
                     .type(EntityType.LIGHTNING_BOLT)
                     .build();
-            LLAMA_SPIT = EntityDefinition.inherited(ThrowableEntity::new, entityBase)
+            LLAMA_SPIT = GeyserEntityDefinition.inherited(ThrowableEntity::new, entityBase)
                     .type(EntityType.LLAMA_SPIT)
                     .heightAndWidth(0.25f)
                     .build();
-            PAINTING = EntityDefinition.<PaintingEntity>inherited(null, entityBase)
+            PAINTING = GeyserEntityDefinition.<PaintingEntity>inherited(null, entityBase)
                     .type(EntityType.PAINTING)
                     .addTranslator(MetadataType.PAINTING_VARIANT, PaintingEntity::setPaintingType)
                     .build();
-            SHULKER_BULLET = EntityDefinition.inherited(ThrowableEntity::new, entityBase)
+            SHULKER_BULLET = GeyserEntityDefinition.inherited(ThrowableEntity::new, entityBase)
                     .type(EntityType.SHULKER_BULLET)
                     .heightAndWidth(0.3125f)
                     .build();
-            TNT = EntityDefinition.inherited(TNTEntity::new, entityBase)
+            TNT = GeyserEntityDefinition.inherited(TNTEntity::new, entityBase)
                     .type(EntityType.TNT)
                     .heightAndWidth(0.98f)
                     .addTranslator(MetadataType.INT, TNTEntity::setFuseLength)
                     .build();
 
-            EntityDefinition<Entity> displayBase = EntityDefinition.inherited(entityBase.factory(), entityBase)
+            GeyserEntityDefinition<Entity> displayBase = GeyserEntityDefinition.inherited(entityBase.factory(), entityBase)
                     .addTranslator(null) // Interpolation start ticks
                     .addTranslator(null) // Interpolation duration ID
                     .addTranslator(null) // Translation
@@ -314,13 +314,13 @@ public final class EntityDefinitions {
                     .addTranslator(null) // Height
                     .addTranslator(null) // Glow color override
                     .build();
-            TEXT_DISPLAY = EntityDefinition.inherited(TextDisplayEntity::new, displayBase)
+            TEXT_DISPLAY = GeyserEntityDefinition.inherited(TextDisplayEntity::new, displayBase)
                     .type(EntityType.TEXT_DISPLAY)
                     .identifier("minecraft:armor_stand")
                     .addTranslator(MetadataType.CHAT, TextDisplayEntity::setText)
                     .build();
 
-            INTERACTION = EntityDefinition.inherited(InteractionEntity::new, entityBase)
+            INTERACTION = GeyserEntityDefinition.inherited(InteractionEntity::new, entityBase)
                     .type(EntityType.INTERACTION)
                     .heightAndWidth(1.0f) // default size until server specifies otherwise
                     .identifier("minecraft:armor_stand")
@@ -329,59 +329,59 @@ public final class EntityDefinitions {
                     .addTranslator(MetadataType.BOOLEAN, InteractionEntity::setResponse)
                     .build();
 
-            EntityDefinition<FireballEntity> fireballBase = EntityDefinition.inherited(FireballEntity::new, entityBase)
+            GeyserEntityDefinition<FireballEntity> fireballBase = GeyserEntityDefinition.inherited(FireballEntity::new, entityBase)
                     .addTranslator(null) // Item
                     .build();
-            FIREBALL = EntityDefinition.inherited(FireballEntity::new, fireballBase)
+            FIREBALL = GeyserEntityDefinition.inherited(FireballEntity::new, fireballBase)
                     .type(EntityType.FIREBALL)
                     .heightAndWidth(1.0f)
                     .build();
-            SMALL_FIREBALL = EntityDefinition.inherited(FireballEntity::new, fireballBase)
+            SMALL_FIREBALL = GeyserEntityDefinition.inherited(FireballEntity::new, fireballBase)
                     .type(EntityType.SMALL_FIREBALL)
                     .heightAndWidth(0.3125f)
                     .build();
 
-            EntityDefinition<ThrowableItemEntity> throwableItemBase = EntityDefinition.inherited(ThrowableItemEntity::new, entityBase)
+            GeyserEntityDefinition<ThrowableItemEntity> throwableItemBase = GeyserEntityDefinition.inherited(ThrowableItemEntity::new, entityBase)
                     .addTranslator(MetadataType.ITEM, ThrowableItemEntity::setItem)
                     .build();
-            EGG = EntityDefinition.inherited(ThrowableItemEntity::new, throwableItemBase)
+            EGG = GeyserEntityDefinition.inherited(ThrowableItemEntity::new, throwableItemBase)
                     .type(EntityType.EGG)
                     .heightAndWidth(0.25f)
                     .build();
-            ENDER_PEARL = EntityDefinition.inherited(ThrowableItemEntity::new, throwableItemBase)
+            ENDER_PEARL = GeyserEntityDefinition.inherited(ThrowableItemEntity::new, throwableItemBase)
                     .type(EntityType.ENDER_PEARL)
                     .heightAndWidth(0.25f)
                     .build();
-            EXPERIENCE_BOTTLE = EntityDefinition.inherited(ThrowableItemEntity::new, throwableItemBase)
+            EXPERIENCE_BOTTLE = GeyserEntityDefinition.inherited(ThrowableItemEntity::new, throwableItemBase)
                     .type(EntityType.EXPERIENCE_BOTTLE)
                     .heightAndWidth(0.25f)
                     .identifier("minecraft:xp_bottle")
                     .build();
-            POTION = EntityDefinition.inherited(ThrownPotionEntity::new, throwableItemBase)
+            POTION = GeyserEntityDefinition.inherited(ThrownPotionEntity::new, throwableItemBase)
                     .type(EntityType.POTION)
                     .heightAndWidth(0.25f)
                     .identifier("minecraft:splash_potion")
                     .build();
-            SNOWBALL = EntityDefinition.inherited(ThrowableItemEntity::new, throwableItemBase)
+            SNOWBALL = GeyserEntityDefinition.inherited(ThrowableItemEntity::new, throwableItemBase)
                     .type(EntityType.SNOWBALL)
                     .heightAndWidth(0.25f)
                     .build();
 
-            EntityDefinition<AbstractArrowEntity> abstractArrowBase = EntityDefinition.inherited(AbstractArrowEntity::new, entityBase)
+            GeyserEntityDefinition<AbstractArrowEntity> abstractArrowBase = GeyserEntityDefinition.inherited(AbstractArrowEntity::new, entityBase)
                     .addTranslator(MetadataType.BYTE, AbstractArrowEntity::setArrowFlags)
                     .addTranslator(null) // "Piercing level"
                     .build();
-            ARROW = EntityDefinition.inherited(TippedArrowEntity::new, abstractArrowBase)
+            ARROW = GeyserEntityDefinition.inherited(TippedArrowEntity::new, abstractArrowBase)
                     .type(EntityType.ARROW)
                     .heightAndWidth(0.25f)
                     .addTranslator(MetadataType.INT, TippedArrowEntity::setPotionEffectColor)
                     .build();
-            SPECTRAL_ARROW = EntityDefinition.inherited(abstractArrowBase.factory(), abstractArrowBase)
+            SPECTRAL_ARROW = GeyserEntityDefinition.inherited(abstractArrowBase.factory(), abstractArrowBase)
                     .type(EntityType.SPECTRAL_ARROW)
                     .heightAndWidth(0.25f)
                     .identifier("minecraft:arrow")
                     .build();
-            TRIDENT = EntityDefinition.inherited(TridentEntity::new, abstractArrowBase) // TODO remove class
+            TRIDENT = GeyserEntityDefinition.inherited(TridentEntity::new, abstractArrowBase) // TODO remove class
                     .type(EntityType.TRIDENT)
                     .identifier("minecraft:thrown_trident")
                     .addTranslator(null) // Loyalty
@@ -389,16 +389,16 @@ public final class EntityDefinitions {
                     .build();
 
             // Item frames are handled differently as they are blocks, not items, in Bedrock
-            ITEM_FRAME = EntityDefinition.<ItemFrameEntity>inherited(null, entityBase)
+            ITEM_FRAME = GeyserEntityDefinition.<ItemFrameEntity>inherited(null, entityBase)
                     .type(EntityType.ITEM_FRAME)
                     .addTranslator(MetadataType.ITEM, ItemFrameEntity::setItemInFrame)
                     .addTranslator(MetadataType.INT, ItemFrameEntity::setItemRotation)
                     .build();
-            GLOW_ITEM_FRAME = EntityDefinition.inherited(ITEM_FRAME.factory(), ITEM_FRAME)
+            GLOW_ITEM_FRAME = GeyserEntityDefinition.inherited(ITEM_FRAME.factory(), ITEM_FRAME)
                     .type(EntityType.GLOW_ITEM_FRAME)
                     .build();
 
-            MINECART = EntityDefinition.inherited(MinecartEntity::new, entityBase)
+            MINECART = GeyserEntityDefinition.inherited(MinecartEntity::new, entityBase)
                     .type(EntityType.MINECART)
                     .height(0.7f).width(0.98f)
                     .offset(0.35f)
@@ -411,40 +411,40 @@ public final class EntityDefinitions {
                     .addTranslator(MetadataType.INT, MinecartEntity::setCustomBlockOffset)
                     .addTranslator(MetadataType.BOOLEAN, MinecartEntity::setShowCustomBlock)
                     .build();
-            CHEST_MINECART = EntityDefinition.inherited(MINECART.factory(), MINECART)
+            CHEST_MINECART = GeyserEntityDefinition.inherited(MINECART.factory(), MINECART)
                     .type(EntityType.CHEST_MINECART)
                     .build();
-            COMMAND_BLOCK_MINECART = EntityDefinition.inherited(CommandBlockMinecartEntity::new, MINECART)
+            COMMAND_BLOCK_MINECART = GeyserEntityDefinition.inherited(CommandBlockMinecartEntity::new, MINECART)
                     .type(EntityType.COMMAND_BLOCK_MINECART)
                     .addTranslator(MetadataType.STRING, (entity, entityMetadata) -> entity.getDirtyMetadata().put(EntityDataTypes.COMMAND_BLOCK_NAME, entityMetadata.getValue()))
                     .addTranslator(MetadataType.CHAT, (entity, entityMetadata) -> entity.getDirtyMetadata().put(EntityDataTypes.COMMAND_BLOCK_LAST_OUTPUT, MessageTranslator.convertMessage(entityMetadata.getValue())))
                     .build();
-            FURNACE_MINECART = EntityDefinition.inherited(FurnaceMinecartEntity::new, MINECART)
+            FURNACE_MINECART = GeyserEntityDefinition.inherited(FurnaceMinecartEntity::new, MINECART)
                     .type(EntityType.FURNACE_MINECART)
                     .identifier("minecraft:minecart")
                     .addTranslator(MetadataType.BOOLEAN, FurnaceMinecartEntity::setHasFuel)
                     .build();
-            HOPPER_MINECART = EntityDefinition.inherited(MINECART.factory(), MINECART)
+            HOPPER_MINECART = GeyserEntityDefinition.inherited(MINECART.factory(), MINECART)
                     .type(EntityType.HOPPER_MINECART)
                     .build();
-            SPAWNER_MINECART = EntityDefinition.inherited(SpawnerMinecartEntity::new, MINECART)
+            SPAWNER_MINECART = GeyserEntityDefinition.inherited(SpawnerMinecartEntity::new, MINECART)
                     .type(EntityType.SPAWNER_MINECART)
                     .identifier("minecraft:minecart")
                     .build();
-            TNT_MINECART = EntityDefinition.inherited(MINECART.factory(), MINECART)
+            TNT_MINECART = GeyserEntityDefinition.inherited(MINECART.factory(), MINECART)
                     .type(EntityType.TNT_MINECART)
                     .build();
 
-            WITHER_SKULL = EntityDefinition.inherited(WitherSkullEntity::new, entityBase)
+            WITHER_SKULL = GeyserEntityDefinition.inherited(WitherSkullEntity::new, entityBase)
                     .type(EntityType.WITHER_SKULL)
                     .heightAndWidth(0.3125f)
                     .addTranslator(MetadataType.BOOLEAN, WitherSkullEntity::setDangerous)
                     .build();
-            WITHER_SKULL_DANGEROUS = EntityDefinition.inherited(WITHER_SKULL.factory(), WITHER_SKULL)
+            WITHER_SKULL_DANGEROUS = GeyserEntityDefinition.inherited(WITHER_SKULL.factory(), WITHER_SKULL)
                     .build(false);
         }
 
-        EntityDefinition<LivingEntity> livingEntityBase = EntityDefinition.inherited(LivingEntity::new, entityBase)
+        GeyserEntityDefinition<LivingEntity> livingEntityBase = GeyserEntityDefinition.inherited(LivingEntity::new, entityBase)
                 .addTranslator(MetadataType.BYTE, LivingEntity::setLivingEntityFlags)
                 .addTranslator(MetadataType.FLOAT, LivingEntity::setHealth)
                 .addTranslator(MetadataType.INT,
@@ -456,7 +456,7 @@ public final class EntityDefinitions {
                 .addTranslator(MetadataType.OPTIONAL_POSITION, LivingEntity::setBedPosition)
                 .build();
 
-        ARMOR_STAND = EntityDefinition.inherited(ArmorStandEntity::new, livingEntityBase)
+        ARMOR_STAND = GeyserEntityDefinition.inherited(ArmorStandEntity::new, livingEntityBase)
                 .type(EntityType.ARMOR_STAND)
                 .height(1.975f).width(0.5f)
                 .addTranslator(MetadataType.BYTE, ArmorStandEntity::setArmorStandFlags)
@@ -467,7 +467,7 @@ public final class EntityDefinitions {
                 .addTranslator(MetadataType.ROTATION, ArmorStandEntity::setLeftLegRotation)
                 .addTranslator(MetadataType.ROTATION, ArmorStandEntity::setRightLegRotation)
                 .build();
-        PLAYER = EntityDefinition.<PlayerEntity>inherited(null, livingEntityBase)
+        PLAYER = GeyserEntityDefinition.<PlayerEntity>inherited(null, livingEntityBase)
                 .type(EntityType.PLAYER)
                 .height(1.8f).width(0.6f)
                 .offset(1.62f)
@@ -479,29 +479,29 @@ public final class EntityDefinitions {
                 .addTranslator(MetadataType.NBT_TAG, PlayerEntity::setRightParrot)
                 .build();
 
-        EntityDefinition<MobEntity> mobEntityBase = EntityDefinition.inherited(MobEntity::new, livingEntityBase)
+        GeyserEntityDefinition<MobEntity> mobEntityBase = GeyserEntityDefinition.inherited(MobEntity::new, livingEntityBase)
                 .addTranslator(MetadataType.BYTE, MobEntity::setMobFlags)
                 .build();
 
         // Extends mob
         {
-            ALLAY = EntityDefinition.inherited(AllayEntity::new, mobEntityBase)
+            ALLAY = GeyserEntityDefinition.inherited(AllayEntity::new, mobEntityBase)
                     .type(EntityType.ALLAY)
                     .height(0.6f).width(0.35f)
                     .addTranslator(MetadataType.BOOLEAN, AllayEntity::setDancing)
                     .addTranslator(MetadataType.BOOLEAN, AllayEntity::setCanDuplicate)
                     .build();
-            BAT = EntityDefinition.inherited(BatEntity::new, mobEntityBase)
+            BAT = GeyserEntityDefinition.inherited(BatEntity::new, mobEntityBase)
                     .type(EntityType.BAT)
                     .height(0.9f).width(0.5f)
                     .addTranslator(MetadataType.BYTE, BatEntity::setBatFlags)
                     .build();
-            BLAZE = EntityDefinition.inherited(BlazeEntity::new, mobEntityBase)
+            BLAZE = GeyserEntityDefinition.inherited(BlazeEntity::new, mobEntityBase)
                     .type(EntityType.BLAZE)
                     .height(1.8f).width(0.6f)
                     .addTranslator(MetadataType.BYTE, BlazeEntity::setBlazeFlags)
                     .build();
-            CREEPER = EntityDefinition.inherited(CreeperEntity::new, mobEntityBase)
+            CREEPER = GeyserEntityDefinition.inherited(CreeperEntity::new, mobEntityBase)
                     .type(EntityType.CREEPER)
                     .height(1.7f).width(0.6f)
                     .offset(1.62f)
@@ -509,7 +509,7 @@ public final class EntityDefinitions {
                     .addTranslator(MetadataType.BOOLEAN, (entity, entityMetadata) -> entity.setFlag(EntityFlag.POWERED, ((BooleanEntityMetadata) entityMetadata).getPrimitiveValue()))
                     .addTranslator(MetadataType.BOOLEAN, CreeperEntity::setIgnited)
                     .build();
-            DOLPHIN = EntityDefinition.inherited(DolphinEntity::new, mobEntityBase)
+            DOLPHIN = GeyserEntityDefinition.inherited(DolphinEntity::new, mobEntityBase)
                     .type(EntityType.DOLPHIN)
                     .height(0.6f).width(0.9f)
                     //TODO check
@@ -517,95 +517,95 @@ public final class EntityDefinitions {
                     .addTranslator(null) // "got fish"
                     .addTranslator(null) // "moistness level"
                     .build();
-            ENDERMAN = EntityDefinition.inherited(EndermanEntity::new, mobEntityBase)
+            ENDERMAN = GeyserEntityDefinition.inherited(EndermanEntity::new, mobEntityBase)
                     .type(EntityType.ENDERMAN)
                     .height(2.9f).width(0.6f)
                     .addTranslator(MetadataType.OPTIONAL_BLOCK_STATE, EndermanEntity::setCarriedBlock)
                     .addTranslator(MetadataType.BOOLEAN, EndermanEntity::setScreaming)
                     .addTranslator(MetadataType.BOOLEAN, EndermanEntity::setAngry)
                     .build();
-            ENDERMITE = EntityDefinition.inherited(MonsterEntity::new, mobEntityBase)
+            ENDERMITE = GeyserEntityDefinition.inherited(MonsterEntity::new, mobEntityBase)
                     .type(EntityType.ENDERMITE)
                     .height(0.3f).width(0.4f)
                     .build();
-            ENDER_DRAGON = EntityDefinition.inherited(EnderDragonEntity::new, mobEntityBase)
+            ENDER_DRAGON = GeyserEntityDefinition.inherited(EnderDragonEntity::new, mobEntityBase)
                     .type(EntityType.ENDER_DRAGON)
                     .addTranslator(MetadataType.INT, EnderDragonEntity::setPhase)
                     .build();
-            GHAST = EntityDefinition.inherited(GhastEntity::new, mobEntityBase)
+            GHAST = GeyserEntityDefinition.inherited(GhastEntity::new, mobEntityBase)
                     .type(EntityType.GHAST)
                     .heightAndWidth(4.0f)
                     .addTranslator(MetadataType.BOOLEAN, GhastEntity::setGhastAttacking)
                     .build();
-            GIANT = EntityDefinition.inherited(GiantEntity::new, mobEntityBase)
+            GIANT = GeyserEntityDefinition.inherited(GiantEntity::new, mobEntityBase)
                     .type(EntityType.GIANT)
                     .height(1.8f).width(1.6f)
                     .offset(1.62f)
                     .identifier("minecraft:zombie")
                     .build();
-            IRON_GOLEM = EntityDefinition.inherited(IronGolemEntity::new, mobEntityBase)
+            IRON_GOLEM = GeyserEntityDefinition.inherited(IronGolemEntity::new, mobEntityBase)
                     .type(EntityType.IRON_GOLEM)
                     .height(2.7f).width(1.4f)
                     .addTranslator(null) // "is player created", which doesn't seem to do anything clientside
                     .build();
-            PHANTOM = EntityDefinition.inherited(PhantomEntity::new, mobEntityBase)
+            PHANTOM = GeyserEntityDefinition.inherited(PhantomEntity::new, mobEntityBase)
                     .type(EntityType.PHANTOM)
                     .height(0.5f).width(0.9f)
                     .offset(0.6f)
                     .addTranslator(MetadataType.INT, PhantomEntity::setPhantomScale)
                     .build();
-            SILVERFISH = EntityDefinition.inherited(MonsterEntity::new, mobEntityBase)
+            SILVERFISH = GeyserEntityDefinition.inherited(MonsterEntity::new, mobEntityBase)
                     .type(EntityType.SILVERFISH)
                     .height(0.3f).width(0.4f)
                     .build();
-            SHULKER = EntityDefinition.inherited(ShulkerEntity::new, mobEntityBase)
+            SHULKER = GeyserEntityDefinition.inherited(ShulkerEntity::new, mobEntityBase)
                     .type(EntityType.SHULKER)
                     .heightAndWidth(1f)
                     .addTranslator(MetadataType.DIRECTION, ShulkerEntity::setAttachedFace)
                     .addTranslator(MetadataType.BYTE, ShulkerEntity::setShulkerHeight)
                     .addTranslator(MetadataType.BYTE, ShulkerEntity::setShulkerColor)
                     .build();
-            SKELETON = EntityDefinition.inherited(SkeletonEntity::new, mobEntityBase)
+            SKELETON = GeyserEntityDefinition.inherited(SkeletonEntity::new, mobEntityBase)
                     .type(EntityType.SKELETON)
                     .height(1.8f).width(0.6f)
                     .offset(1.62f)
                     .addTranslator(MetadataType.BOOLEAN, SkeletonEntity::setConvertingToStray)
                     .build();
-            SNOW_GOLEM = EntityDefinition.inherited(SnowGolemEntity::new, mobEntityBase)
+            SNOW_GOLEM = GeyserEntityDefinition.inherited(SnowGolemEntity::new, mobEntityBase)
                     .type(EntityType.SNOW_GOLEM)
                     .height(1.9f).width(0.7f)
                     .addTranslator(MetadataType.BYTE, SnowGolemEntity::setSnowGolemFlags)
                     .build();
-            SPIDER = EntityDefinition.inherited(SpiderEntity::new, mobEntityBase)
+            SPIDER = GeyserEntityDefinition.inherited(SpiderEntity::new, mobEntityBase)
                     .type(EntityType.SPIDER)
                     .height(0.9f).width(1.4f)
                     .offset(1f)
                     .addTranslator(MetadataType.BYTE, SpiderEntity::setSpiderFlags)
                     .build();
-            CAVE_SPIDER = EntityDefinition.inherited(SpiderEntity::new, SPIDER)
+            CAVE_SPIDER = GeyserEntityDefinition.inherited(SpiderEntity::new, SPIDER)
                     .type(EntityType.CAVE_SPIDER)
                     .height(0.5f).width(0.7f)
                     .build();
-            SQUID = EntityDefinition.inherited(SquidEntity::new, mobEntityBase)
+            SQUID = GeyserEntityDefinition.inherited(SquidEntity::new, mobEntityBase)
                     .type(EntityType.SQUID)
                     .heightAndWidth(0.8f)
                     .build();
-            STRAY = EntityDefinition.inherited(AbstractSkeletonEntity::new, mobEntityBase)
+            STRAY = GeyserEntityDefinition.inherited(AbstractSkeletonEntity::new, mobEntityBase)
                     .type(EntityType.STRAY)
                     .height(1.8f).width(0.6f)
                     .offset(1.62f)
                     .build();
-            VEX = EntityDefinition.inherited(VexEntity::new, mobEntityBase)
+            VEX = GeyserEntityDefinition.inherited(VexEntity::new, mobEntityBase)
                     .type(EntityType.VEX)
                     .height(0.8f).width(0.4f)
                     .addTranslator(MetadataType.BYTE, VexEntity::setVexFlags)
                     .build();
-            WARDEN = EntityDefinition.inherited(WardenEntity::new, mobEntityBase)
+            WARDEN = GeyserEntityDefinition.inherited(WardenEntity::new, mobEntityBase)
                     .type(EntityType.WARDEN)
                     .height(2.9f).width(0.9f)
                     .addTranslator(MetadataType.INT, WardenEntity::setAngerLevel)
                     .build();
-            WITHER = EntityDefinition.inherited(WitherEntity::new, mobEntityBase)
+            WITHER = GeyserEntityDefinition.inherited(WitherEntity::new, mobEntityBase)
                     .type(EntityType.WITHER)
                     .height(3.5f).width(0.9f)
                     .addTranslator(MetadataType.INT, WitherEntity::setTarget1)
@@ -613,16 +613,16 @@ public final class EntityDefinitions {
                     .addTranslator(MetadataType.INT, WitherEntity::setTarget3)
                     .addTranslator(MetadataType.INT, WitherEntity::setInvulnerableTicks)
                     .build();
-            WITHER_SKELETON = EntityDefinition.inherited(AbstractSkeletonEntity::new, mobEntityBase)
+            WITHER_SKELETON = GeyserEntityDefinition.inherited(AbstractSkeletonEntity::new, mobEntityBase)
                     .type(EntityType.WITHER_SKELETON)
                     .height(2.4f).width(0.7f)
                     .build();
-            ZOGLIN = EntityDefinition.inherited(ZoglinEntity::new, mobEntityBase)
+            ZOGLIN = GeyserEntityDefinition.inherited(ZoglinEntity::new, mobEntityBase)
                     .type(EntityType.ZOGLIN)
                     .height(1.4f).width(1.3965f)
                     .addTranslator(MetadataType.BOOLEAN, ZoglinEntity::setBaby)
                     .build();
-            ZOMBIE = EntityDefinition.inherited(ZombieEntity::new, mobEntityBase)
+            ZOMBIE = GeyserEntityDefinition.inherited(ZombieEntity::new, mobEntityBase)
                     .type(EntityType.ZOMBIE)
                     .height(1.8f).width(0.6f)
                     .offset(1.62f)
@@ -630,7 +630,7 @@ public final class EntityDefinitions {
                     .addTranslator(null) // "set special type", doesn't do anything
                     .addTranslator(MetadataType.BOOLEAN, ZombieEntity::setConvertingToDrowned)
                     .build();
-            ZOMBIE_VILLAGER = EntityDefinition.inherited(ZombieVillagerEntity::new, ZOMBIE)
+            ZOMBIE_VILLAGER = GeyserEntityDefinition.inherited(ZombieVillagerEntity::new, ZOMBIE)
                     .type(EntityType.ZOMBIE_VILLAGER)
                     .height(1.8f).width(0.6f)
                     .offset(1.62f)
@@ -638,120 +638,120 @@ public final class EntityDefinitions {
                     .addTranslator(MetadataType.BOOLEAN, ZombieVillagerEntity::setTransforming)
                     .addTranslator(MetadataType.VILLAGER_DATA, ZombieVillagerEntity::setZombieVillagerData)
                     .build();
-            ZOMBIFIED_PIGLIN = EntityDefinition.inherited(ZombifiedPiglinEntity::new, ZOMBIE) //TODO test how zombie entity metadata is handled?
+            ZOMBIFIED_PIGLIN = GeyserEntityDefinition.inherited(ZombifiedPiglinEntity::new, ZOMBIE) //TODO test how zombie entity metadata is handled?
                     .type(EntityType.ZOMBIFIED_PIGLIN)
                     .height(1.95f).width(0.6f)
                     .offset(1.62f)
                     .identifier("minecraft:zombie_pigman")
                     .build();
 
-            DROWNED = EntityDefinition.inherited(ZOMBIE.factory(), ZOMBIE)
+            DROWNED = GeyserEntityDefinition.inherited(ZOMBIE.factory(), ZOMBIE)
                     .type(EntityType.DROWNED)
                     .height(1.95f).width(0.6f)
                     .build();
-            HUSK = EntityDefinition.inherited(ZOMBIE.factory(), ZOMBIE)
+            HUSK = GeyserEntityDefinition.inherited(ZOMBIE.factory(), ZOMBIE)
                     .type(EntityType.HUSK)
                     .build();
 
-            GUARDIAN = EntityDefinition.inherited(GuardianEntity::new, mobEntityBase)
+            GUARDIAN = GeyserEntityDefinition.inherited(GuardianEntity::new, mobEntityBase)
                     .type(EntityType.GUARDIAN)
                     .heightAndWidth(0.85f)
                     .addTranslator(null) // Moving //TODO
                     .addTranslator(MetadataType.INT, GuardianEntity::setGuardianTarget)
                     .build();
-            ELDER_GUARDIAN = EntityDefinition.inherited(ElderGuardianEntity::new, GUARDIAN)
+            ELDER_GUARDIAN = GeyserEntityDefinition.inherited(ElderGuardianEntity::new, GUARDIAN)
                     .type(EntityType.ELDER_GUARDIAN)
                     .heightAndWidth(1.9975f)
                     .build();
 
-            SLIME = EntityDefinition.inherited(SlimeEntity::new, mobEntityBase)
+            SLIME = GeyserEntityDefinition.inherited(SlimeEntity::new, mobEntityBase)
                     .type(EntityType.SLIME)
                     .heightAndWidth(0.51f)
                     .addTranslator(MetadataType.INT, SlimeEntity::setScale)
                     .build();
-            MAGMA_CUBE = EntityDefinition.inherited(MagmaCubeEntity::new, SLIME)
+            MAGMA_CUBE = GeyserEntityDefinition.inherited(MagmaCubeEntity::new, SLIME)
                     .type(EntityType.MAGMA_CUBE)
                     .build();
 
-            EntityDefinition<AbstractFishEntity> abstractFishEntityBase = EntityDefinition.inherited(AbstractFishEntity::new, mobEntityBase)
+            GeyserEntityDefinition<AbstractFishEntity> abstractFishEntityBase = GeyserEntityDefinition.inherited(AbstractFishEntity::new, mobEntityBase)
                     .addTranslator(null) // From bucket
                     .build();
-            COD = EntityDefinition.inherited(abstractFishEntityBase.factory(), abstractFishEntityBase)
+            COD = GeyserEntityDefinition.inherited(abstractFishEntityBase.factory(), abstractFishEntityBase)
                     .type(EntityType.COD)
                     .height(0.25f).width(0.5f)
                     .build();
-            PUFFERFISH = EntityDefinition.inherited(PufferFishEntity::new, abstractFishEntityBase)
+            PUFFERFISH = GeyserEntityDefinition.inherited(PufferFishEntity::new, abstractFishEntityBase)
                     .type(EntityType.PUFFERFISH)
                     .heightAndWidth(0.7f)
                     .addTranslator(MetadataType.INT, PufferFishEntity::setPufferfishSize)
                     .build();
-            SALMON = EntityDefinition.inherited(abstractFishEntityBase.factory(), abstractFishEntityBase)
+            SALMON = GeyserEntityDefinition.inherited(abstractFishEntityBase.factory(), abstractFishEntityBase)
                     .type(EntityType.SALMON)
                     .height(0.5f).width(0.7f)
                     .build();
-            TADPOLE = EntityDefinition.inherited(TadpoleEntity::new, abstractFishEntityBase)
+            TADPOLE = GeyserEntityDefinition.inherited(TadpoleEntity::new, abstractFishEntityBase)
                     .type(EntityType.TADPOLE)
                     .height(0.3f).width(0.4f)
                     .build();
-            TROPICAL_FISH = EntityDefinition.inherited(TropicalFishEntity::new, abstractFishEntityBase)
+            TROPICAL_FISH = GeyserEntityDefinition.inherited(TropicalFishEntity::new, abstractFishEntityBase)
                     .type(EntityType.TROPICAL_FISH)
                     .heightAndWidth(0.6f)
                     .identifier("minecraft:tropicalfish")
                     .addTranslator(MetadataType.INT, TropicalFishEntity::setFishVariant)
                     .build();
 
-            EntityDefinition<BasePiglinEntity> abstractPiglinEntityBase = EntityDefinition.inherited(BasePiglinEntity::new, mobEntityBase)
+            GeyserEntityDefinition<BasePiglinEntity> abstractPiglinEntityBase = GeyserEntityDefinition.inherited(BasePiglinEntity::new, mobEntityBase)
                     .addTranslator(MetadataType.BOOLEAN, BasePiglinEntity::setImmuneToZombification)
                     .build();
-            PIGLIN = EntityDefinition.inherited(PiglinEntity::new, abstractPiglinEntityBase)
+            PIGLIN = GeyserEntityDefinition.inherited(PiglinEntity::new, abstractPiglinEntityBase)
                     .type(EntityType.PIGLIN)
                     .height(1.95f).width(0.6f)
                     .addTranslator(MetadataType.BOOLEAN, PiglinEntity::setBaby)
                     .addTranslator(MetadataType.BOOLEAN, PiglinEntity::setChargingCrossbow)
                     .addTranslator(MetadataType.BOOLEAN, PiglinEntity::setDancing)
                     .build();
-            PIGLIN_BRUTE = EntityDefinition.inherited(abstractPiglinEntityBase.factory(), abstractPiglinEntityBase)
+            PIGLIN_BRUTE = GeyserEntityDefinition.inherited(abstractPiglinEntityBase.factory(), abstractPiglinEntityBase)
                     .type(EntityType.PIGLIN_BRUTE)
                     .height(1.95f).width(0.6f)
                     .build();
 
-            GLOW_SQUID = EntityDefinition.inherited(GlowSquidEntity::new, SQUID)
+            GLOW_SQUID = GeyserEntityDefinition.inherited(GlowSquidEntity::new, SQUID)
                     .type(EntityType.GLOW_SQUID)
                     .addTranslator(null) // Set dark ticks remaining, possible TODO
                     .build();
 
-            EntityDefinition<RaidParticipantEntity> raidParticipantEntityBase = EntityDefinition.inherited(RaidParticipantEntity::new, mobEntityBase)
+            GeyserEntityDefinition<RaidParticipantEntity> raidParticipantEntityBase = GeyserEntityDefinition.inherited(RaidParticipantEntity::new, mobEntityBase)
                     .addTranslator(null) // Celebrating //TODO
                     .build();
-            EntityDefinition<SpellcasterIllagerEntity> spellcasterEntityBase = EntityDefinition.inherited(SpellcasterIllagerEntity::new, raidParticipantEntityBase)
+            GeyserEntityDefinition<SpellcasterIllagerEntity> spellcasterEntityBase = GeyserEntityDefinition.inherited(SpellcasterIllagerEntity::new, raidParticipantEntityBase)
                     .addTranslator(MetadataType.BYTE, SpellcasterIllagerEntity::setSpellType)
                     .build();
-            EVOKER = EntityDefinition.inherited(spellcasterEntityBase.factory(), spellcasterEntityBase)
+            EVOKER = GeyserEntityDefinition.inherited(spellcasterEntityBase.factory(), spellcasterEntityBase)
                     .type(EntityType.EVOKER)
                     .height(1.95f).width(0.6f)
                     .identifier("minecraft:evocation_illager")
                     .build();
-            ILLUSIONER = EntityDefinition.inherited(spellcasterEntityBase.factory(), spellcasterEntityBase)
+            ILLUSIONER = GeyserEntityDefinition.inherited(spellcasterEntityBase.factory(), spellcasterEntityBase)
                     .type(EntityType.ILLUSIONER)
                     .height(1.95f).width(0.6f)
                     .identifier("minecraft:evocation_illager")
                     .build();
-            PILLAGER = EntityDefinition.inherited(PillagerEntity::new, raidParticipantEntityBase)
+            PILLAGER = GeyserEntityDefinition.inherited(PillagerEntity::new, raidParticipantEntityBase)
                     .type(EntityType.PILLAGER)
                     .height(1.8f).width(0.6f)
                     .offset(1.62f)
                     .addTranslator(null) // Charging; doesn't have an equivalent on Bedrock //TODO check
                     .build();
-            RAVAGER = EntityDefinition.inherited(raidParticipantEntityBase.factory(), raidParticipantEntityBase)
+            RAVAGER = GeyserEntityDefinition.inherited(raidParticipantEntityBase.factory(), raidParticipantEntityBase)
                     .type(EntityType.RAVAGER)
                     .height(1.9f).width(1.2f)
                     .build();
-            VINDICATOR = EntityDefinition.inherited(VindicatorEntity::new, raidParticipantEntityBase)
+            VINDICATOR = GeyserEntityDefinition.inherited(VindicatorEntity::new, raidParticipantEntityBase)
                     .type(EntityType.VINDICATOR)
                     .height(1.8f).width(0.6f)
                     .offset(1.62f)
                     .build();
-            WITCH = EntityDefinition.inherited(raidParticipantEntityBase.factory(), raidParticipantEntityBase)
+            WITCH = GeyserEntityDefinition.inherited(raidParticipantEntityBase.factory(), raidParticipantEntityBase)
                     .type(EntityType.WITCH)
                     .height(1.8f).width(0.6f)
                     .offset(1.62f)
@@ -759,34 +759,34 @@ public final class EntityDefinitions {
                     .build();
         }
 
-        EntityDefinition<AgeableEntity> ageableEntityBase = EntityDefinition.inherited(AgeableEntity::new, mobEntityBase)
+        GeyserEntityDefinition<AgeableEntity> ageableEntityBase = GeyserEntityDefinition.inherited(AgeableEntity::new, mobEntityBase)
                 .addTranslator(MetadataType.BOOLEAN, AgeableEntity::setBaby)
                 .build();
 
         // Extends ageable
         {
-            AXOLOTL = EntityDefinition.inherited(AxolotlEntity::new, ageableEntityBase)
+            AXOLOTL = GeyserEntityDefinition.inherited(AxolotlEntity::new, ageableEntityBase)
                     .type(EntityType.AXOLOTL)
                     .height(0.42f).width(0.7f)
                     .addTranslator(MetadataType.INT, AxolotlEntity::setVariant)
                     .addTranslator(MetadataType.BOOLEAN, AxolotlEntity::setPlayingDead)
                     .addTranslator(null) // From bucket
                     .build();
-            BEE = EntityDefinition.inherited(BeeEntity::new, ageableEntityBase)
+            BEE = GeyserEntityDefinition.inherited(BeeEntity::new, ageableEntityBase)
                     .type(EntityType.BEE)
                     .heightAndWidth(0.6f)
                     .addTranslator(MetadataType.BYTE, BeeEntity::setBeeFlags)
                     .addTranslator(MetadataType.INT, BeeEntity::setAngerTime)
                     .build();
-            CHICKEN = EntityDefinition.inherited(ChickenEntity::new, ageableEntityBase)
+            CHICKEN = GeyserEntityDefinition.inherited(ChickenEntity::new, ageableEntityBase)
                     .type(EntityType.CHICKEN)
                     .height(0.7f).width(0.4f)
                     .build();
-            COW = EntityDefinition.inherited(CowEntity::new, ageableEntityBase)
+            COW = GeyserEntityDefinition.inherited(CowEntity::new, ageableEntityBase)
                     .type(EntityType.COW)
                     .height(1.4f).width(0.9f)
                     .build();
-            FOX = EntityDefinition.inherited(FoxEntity::new, ageableEntityBase)
+            FOX = GeyserEntityDefinition.inherited(FoxEntity::new, ageableEntityBase)
                     .type(EntityType.FOX)
                     .height(0.7f).width(0.6f)
                     .addTranslator(MetadataType.INT, FoxEntity::setFoxVariant)
@@ -794,35 +794,35 @@ public final class EntityDefinitions {
                     .addTranslator(null) // Trusted player 1
                     .addTranslator(null) // Trusted player 2
                     .build();
-            FROG = EntityDefinition.inherited(FrogEntity::new, ageableEntityBase)
+            FROG = GeyserEntityDefinition.inherited(FrogEntity::new, ageableEntityBase)
                     .type(EntityType.FROG)
                     .heightAndWidth(0.5f)
                     .addTranslator(MetadataType.FROG_VARIANT, FrogEntity::setFrogVariant)
                     .addTranslator(MetadataType.OPTIONAL_VARINT, FrogEntity::setTongueTarget)
                     .build();
-            HOGLIN = EntityDefinition.inherited(HoglinEntity::new, ageableEntityBase)
+            HOGLIN = GeyserEntityDefinition.inherited(HoglinEntity::new, ageableEntityBase)
                     .type(EntityType.HOGLIN)
                     .height(1.4f).width(1.3965f)
                     .addTranslator(MetadataType.BOOLEAN, HoglinEntity::setImmuneToZombification)
                     .build();
-            GOAT = EntityDefinition.inherited(GoatEntity::new, ageableEntityBase)
+            GOAT = GeyserEntityDefinition.inherited(GoatEntity::new, ageableEntityBase)
                     .type(EntityType.GOAT)
                     .height(1.3f).width(0.9f)
                     .addTranslator(MetadataType.BOOLEAN, GoatEntity::setScreamer)
                     .addTranslator(MetadataType.BOOLEAN, GoatEntity::setHasLeftHorn)
                     .addTranslator(MetadataType.BOOLEAN, GoatEntity::setHasRightHorn)
                     .build();
-            MOOSHROOM = EntityDefinition.inherited(MooshroomEntity::new, ageableEntityBase)
+            MOOSHROOM = GeyserEntityDefinition.inherited(MooshroomEntity::new, ageableEntityBase)
                     .type(EntityType.MOOSHROOM)
                     .height(1.4f).width(0.9f)
                     .addTranslator(MetadataType.STRING, MooshroomEntity::setVariant)
                     .build();
-            OCELOT = EntityDefinition.inherited(OcelotEntity::new, ageableEntityBase)
+            OCELOT = GeyserEntityDefinition.inherited(OcelotEntity::new, ageableEntityBase)
                     .type(EntityType.OCELOT)
                     .height(0.7f).width(0.6f)
                     .addTranslator(MetadataType.BOOLEAN, (ocelotEntity, entityMetadata) -> ocelotEntity.setFlag(EntityFlag.TRUSTING, ((BooleanEntityMetadata) entityMetadata).getPrimitiveValue()))
                     .build();
-            PANDA = EntityDefinition.inherited(PandaEntity::new, ageableEntityBase)
+            PANDA = GeyserEntityDefinition.inherited(PandaEntity::new, ageableEntityBase)
                     .type(EntityType.PANDA)
                     .height(1.25f).width(1.125f)
                     .addTranslator(null) // Unhappy counter
@@ -832,41 +832,41 @@ public final class EntityDefinitions {
                     .addTranslator(MetadataType.BYTE, PandaEntity::setHiddenGene)
                     .addTranslator(MetadataType.BYTE, PandaEntity::setPandaFlags)
                     .build();
-            PIG = EntityDefinition.inherited(PigEntity::new, ageableEntityBase)
+            PIG = GeyserEntityDefinition.inherited(PigEntity::new, ageableEntityBase)
                     .type(EntityType.PIG)
                     .heightAndWidth(0.9f)
                     .addTranslator(MetadataType.BOOLEAN, (pigEntity, entityMetadata) -> pigEntity.setFlag(EntityFlag.SADDLED, ((BooleanEntityMetadata) entityMetadata).getPrimitiveValue()))
                     .addTranslator(null) // Boost time
                     .build();
-            POLAR_BEAR = EntityDefinition.inherited(PolarBearEntity::new, ageableEntityBase)
+            POLAR_BEAR = GeyserEntityDefinition.inherited(PolarBearEntity::new, ageableEntityBase)
                     .type(EntityType.POLAR_BEAR)
                     .height(1.4f).width(1.3f)
                     .addTranslator(MetadataType.BOOLEAN, (entity, entityMetadata) -> entity.setFlag(EntityFlag.STANDING, ((BooleanEntityMetadata) entityMetadata).getPrimitiveValue()))
                     .build();
-            RABBIT = EntityDefinition.inherited(RabbitEntity::new, ageableEntityBase)
+            RABBIT = GeyserEntityDefinition.inherited(RabbitEntity::new, ageableEntityBase)
                     .type(EntityType.RABBIT)
                     .height(0.5f).width(0.4f)
                     .addTranslator(MetadataType.INT, RabbitEntity::setRabbitVariant)
                     .build();
-            SHEEP = EntityDefinition.inherited(SheepEntity::new, ageableEntityBase)
+            SHEEP = GeyserEntityDefinition.inherited(SheepEntity::new, ageableEntityBase)
                     .type(EntityType.SHEEP)
                     .height(1.3f).width(0.9f)
                     .addTranslator(MetadataType.BYTE, SheepEntity::setSheepFlags)
                     .build();
-            SNIFFER = EntityDefinition.inherited(SnifferEntity::new, ageableEntityBase)
+            SNIFFER = GeyserEntityDefinition.inherited(SnifferEntity::new, ageableEntityBase)
                     .type(EntityType.SNIFFER)
                     .height(1.75f).width(1.9f)
                     .addTranslator(MetadataType.SNIFFER_STATE, SnifferEntity::setSnifferState)
                     .addTranslator(null) // Integer, drop seed at tick
                     .build();
-            STRIDER = EntityDefinition.inherited(StriderEntity::new, ageableEntityBase)
+            STRIDER = GeyserEntityDefinition.inherited(StriderEntity::new, ageableEntityBase)
                     .type(EntityType.STRIDER)
                     .height(1.7f).width(0.9f)
                     .addTranslator(null) // Boost time
                     .addTranslator(MetadataType.BOOLEAN, StriderEntity::setCold)
                     .addTranslator(MetadataType.BOOLEAN, StriderEntity::setSaddled)
                     .build();
-            TURTLE = EntityDefinition.inherited(TurtleEntity::new, ageableEntityBase)
+            TURTLE = GeyserEntityDefinition.inherited(TurtleEntity::new, ageableEntityBase)
                     .type(EntityType.TURTLE)
                     .height(0.4f).width(1.2f)
                     .addTranslator(null) // Home position
@@ -877,17 +877,17 @@ public final class EntityDefinitions {
                     .addTranslator(null) // Travelling
                     .build();
 
-            EntityDefinition<AbstractMerchantEntity> abstractVillagerEntityBase = EntityDefinition.inherited(AbstractMerchantEntity::new, ageableEntityBase)
+            GeyserEntityDefinition<AbstractMerchantEntity> abstractVillagerEntityBase = GeyserEntityDefinition.inherited(AbstractMerchantEntity::new, ageableEntityBase)
                     .addTranslator(null) // Unhappy ticks
                     .build();
-            VILLAGER = EntityDefinition.inherited(VillagerEntity::new, abstractVillagerEntityBase)
+            VILLAGER = GeyserEntityDefinition.inherited(VillagerEntity::new, abstractVillagerEntityBase)
                     .type(EntityType.VILLAGER)
                     .height(1.8f).width(0.6f)
                     .offset(1.62f)
                     .identifier("minecraft:villager_v2")
                     .addTranslator(MetadataType.VILLAGER_DATA, VillagerEntity::setVillagerData)
                     .build();
-            WANDERING_TRADER = EntityDefinition.inherited(abstractVillagerEntityBase.factory(), abstractVillagerEntityBase)
+            WANDERING_TRADER = GeyserEntityDefinition.inherited(abstractVillagerEntityBase.factory(), abstractVillagerEntityBase)
                     .type(EntityType.WANDERING_TRADER)
                     .height(1.8f).width(0.6f)
                     .offset(1.62f)
@@ -896,57 +896,57 @@ public final class EntityDefinitions {
 
         // Horses
         {
-            EntityDefinition<AbstractHorseEntity> abstractHorseEntityBase = EntityDefinition.inherited(AbstractHorseEntity::new, ageableEntityBase)
+            GeyserEntityDefinition<AbstractHorseEntity> abstractHorseEntityBase = GeyserEntityDefinition.inherited(AbstractHorseEntity::new, ageableEntityBase)
                     .addTranslator(MetadataType.BYTE, AbstractHorseEntity::setHorseFlags)
                     .build();
-            CAMEL = EntityDefinition.inherited(CamelEntity::new, abstractHorseEntityBase)
+            CAMEL = GeyserEntityDefinition.inherited(CamelEntity::new, abstractHorseEntityBase)
                     .type(EntityType.CAMEL)
                     .height(2.375f).width(1.7f)
                     .addTranslator(MetadataType.BOOLEAN, CamelEntity::setDashing)
                     .addTranslator(null) // Last pose change tick
                     .build();
-            HORSE = EntityDefinition.inherited(HorseEntity::new, abstractHorseEntityBase)
+            HORSE = GeyserEntityDefinition.inherited(HorseEntity::new, abstractHorseEntityBase)
                     .type(EntityType.HORSE)
                     .height(1.6f).width(1.3965f)
                     .addTranslator(MetadataType.INT, HorseEntity::setHorseVariant)
                     .build();
-            SKELETON_HORSE = EntityDefinition.inherited(SkeletonHorseEntity::new, abstractHorseEntityBase)
+            SKELETON_HORSE = GeyserEntityDefinition.inherited(SkeletonHorseEntity::new, abstractHorseEntityBase)
                     .type(EntityType.SKELETON_HORSE)
                     .height(1.6f).width(1.3965f)
                     .build();
-            ZOMBIE_HORSE = EntityDefinition.inherited(ZombieHorseEntity::new, abstractHorseEntityBase)
+            ZOMBIE_HORSE = GeyserEntityDefinition.inherited(ZombieHorseEntity::new, abstractHorseEntityBase)
                     .type(EntityType.ZOMBIE_HORSE)
                     .height(1.6f).width(1.3965f)
                     .build();
-            EntityDefinition<ChestedHorseEntity> chestedHorseEntityBase = EntityDefinition.inherited(ChestedHorseEntity::new, abstractHorseEntityBase)
+            GeyserEntityDefinition<ChestedHorseEntity> chestedHorseEntityBase = GeyserEntityDefinition.inherited(ChestedHorseEntity::new, abstractHorseEntityBase)
                     .addTranslator(MetadataType.BOOLEAN, (horseEntity, entityMetadata) -> horseEntity.setFlag(EntityFlag.CHESTED, ((BooleanEntityMetadata) entityMetadata).getPrimitiveValue()))
                     .build();
-            DONKEY = EntityDefinition.inherited(chestedHorseEntityBase.factory(), chestedHorseEntityBase)
+            DONKEY = GeyserEntityDefinition.inherited(chestedHorseEntityBase.factory(), chestedHorseEntityBase)
                     .type(EntityType.DONKEY)
                     .height(1.6f).width(1.3965f)
                     .build();
-            MULE = EntityDefinition.inherited(chestedHorseEntityBase.factory(), chestedHorseEntityBase)
+            MULE = GeyserEntityDefinition.inherited(chestedHorseEntityBase.factory(), chestedHorseEntityBase)
                     .type(EntityType.MULE)
                     .height(1.6f).width(1.3965f)
                     .build();
-            LLAMA = EntityDefinition.inherited(LlamaEntity::new, chestedHorseEntityBase)
+            LLAMA = GeyserEntityDefinition.inherited(LlamaEntity::new, chestedHorseEntityBase)
                     .type(EntityType.LLAMA)
                     .height(1.87f).width(0.9f)
                     .addTranslator(MetadataType.INT, (entity, entityMetadata) -> entity.getDirtyMetadata().put(EntityDataTypes.STRENGTH, entityMetadata.getValue()))
                     .addTranslator(MetadataType.INT, LlamaEntity::setCarpetedColor)
                     .addTranslator(MetadataType.INT, (entity, entityMetadata) -> entity.getDirtyMetadata().put(EntityDataTypes.VARIANT, entityMetadata.getValue()))
                     .build();
-            TRADER_LLAMA = EntityDefinition.inherited(TraderLlamaEntity::new, LLAMA)
+            TRADER_LLAMA = GeyserEntityDefinition.inherited(TraderLlamaEntity::new, LLAMA)
                     .type(EntityType.TRADER_LLAMA)
                     .identifier("minecraft:llama")
                     .build();
         }
 
-        EntityDefinition<TameableEntity> tameableEntityBase = EntityDefinition.inherited(TameableEntity::new, ageableEntityBase)
+        GeyserEntityDefinition<TameableEntity> tameableEntityBase = GeyserEntityDefinition.inherited(TameableEntity::new, ageableEntityBase)
                 .addTranslator(MetadataType.BYTE, TameableEntity::setTameableFlags)
                 .addTranslator(MetadataType.OPTIONAL_UUID, TameableEntity::setOwner)
                 .build();
-        CAT = EntityDefinition.inherited(CatEntity::new, tameableEntityBase)
+        CAT = GeyserEntityDefinition.inherited(CatEntity::new, tameableEntityBase)
                 .type(EntityType.CAT)
                 .height(0.35f).width(0.3f)
                 .addTranslator(MetadataType.CAT_VARIANT, CatEntity::setCatVariant)
@@ -954,12 +954,12 @@ public final class EntityDefinitions {
                 .addTranslator(null) // "resting state one" //TODO
                 .addTranslator(MetadataType.INT, CatEntity::setCollarColor)
                 .build();
-        PARROT = EntityDefinition.inherited(ParrotEntity::new, tameableEntityBase)
+        PARROT = GeyserEntityDefinition.inherited(ParrotEntity::new, tameableEntityBase)
                 .type(EntityType.PARROT)
                 .height(0.9f).width(0.5f)
                 .addTranslator(MetadataType.INT, (parrotEntity, entityMetadata) -> parrotEntity.getDirtyMetadata().put(EntityDataTypes.VARIANT, entityMetadata.getValue())) // Parrot color
                 .build();
-        WOLF = EntityDefinition.inherited(WolfEntity::new, tameableEntityBase)
+        WOLF = GeyserEntityDefinition.inherited(WolfEntity::new, tameableEntityBase)
                 .type(EntityType.WOLF)
                 .height(0.85f).width(0.6f)
                 // "Begging" on wiki.vg, "Interested" in Nukkit - the tilt of the head
@@ -969,11 +969,11 @@ public final class EntityDefinitions {
                 .build();
 
         // As of 1.18 these don't track entity data at all
-        ENDER_DRAGON_PART = EntityDefinition.<EnderDragonPartEntity>builder(null)
+        ENDER_DRAGON_PART = GeyserEntityDefinition.<EnderDragonPartEntity>builder(null)
                 .identifier("minecraft:armor_stand") // Emulated
                 .build(false); // Never sent over the network
 
-        Registries.JAVA_ENTITY_IDENTIFIERS.get().put("minecraft:marker", null); // We don't need an entity definition for this as it is never sent over the network
+        Registries.ENTITY_IDENTIFIERS.get().put("minecraft:marker", null); // We don't need an entity definition for this as it is never sent over the network
     }
 
     public static void init() {
diff --git a/core/src/main/java/org/geysermc/geyser/entity/EntityDefinition.java b/core/src/main/java/org/geysermc/geyser/entity/GeyserEntityDefinition.java
similarity index 51%
rename from core/src/main/java/org/geysermc/geyser/entity/EntityDefinition.java
rename to core/src/main/java/org/geysermc/geyser/entity/GeyserEntityDefinition.java
index 566b3daff10eea40a6cd0ef61c164c096f6ef4d6..0529116a70fda6cc0488aeb8db8a35d33833ad64 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/EntityDefinition.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/GeyserEntityDefinition.java
@@ -31,14 +31,21 @@ import com.github.steveice10.mc.protocol.data.game.entity.type.EntityType;
 import it.unimi.dsi.fastutil.objects.ObjectArrayList;
 import lombok.Setter;
 import lombok.experimental.Accessors;
+import org.cloudburstmc.nbt.NbtMap;
+import org.cloudburstmc.nbt.NbtType;
 import org.geysermc.geyser.GeyserImpl;
+import org.geysermc.geyser.api.entity.EntityDefinition;
+import org.geysermc.geyser.api.entity.EntityIdentifier;
 import org.geysermc.geyser.entity.factory.EntityFactory;
 import org.geysermc.geyser.entity.type.Entity;
 import org.geysermc.geyser.registry.Registries;
 import org.geysermc.geyser.translator.entity.EntityMetadataTranslator;
+import org.geysermc.geyser.util.EntityUtils;
 
+import java.util.ArrayList;
 import java.util.List;
 import java.util.Locale;
+import java.util.Optional;
 import java.util.function.BiConsumer;
 
 /**
@@ -48,15 +55,15 @@ import java.util.function.BiConsumer;
  *
  * @param <T> the entity type this definition represents
  */
-public record EntityDefinition<T extends Entity>(EntityFactory<T> factory, EntityType entityType, String identifier,
-                                                 float width, float height, float offset, List<EntityMetadataTranslator<? super T, ?, ?>> translators) {
+public record GeyserEntityDefinition<T extends Entity>(EntityFactory<T> factory, EntityType entityType, EntityIdentifier entityIdentifier,
+                                                       float width, float height, float offset, List<EntityMetadataTranslator<? super T, ?, ?>> translators, boolean custom) implements EntityDefinition {
 
-    public static <T extends Entity> Builder<T> inherited(EntityFactory<T> factory, EntityDefinition<? super T> parent) {
-        return new Builder<>(factory, parent.entityType, parent.identifier, parent.width, parent.height, parent.offset, new ObjectArrayList<>(parent.translators));
+    public static <T extends Entity> EntityDefinitionBuilder<T> inherited(EntityFactory<T> factory, GeyserEntityDefinition<? super T> parent) {
+        return new EntityDefinitionBuilder<>(factory, parent.entityType, parent.entityIdentifier, parent.width, parent.height, parent.offset, new ObjectArrayList<>(parent.translators));
     }
 
-    public static <T extends Entity> Builder<T> builder(EntityFactory<T> factory) {
-        return new Builder<>(factory);
+    public static <T extends Entity> EntityDefinitionBuilder<T> builder(EntityFactory<T> factory) {
+        return new EntityDefinitionBuilder<>(factory);
     }
 
     public <M> void translateMetadata(T entity, EntityMetadata<M, ? extends MetadataType<M>> metadata) {
@@ -77,23 +84,52 @@ public record EntityDefinition<T extends Entity>(EntityFactory<T> factory, Entit
         translator.translate(entity, metadata);
     }
 
+    public String identifier() {
+        return this.entityIdentifier.identifier();
+    }
+
+    public boolean isRegistered() {
+        return Registries.ENTITY_DEFINITIONS.get().containsValue(this);
+    }
+
+    public EntityDefinitionBuilder<T> toBuilder() {
+        return new EntityDefinitionBuilder<>(this);
+    }
+
     @Setter
     @Accessors(fluent = true, chain = true)
-    public static class Builder<T extends Entity> {
+    public static class EntityDefinitionBuilder<T extends Entity> implements EntityDefinition.Builder {
         private final EntityFactory<T> factory;
         private EntityType type;
-        private String identifier;
+        private EntityIdentifier identifier;
         private float width;
         private float height;
         private float offset = 0.00001f;
         private final List<EntityMetadataTranslator<? super T, ?, ?>> translators;
+        private final boolean custom;
+
+        private EntityDefinitionBuilder(GeyserEntityDefinition<T> definition) {
+            this.factory = definition.factory;
+            this.type = definition.entityType;
+            this.identifier = definition.entityIdentifier;
+            this.width = definition.width;
+            this.height = definition.height;
+            this.offset = definition.offset;
+            this.translators = new ArrayList<>(definition.translators);
+            this.custom = definition.custom;
+        }
 
-        private Builder(EntityFactory<T> factory) {
+        private EntityDefinitionBuilder(EntityFactory<T> factory) {
+            this(factory, false);
+        }
+
+        public EntityDefinitionBuilder(EntityFactory<T> factory, boolean custom) {
             this.factory = factory;
-            translators = new ObjectArrayList<>();
+            this.translators = new ObjectArrayList<>();
+            this.custom = custom;
         }
 
-        public Builder(EntityFactory<T> factory, EntityType type, String identifier, float width, float height, float offset, List<EntityMetadataTranslator<? super T, ?, ?>> translators) {
+        public EntityDefinitionBuilder(EntityFactory<T> factory, EntityType type, EntityIdentifier identifier, float width, float height, float offset, List<EntityMetadataTranslator<? super T, ?, ?>> translators) {
             this.factory = factory;
             this.type = type;
             this.identifier = identifier;
@@ -101,18 +137,46 @@ public record EntityDefinition<T extends Entity>(EntityFactory<T> factory, Entit
             this.height = height;
             this.offset = offset;
             this.translators = translators;
+            this.custom = false;
+        }
+
+        @Override
+        public EntityDefinitionBuilder<T> identifier(EntityIdentifier identifier) {
+            this.identifier = identifier;
+            return this;
+        }
+
+        public EntityDefinitionBuilder<T> identifier(String identifier) {
+            NbtMap nbt = Registries.BEDROCK_ENTITY_IDENTIFIERS.get();
+            List<NbtMap> idlist = nbt.getList("idlist", NbtType.COMPOUND);
+            Optional<NbtMap> entityIdentifier = idlist.stream().filter(tag -> tag.getString("id").equals(identifier)).findFirst();
+
+            // Create a fake entity identifier for entities which are
+            // in Java but may not be in Bedrock (e.g. item frames).
+            if (entityIdentifier.isEmpty()) {
+                this.identifier = new GeyserEntityIdentifier(NbtMap.builder()
+                        .putString("id", identifier)
+                        .putBoolean("hasspawnegg", false)
+                        .putBoolean("summonable", false)
+                        .build());
+
+                return this;
+            }
+
+            this.identifier = new GeyserEntityIdentifier(entityIdentifier.get());
+            return this;
         }
 
         /**
          * Sets the height and width as one value
          */
-        public Builder<T> heightAndWidth(float value) {
+        public EntityDefinitionBuilder<T> heightAndWidth(float value) {
             height = value;
             width = value;
             return this;
         }
 
-        public Builder<T> offset(float offset) {
+        public EntityDefinitionBuilder<T> offset(float offset) {
             this.offset = offset + 0.00001f;
             return this;
         }
@@ -120,23 +184,23 @@ public record EntityDefinition<T extends Entity>(EntityFactory<T> factory, Entit
         /**
          * Resets the identifier as well
          */
-        public Builder<T> type(EntityType type) {
+        public EntityDefinitionBuilder<T> type(EntityType type) {
             this.type = type;
             identifier = null;
             return this;
         }
 
-        public <U, EM extends EntityMetadata<U, ? extends MetadataType<U>>> Builder<T> addTranslator(MetadataType<U> type, BiConsumer<T, EM> translateFunction) {
+        public <U, EM extends EntityMetadata<U, ? extends MetadataType<U>>> EntityDefinitionBuilder<T> addTranslator(MetadataType<U> type, BiConsumer<T, EM> translateFunction) {
             translators.add(new EntityMetadataTranslator<>(type, translateFunction));
             return this;
         }
 
-        public Builder<T> addTranslator(EntityMetadataTranslator<T, ?, ?> translator) {
+        public EntityDefinitionBuilder<T> addTranslator(EntityMetadataTranslator<T, ?, ?> translator) {
             translators.add(translator);
             return this;
         }
 
-        public EntityDefinition<T> build() {
+        public GeyserEntityDefinition<T> build() {
             return build(true);
         }
 
@@ -144,15 +208,20 @@ public record EntityDefinition<T extends Entity>(EntityFactory<T> factory, Entit
          * @param register whether to register this entity in the Registries for entity types. Generally this should be
          *                 set to false if we're not expecting this entity to spawn from the network.
          */
-        public EntityDefinition<T> build(boolean register) {
-            if (identifier == null && type != null) {
+        public GeyserEntityDefinition<T> build(boolean register) {
+            String identifier = null;
+            if (this.identifier == null && type != null) {
                 identifier = "minecraft:" + type.name().toLowerCase(Locale.ROOT);
+                this.identifier(identifier);
+            } else if (this.identifier != null && type == null) {
+                identifier = this.identifier.identifier();
             }
-            EntityDefinition<T> definition = new EntityDefinition<>(factory, type, identifier, width, height, offset, translators);
-            if (register && definition.entityType() != null) {
-                Registries.ENTITY_DEFINITIONS.get().putIfAbsent(definition.entityType(), definition);
-                Registries.JAVA_ENTITY_IDENTIFIERS.get().putIfAbsent("minecraft:" + type.name().toLowerCase(Locale.ROOT), definition);
+
+            GeyserEntityDefinition<T> definition = new GeyserEntityDefinition<>(factory, type, this.identifier, width, height, offset, translators, custom);
+            if (register && identifier != null) {
+                EntityUtils.registerEntity(identifier, definition);
             }
+
             return definition;
         }
     }
diff --git a/core/src/main/java/org/geysermc/geyser/entity/GeyserEntityIdentifier.java b/core/src/main/java/org/geysermc/geyser/entity/GeyserEntityIdentifier.java
new file mode 100644
index 0000000000000000000000000000000000000000..56172bc961c239dde230500b689693bf1a133d94
--- /dev/null
+++ b/core/src/main/java/org/geysermc/geyser/entity/GeyserEntityIdentifier.java
@@ -0,0 +1,85 @@
+/*
+ * Copyright (c) 2019-2023 GeyserMC. http://geysermc.org
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @author GeyserMC
+ * @link https://github.com/GeyserMC/Geyser
+ */
+
+package org.geysermc.geyser.entity;
+
+import org.checkerframework.checker.nullness.qual.NonNull;
+import org.cloudburstmc.nbt.NbtMap;
+import org.cloudburstmc.nbt.NbtMapBuilder;
+import org.geysermc.geyser.api.entity.EntityIdentifier;
+
+import java.util.concurrent.atomic.AtomicInteger;
+
+public record GeyserEntityIdentifier(NbtMap nbt) implements EntityIdentifier {
+    private static final AtomicInteger RUNTIME_ID_ALLOCATOR = new AtomicInteger(100000);
+
+    @Override
+    public boolean hasSpawnEgg() {
+        return this.nbt.getBoolean("hasspawnegg");
+    }
+
+    @NonNull
+    @Override
+    public String identifier() {
+        return this.nbt.getString("id");
+    }
+
+    @Override
+    public boolean isSummonable() {
+        return this.nbt.getBoolean("summonable");
+    }
+
+    public static class EntityIdentifierBuilder implements EntityIdentifier.Builder {
+        private final NbtMapBuilder nbt = NbtMap.builder();
+
+        @Override
+        public Builder spawnEgg(boolean spawnEgg) {
+            this.nbt.putBoolean("hasspawnegg", spawnEgg);
+            return this;
+        }
+
+        @Override
+        public Builder identifier(String identifier) {
+            this.nbt.putString("id", identifier);
+            return this;
+        }
+
+        @Override
+        public Builder summonable(boolean summonable) {
+            this.nbt.putBoolean("summonable", summonable);
+            return this;
+        }
+
+        @Override
+        public EntityIdentifier build() {
+            // Vanilla registry information
+            this.nbt.putString("bid", "");
+            this.nbt.putInt("rid", RUNTIME_ID_ALLOCATOR.getAndIncrement());
+            this.nbt.putBoolean("experimental", false);
+
+            return new GeyserEntityIdentifier(this.nbt.build());
+        }
+    }
+}
\ No newline at end of file
diff --git a/core/src/main/java/org/geysermc/geyser/entity/factory/EntityFactory.java b/core/src/main/java/org/geysermc/geyser/entity/factory/EntityFactory.java
index 7675ea8fd3b78cdd62dcf64af2dbecef8b6c4781..fec4804cdc248e86fde19a7914b89578bcb71883 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/factory/EntityFactory.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/factory/EntityFactory.java
@@ -26,7 +26,7 @@
 package org.geysermc.geyser.entity.factory;
 
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.Entity;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -37,5 +37,5 @@ import java.util.UUID;
  */
 public interface EntityFactory<T extends Entity> {
 
-    T create(GeyserSession session, int javaId, long bedrockId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw);
+    T create(GeyserSession session, int javaId, long bedrockId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw);
 }
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/AbstractArrowEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/AbstractArrowEntity.java
index 6828d10208cfdcba67a1b16b191299fbe887f9d0..e48d89a1681a8dd7083a3b90ec4069053e25f727 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/AbstractArrowEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/AbstractArrowEntity.java
@@ -29,14 +29,14 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.ByteEnti
 import com.github.steveice10.mc.protocol.data.game.entity.type.EntityType;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class AbstractArrowEntity extends Entity {
 
-    public AbstractArrowEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public AbstractArrowEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
 
         // Set the correct texture if using the resource pack
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/AreaEffectCloudEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/AreaEffectCloudEntity.java
index fcd4f2160281e7b67ea3a66d6c7f793e971718d2..fae2e434b1ab0742a4a250001cd4d4075d6fea71 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/AreaEffectCloudEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/AreaEffectCloudEntity.java
@@ -32,16 +32,15 @@ import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.ParticleType;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.registry.Registries;
-import org.geysermc.geyser.registry.type.ParticleMapping;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class AreaEffectCloudEntity extends Entity {
 
-    public AreaEffectCloudEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public AreaEffectCloudEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/BoatEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/BoatEntity.java
index 5527e773a15ef52b8606d5697d49b15027e42228..f9bf51bf3b22b766acf12806ca0584ba560397f5 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/BoatEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/BoatEntity.java
@@ -33,7 +33,7 @@ import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.packet.AnimatePacket;
 import org.cloudburstmc.protocol.bedrock.packet.MoveEntityAbsolutePacket;
 import lombok.Getter;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.EntityDefinitions;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.util.InteractionResult;
@@ -68,7 +68,7 @@ public class BoatEntity extends Entity {
     // Looks too fast and too choppy with 0.1f, which is how I believe the Microsoftian client handles it
     private final float ROWING_SPEED = 0.1f;
 
-    public BoatEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public BoatEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         // Initial rotation is incorrect
         super(session, entityId, geyserId, uuid, definition, position.add(0d, definition.offset(), 0d), motion, yaw + 90, 0, yaw + 90);
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/ChestBoatEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/ChestBoatEntity.java
index 675e9517d01eaaa551bbbb6823921e5ac2e8519c..df86f8ceed229db48f0c106addd5420e461526fa 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/ChestBoatEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/ChestBoatEntity.java
@@ -27,7 +27,7 @@ package org.geysermc.geyser.entity.type;
 
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.util.InteractionResult;
 import org.geysermc.geyser.util.InteractiveTag;
@@ -35,7 +35,7 @@ import org.geysermc.geyser.util.InteractiveTag;
 import java.util.UUID;
 
 public class ChestBoatEntity extends BoatEntity {
-    public ChestBoatEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public ChestBoatEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/CommandBlockMinecartEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/CommandBlockMinecartEntity.java
index 9c7a28f6e37f819041440341cab4305008ef0411..1b56ef1069b044abd065f829a547065b87e538a6 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/CommandBlockMinecartEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/CommandBlockMinecartEntity.java
@@ -31,7 +31,7 @@ import org.cloudburstmc.math.vector.Vector3i;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.inventory.ContainerType;
 import org.cloudburstmc.protocol.bedrock.packet.ContainerOpenPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.util.InteractionResult;
 import org.geysermc.geyser.util.InteractiveTag;
@@ -40,7 +40,7 @@ import java.util.UUID;
 
 public class CommandBlockMinecartEntity extends DefaultBlockMinecartEntity {
 
-    public CommandBlockMinecartEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public CommandBlockMinecartEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/DefaultBlockMinecartEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/DefaultBlockMinecartEntity.java
index 63b5ff2abaf467da5ce7b2af61686a175fad805f..2d647fc20caa125cc1996ff87ae371300a234483 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/DefaultBlockMinecartEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/DefaultBlockMinecartEntity.java
@@ -29,7 +29,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.BooleanE
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.IntEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
@@ -43,7 +43,7 @@ public class DefaultBlockMinecartEntity extends MinecartEntity {
     public int customBlockOffset = 0;
     public boolean showCustomBlock = false;
 
-    public DefaultBlockMinecartEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public DefaultBlockMinecartEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
 
         dirtyMetadata.put(EntityDataTypes.CUSTOM_DISPLAY, (byte) 1);
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/EnderCrystalEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/EnderCrystalEntity.java
index 86436f82bc2852c5d2c65f78e16c110c54f23628..716c6f6cf02b31c55157b5b9683c8ef8dbe20dd8 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/EnderCrystalEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/EnderCrystalEntity.java
@@ -30,7 +30,7 @@ import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.math.vector.Vector3i;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.Optional;
@@ -38,7 +38,7 @@ import java.util.UUID;
 
 public class EnderCrystalEntity extends Entity {
 
-    public EnderCrystalEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public EnderCrystalEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/Entity.java b/core/src/main/java/org/geysermc/geyser/entity/type/Entity.java
index 5ca739f6178eaa4f3e984ebab76810d4eadafffe..1b42a7d8f2432c5237c1dcfa672967eede8cc6dc 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/Entity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/Entity.java
@@ -48,7 +48,7 @@ import org.cloudburstmc.protocol.bedrock.packet.MoveEntityDeltaPacket;
 import org.cloudburstmc.protocol.bedrock.packet.RemoveEntityPacket;
 import org.cloudburstmc.protocol.bedrock.packet.SetEntityDataPacket;
 import org.geysermc.geyser.api.entity.type.GeyserEntity;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.GeyserDirtyMetadata;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.translator.text.MessageTranslator;
@@ -87,7 +87,7 @@ public class Entity implements GeyserEntity {
      */
     protected boolean onGround;
 
-    protected EntityDefinition<?> definition;
+    protected GeyserEntityDefinition<?> definition;
 
     /**
      * Indicates if the entity has been initialized and spawned
@@ -125,7 +125,7 @@ public class Entity implements GeyserEntity {
     @Setter(AccessLevel.PROTECTED) // For players
     private boolean flagsDirty = false;
 
-    public Entity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public Entity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         this.session = session;
 
         this.entityId = entityId;
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/EvokerFangsEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/EvokerFangsEntity.java
index 56d761afd97d6a7537efdea125e71c6aa15d7dff..102a8e2704c0ea5fdb36180abe791d72ee1c2985 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/EvokerFangsEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/EvokerFangsEntity.java
@@ -28,7 +28,7 @@ package org.geysermc.geyser.entity.type;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.packet.PlaySoundPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
@@ -38,7 +38,7 @@ public class EvokerFangsEntity extends Entity implements Tickable {
     private int limitedLife = 22;
     private boolean attackStarted = false;
 
-    public EvokerFangsEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public EvokerFangsEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
         // As of 1.18.2 Bedrock, this line is required for the entity to be visible
         // 22 is the starting number on Java Edition
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/FireballEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/FireballEntity.java
index 3db032f0f017b066fe3349c00ade1f56242f44fa..f2041cdfbb72b902a95424def5060a71bc5918af 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/FireballEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/FireballEntity.java
@@ -26,7 +26,7 @@
 package org.geysermc.geyser.entity.type;
 
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
@@ -39,7 +39,7 @@ public class FireballEntity extends ThrowableEntity {
      */
     protected int futureTicks = 3;
 
-    public FireballEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public FireballEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, Vector3f.ZERO, yaw, pitch, headYaw);
 
         float magnitude = motion.length();
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/FireworkEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/FireworkEntity.java
index 7a544f23c5f5d9084abc96a8c7875bd22baa6a7a..b79f8c13be2ad58da68816e24d96e1105d8ed859 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/FireworkEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/FireworkEntity.java
@@ -37,7 +37,7 @@ import org.cloudburstmc.nbt.NbtType;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.packet.SetEntityMotionPacket;
 import org.geysermc.floodgate.util.DeviceOs;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.player.PlayerEntity;
 import org.geysermc.geyser.level.FireworkColor;
 import org.geysermc.geyser.session.GeyserSession;
@@ -50,7 +50,7 @@ import java.util.UUID;
 
 public class FireworkEntity extends Entity {
 
-    public FireworkEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public FireworkEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/FurnaceMinecartEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/FurnaceMinecartEntity.java
index a7a117fff680c44e3d8e8d2a6b2e416a45770713..c87ec661f4bc49d51033abdddc4e2cccef066de6 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/FurnaceMinecartEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/FurnaceMinecartEntity.java
@@ -29,7 +29,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.BooleanE
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.level.block.BlockStateValues;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.util.InteractionResult;
@@ -39,7 +39,7 @@ import java.util.UUID;
 public class FurnaceMinecartEntity extends DefaultBlockMinecartEntity {
     private boolean hasFuel = false;
 
-    public FurnaceMinecartEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public FurnaceMinecartEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/InteractionEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/InteractionEntity.java
index c88f90f19531249c6b24803e7875fb974c287c1e..3d282acaca362df6c9348b7e21ec5e208f5780fa 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/InteractionEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/InteractionEntity.java
@@ -32,7 +32,7 @@ import com.github.steveice10.mc.protocol.packet.ingame.serverbound.player.Server
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
 import org.cloudburstmc.protocol.bedrock.packet.AnimatePacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.util.InteractionResult;
 
@@ -46,7 +46,7 @@ public class InteractionEntity extends Entity {
      */
     private boolean response = false;
 
-    public InteractionEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public InteractionEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/ItemEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/ItemEntity.java
index bb67a60f656e12de384ef5b689f9b83619f7e4c8..5db2801a29979e1b25d4998fa61942db61cfc93e 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/ItemEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/ItemEntity.java
@@ -34,7 +34,7 @@ import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
 import org.cloudburstmc.protocol.bedrock.data.inventory.ItemData;
 import org.cloudburstmc.protocol.bedrock.packet.AddItemEntityPacket;
 import org.cloudburstmc.protocol.bedrock.packet.EntityEventPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.level.block.BlockStateValues;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.translator.inventory.item.ItemTranslator;
@@ -47,7 +47,7 @@ public class ItemEntity extends ThrowableEntity {
 
     private CompletableFuture<Integer> waterLevel = CompletableFuture.completedFuture(-1);
 
-    public ItemEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public ItemEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/ItemFrameEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/ItemFrameEntity.java
index 29597220049bd852d9dd34c43b434b491cc22574..dff631d3401cd30f740b0fef0510015ebef70a9f 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/ItemFrameEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/ItemFrameEntity.java
@@ -40,7 +40,7 @@ import org.cloudburstmc.protocol.bedrock.data.inventory.ItemData;
 import org.cloudburstmc.protocol.bedrock.packet.BlockEntityDataPacket;
 import org.cloudburstmc.protocol.bedrock.packet.UpdateBlockPacket;
 import lombok.Getter;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.translator.inventory.item.ItemTranslator;
 import org.geysermc.geyser.util.InteractionResult;
@@ -79,7 +79,7 @@ public class ItemFrameEntity extends Entity {
      */
     private boolean changed = true;
 
-    public ItemFrameEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw, Direction direction) {
+    public ItemFrameEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw, Direction direction) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
 
         NbtMapBuilder blockBuilder = NbtMap.builder()
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/LeashKnotEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/LeashKnotEntity.java
index 3f0d2ee685449218dae25e8447f532496e3b3cb7..c079c4c09b9d091524f3336428316c79f83bdf04 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/LeashKnotEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/LeashKnotEntity.java
@@ -27,7 +27,7 @@ package org.geysermc.geyser.entity.type;
 
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.util.InteractionResult;
 
@@ -35,7 +35,7 @@ import java.util.UUID;
 
 public class LeashKnotEntity extends Entity {
 
-    public LeashKnotEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public LeashKnotEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         // Position is incorrect by default
         super(session, entityId, geyserId, uuid, definition, position.add(0.5f, 0.25f, 0.5f), motion, yaw, pitch, headYaw);
     }
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/LightningEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/LightningEntity.java
index 6db486f0340b70aa1a0dc939e098254580f79f47..a1f9ef4dff160d8a9b786d9badea8fc21944d44a 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/LightningEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/LightningEntity.java
@@ -27,7 +27,7 @@ package org.geysermc.geyser.entity.type;
 
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.packet.PlaySoundPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
@@ -35,7 +35,7 @@ import java.util.concurrent.ThreadLocalRandom;
 
 public class LightningEntity extends Entity {
 
-    public LightningEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public LightningEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/LivingEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/LivingEntity.java
index be38098ac53097db34a09467a4e239d22e896661..1e4c160599852072d2fe5a13fe5b84d846275a73 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/LivingEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/LivingEntity.java
@@ -48,7 +48,7 @@ import org.cloudburstmc.protocol.bedrock.data.inventory.ItemData;
 import org.cloudburstmc.protocol.bedrock.packet.MobArmorEquipmentPacket;
 import org.cloudburstmc.protocol.bedrock.packet.MobEquipmentPacket;
 import org.cloudburstmc.protocol.bedrock.packet.UpdateAttributesPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.attribute.GeyserAttributeType;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
@@ -80,7 +80,7 @@ public class LivingEntity extends Entity {
      */
     private boolean isMaxFrozenState = false;
 
-    public LivingEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public LivingEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/MinecartEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/MinecartEntity.java
index ecf67052bdfe72ca4ad91fcff367c798766b6e3e..dc0195d950c8ec6c79b73d48a79e21ed0bd1178d 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/MinecartEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/MinecartEntity.java
@@ -30,7 +30,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.IntEntit
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.EntityDefinitions;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.util.InteractionResult;
@@ -40,7 +40,7 @@ import java.util.UUID;
 
 public class MinecartEntity extends Entity {
 
-    public MinecartEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public MinecartEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position.add(0d, definition.offset(), 0d), motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/PaintingEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/PaintingEntity.java
index 4e5fe9d59797cff486fddd5a82d8ad517ff00149..7df2c99549792759bb8e0c98a1c0ec06c93ece64 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/PaintingEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/PaintingEntity.java
@@ -29,7 +29,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.ObjectEn
 import com.github.steveice10.mc.protocol.data.game.entity.object.Direction;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.packet.AddPaintingPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.level.PaintingType;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -39,7 +39,7 @@ public class PaintingEntity extends Entity {
     private static final double OFFSET = -0.46875;
     private final Direction direction;
 
-    public PaintingEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw, Direction direction) {
+    public PaintingEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw, Direction direction) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
         this.direction = direction;
     }
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/SpawnerMinecartEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/SpawnerMinecartEntity.java
index 49cfc0081c5b6f6c3a6a388697fadc68458e9ed6..46d58a763106e33e7ea3ec80caf77f8d83cef766 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/SpawnerMinecartEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/SpawnerMinecartEntity.java
@@ -27,7 +27,7 @@ package org.geysermc.geyser.entity.type;
 
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.level.block.BlockStateValues;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -35,7 +35,7 @@ import java.util.UUID;
 
 public class SpawnerMinecartEntity extends DefaultBlockMinecartEntity {
 
-    public SpawnerMinecartEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public SpawnerMinecartEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/TNTEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/TNTEntity.java
index 98c2edd00e1fe13b0755b8a1f7cc354abe6687e3..a925b96d0cfd5626c4b09f20b4b15d5050ef8b8a 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/TNTEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/TNTEntity.java
@@ -30,7 +30,7 @@ import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
 import org.cloudburstmc.protocol.bedrock.packet.SetEntityDataPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
@@ -38,7 +38,7 @@ import java.util.UUID;
 public class TNTEntity extends Entity implements Tickable {
     private int currentTick;
 
-    public TNTEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public TNTEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/TextDisplayEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/TextDisplayEntity.java
index f2671f7a9c16cf323cfff473ceb1311bbdfd205c..310201d54206dfa1a569d3762daecb3fbef83a75 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/TextDisplayEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/TextDisplayEntity.java
@@ -29,7 +29,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.EntityMetadat
 import net.kyori.adventure.text.Component;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.translator.text.MessageTranslator;
 
@@ -37,7 +37,7 @@ import java.util.UUID;
 
 // Note: 1.19.4 requires that the billboard is set to something in order to show, on Java Edition
 public class TextDisplayEntity extends Entity {
-    public TextDisplayEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public TextDisplayEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/ThrowableEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/ThrowableEntity.java
index 72ae88310e7c8f570b7d421eddf830b95debda7b..96e51028db78976dc5ab958ac8b827ddc98b48fe 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/ThrowableEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/ThrowableEntity.java
@@ -31,7 +31,7 @@ import org.cloudburstmc.protocol.bedrock.data.LevelEvent;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
 import org.cloudburstmc.protocol.bedrock.packet.LevelEventPacket;
 import org.cloudburstmc.protocol.bedrock.packet.MoveEntityDeltaPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.level.block.BlockStateValues;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -44,7 +44,7 @@ public class ThrowableEntity extends Entity implements Tickable {
 
     protected Vector3f lastJavaPosition;
 
-    public ThrowableEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public ThrowableEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
         this.lastJavaPosition = position;
     }
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/ThrowableItemEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/ThrowableItemEntity.java
index 39c8386bd86f9e2cf4aee6b082090f1675513a35..0024f729e5dfe7501174456bdbce4f93cb21f122 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/ThrowableItemEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/ThrowableItemEntity.java
@@ -29,7 +29,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.EntityMetadat
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.ItemStack;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
@@ -44,7 +44,7 @@ public class ThrowableItemEntity extends ThrowableEntity {
     private int age;
     private boolean invisible;
 
-    public ThrowableItemEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public ThrowableItemEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
         setFlag(EntityFlag.INVISIBLE, true);
         invisible = false;
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/ThrownPotionEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/ThrownPotionEntity.java
index 1b5c1d2d0ade5318827c28b6b695203533d74581..60a72615523603677b875ed8ed25e8d5025d7e16 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/ThrownPotionEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/ThrownPotionEntity.java
@@ -33,7 +33,7 @@ import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
 import org.geysermc.geyser.GeyserImpl;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.item.Potion;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.registry.Registries;
@@ -45,7 +45,7 @@ import java.util.UUID;
 public class ThrownPotionEntity extends ThrowableItemEntity {
     private static final EnumSet<Potion> NON_ENCHANTED_POTIONS = EnumSet.of(Potion.WATER, Potion.MUNDANE, Potion.THICK, Potion.AWKWARD);
 
-    public ThrownPotionEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public ThrownPotionEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/TippedArrowEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/TippedArrowEntity.java
index 856c4cc66c1dd8cd62dd8021cd4d6338530e8a6c..b8c1f2ebefff9ebe26490434c710243131a18e97 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/TippedArrowEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/TippedArrowEntity.java
@@ -28,7 +28,7 @@ package org.geysermc.geyser.entity.type;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.IntEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.item.TippedArrowPotion;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -39,7 +39,7 @@ import java.util.UUID;
  */
 public class TippedArrowEntity extends AbstractArrowEntity {
 
-    public TippedArrowEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public TippedArrowEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/TridentEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/TridentEntity.java
index 2167f2c4d79d2f2bf96771a60f52d60dbbca6e05..94c1d0492503e0001bf450c6a61bf12e8791cc13 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/TridentEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/TridentEntity.java
@@ -26,14 +26,14 @@
 package org.geysermc.geyser.entity.type;
 
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class TridentEntity extends AbstractArrowEntity {
 
-    public TridentEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public TridentEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 }
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/WitherSkullEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/WitherSkullEntity.java
index 637ca41394df20c0f29a9329ceda2ea1d4815131..04ea4d7a4d889df69ca8ce5b86c26feb5d9ce88a 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/WitherSkullEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/WitherSkullEntity.java
@@ -27,7 +27,7 @@ package org.geysermc.geyser.entity.type;
 
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.BooleanEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.EntityDefinitions;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -36,7 +36,7 @@ import java.util.UUID;
 public class WitherSkullEntity extends FireballEntity {
     private boolean isCharged;
 
-    public WitherSkullEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public WitherSkullEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
 
         this.futureTicks = 1;
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/AbstractFishEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/AbstractFishEntity.java
index ec0caac33984483057aeca3c9e90eb7c447cf51b..d109ce279ae06be62732e34652e1e01f453b41fa 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/AbstractFishEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/AbstractFishEntity.java
@@ -28,7 +28,7 @@ package org.geysermc.geyser.entity.type.living;
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.util.EntityUtils;
@@ -39,7 +39,7 @@ import java.util.UUID;
 
 public class AbstractFishEntity extends WaterEntity {
 
-    public AbstractFishEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public AbstractFishEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
 
         setFlag(EntityFlag.CAN_SWIM, true);
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/AgeableEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/AgeableEntity.java
index 6e2e7a4077b183035ee982245283c38abf5768f6..f69de005918b0df2705cd81cee569f5d65cf0aeb 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/AgeableEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/AgeableEntity.java
@@ -29,14 +29,14 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.BooleanE
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class AgeableEntity extends CreatureEntity {
 
-    public AgeableEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public AgeableEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/AllayEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/AllayEntity.java
index f39200eed97c75e81cd63a4c1d01a66b709ee061..da2c44831446b686b0742eb6464cd68f566043db 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/AllayEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/AllayEntity.java
@@ -29,7 +29,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.BooleanE
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.session.GeyserSession;
@@ -42,7 +42,7 @@ import java.util.UUID;
 public class AllayEntity extends MobEntity {
     private boolean canDuplicate;
 
-    public AllayEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public AllayEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/AmbientEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/AmbientEntity.java
index 8f81125d0e3656df0feb7198b918950435a5465b..5642d7314d2ade87bc162a7f41a897a1f13fcfc9 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/AmbientEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/AmbientEntity.java
@@ -26,14 +26,14 @@
 package org.geysermc.geyser.entity.type.living;
 
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class AmbientEntity extends MobEntity {
 
-    public AmbientEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public AmbientEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/ArmorStandEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/ArmorStandEntity.java
index c9018fe76ad9343aa71c3a9aa75260c21b9f4631..fb676a8287d7ad60c0ca3ba9585a85237891b82a 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/ArmorStandEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/ArmorStandEntity.java
@@ -36,7 +36,7 @@ import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataType;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
 import org.cloudburstmc.protocol.bedrock.data.inventory.ItemData;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.EntityDefinitions;
 import org.geysermc.geyser.entity.type.LivingEntity;
 import org.geysermc.geyser.item.Items;
@@ -85,7 +85,7 @@ public class ArmorStandEntity extends LivingEntity {
      */
     private boolean positionUpdateRequired = false;
 
-    public ArmorStandEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public ArmorStandEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/BatEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/BatEntity.java
index 644054e725a1f87a4594e26b7e33817f88819c12..7093f75ebdb67384b98b87dd83ba1fd30ea8c58f 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/BatEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/BatEntity.java
@@ -28,14 +28,14 @@ package org.geysermc.geyser.entity.type.living;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.ByteEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class BatEntity extends AmbientEntity {
 
-    public BatEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public BatEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/CreatureEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/CreatureEntity.java
index fd38bf6668af1ae79dad8f15d219bfbd2583716b..8b042ea6e980abd461992a94b4a8e3904ca4bcf2 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/CreatureEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/CreatureEntity.java
@@ -26,14 +26,14 @@
 package org.geysermc.geyser.entity.type.living;
 
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class CreatureEntity extends MobEntity {
 
-    public CreatureEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public CreatureEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 }
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/DolphinEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/DolphinEntity.java
index 7c1d8efc72e5982519205288d8ac36e7adaed116..9c6075bacb588ea9a73583eb74d8cb77c9cda078 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/DolphinEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/DolphinEntity.java
@@ -27,7 +27,7 @@ package org.geysermc.geyser.entity.type.living;
 
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.util.InteractionResult;
@@ -37,7 +37,7 @@ import javax.annotation.Nonnull;
 import java.util.UUID;
 
 public class DolphinEntity extends WaterEntity {
-    public DolphinEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public DolphinEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/FlyingEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/FlyingEntity.java
index 472a9b3dcb129097922d94677226a22c0c36b87f..fc86ece2bcf1e63969e3b41a5f5103dd04106914 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/FlyingEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/FlyingEntity.java
@@ -26,14 +26,14 @@
 package org.geysermc.geyser.entity.type.living;
 
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class FlyingEntity extends MobEntity {
 
-    public FlyingEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public FlyingEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 }
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/GlowSquidEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/GlowSquidEntity.java
index 58c2f608249133574cb6421b4a94fce4d837cb53..148310ca2375ec2d8634fa2e79a9e430b77b345c 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/GlowSquidEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/GlowSquidEntity.java
@@ -26,13 +26,13 @@
 package org.geysermc.geyser.entity.type.living;
 
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class GlowSquidEntity extends SquidEntity {
-    public GlowSquidEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public GlowSquidEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 }
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/GolemEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/GolemEntity.java
index 12b2ca91d2a3a9749b00f5d10d214cfa54ad1e44..77734823cc20e875f43a260853acfef6dd1b6570 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/GolemEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/GolemEntity.java
@@ -26,14 +26,14 @@
 package org.geysermc.geyser.entity.type.living;
 
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class GolemEntity extends CreatureEntity {
 
-    public GolemEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public GolemEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 }
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/IronGolemEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/IronGolemEntity.java
index 1f653decd405a62712dd552c86d4252070356228..e82bacc23b71da74bd3ef782a25656b43ed04af8 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/IronGolemEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/IronGolemEntity.java
@@ -29,7 +29,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.session.GeyserSession;
@@ -40,7 +40,7 @@ import java.util.UUID;
 
 public class IronGolemEntity extends GolemEntity {
 
-    public IronGolemEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public IronGolemEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
         // Indicate that we should show cracks through a resource pack
         setFlag(EntityFlag.BRIBED, true);
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/MagmaCubeEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/MagmaCubeEntity.java
index 5a66ef36e47f20fc216dc1576d16eeb720fe0a12..0837f104fa7eea064e03bd435d759e3b9875a6ff 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/MagmaCubeEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/MagmaCubeEntity.java
@@ -27,14 +27,14 @@ package org.geysermc.geyser.entity.type.living;
 
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class MagmaCubeEntity extends SlimeEntity {
 
-    public MagmaCubeEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public MagmaCubeEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/MobEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/MobEntity.java
index 60a9a147414b0fa2504ae40172d64ade3d743f9a..3ec4c6c2dd46b948d702578f90d4ea5c14e7db5a 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/MobEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/MobEntity.java
@@ -31,7 +31,7 @@ import lombok.Getter;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.LivingEntity;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
@@ -50,7 +50,7 @@ public class MobEntity extends LivingEntity {
     @Getter
     private long leashHolderBedrockId;
 
-    public MobEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public MobEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/SlimeEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/SlimeEntity.java
index 1d2eb95bc1de65d89f334183e89eaf070d989ab4..bb5cb30ef0528628b0ada22dc44c7737187dcbe0 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/SlimeEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/SlimeEntity.java
@@ -28,14 +28,14 @@ package org.geysermc.geyser.entity.type.living;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.IntEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class SlimeEntity extends MobEntity {
 
-    public SlimeEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public SlimeEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/SnowGolemEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/SnowGolemEntity.java
index ced274185e91f0c5d15c8a5b686d73db8e368b12..c9838a82e8cb970d58a3a9a58b7f4fc61fd87c73 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/SnowGolemEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/SnowGolemEntity.java
@@ -29,7 +29,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.ByteEnti
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.session.GeyserSession;
@@ -41,7 +41,7 @@ import java.util.UUID;
 
 public class SnowGolemEntity extends GolemEntity {
 
-    public SnowGolemEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public SnowGolemEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/SquidEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/SquidEntity.java
index 80a5af442576dbc2db6ecd721107c1d8f65cf2dc..fb309da8a3b5d5319a4ed5f83cd7c82c833c46ac 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/SquidEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/SquidEntity.java
@@ -28,7 +28,7 @@ package org.geysermc.geyser.entity.type.living;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
 import org.cloudburstmc.protocol.bedrock.packet.MoveEntityDeltaPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.Tickable;
 import org.geysermc.geyser.level.block.BlockStateValues;
 import org.geysermc.geyser.session.GeyserSession;
@@ -42,7 +42,7 @@ public class SquidEntity extends WaterEntity implements Tickable {
 
     private CompletableFuture<Boolean> inWater = CompletableFuture.completedFuture(Boolean.FALSE);
 
-    public SquidEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public SquidEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/TadpoleEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/TadpoleEntity.java
index 47ddb912669c328e4cd54995bc161a8b3c56543d..272c8ebd348f08a91a197cbba55fc4af5656a7bb 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/TadpoleEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/TadpoleEntity.java
@@ -27,7 +27,7 @@ package org.geysermc.geyser.entity.type.living;
 
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.session.GeyserSession;
@@ -38,7 +38,7 @@ import javax.annotation.Nonnull;
 import java.util.UUID;
 
 public class TadpoleEntity extends AbstractFishEntity {
-    public TadpoleEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public TadpoleEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/WaterEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/WaterEntity.java
index a847c4cd7269a6120a7263ee56bb5d1fdb7cbdc7..d95909a90e3f2c908bd19dcfb65056779123c980 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/WaterEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/WaterEntity.java
@@ -26,14 +26,14 @@
 package org.geysermc.geyser.entity.type.living;
 
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class WaterEntity extends CreatureEntity {
 
-    public WaterEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public WaterEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/AnimalEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/AnimalEntity.java
index 2c46da13b83c9592156bf9b525e5bfc6a7cc5b5c..56cbf5813e841b953adc313ad96b5cbdb72336dd 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/AnimalEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/AnimalEntity.java
@@ -29,7 +29,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityEventType;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.living.AgeableEntity;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
@@ -43,7 +43,7 @@ import java.util.UUID;
 
 public class AnimalEntity extends AgeableEntity {
 
-    public AnimalEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public AnimalEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/AxolotlEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/AxolotlEntity.java
index 06eb0791b2a7cb881a9040bf0c9e5b6b44c416ad..32dd63f8511c1c44dda340bea15808034af60982 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/AxolotlEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/AxolotlEntity.java
@@ -31,7 +31,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.type.Item;
 import org.geysermc.geyser.session.GeyserSession;
@@ -42,7 +42,7 @@ import javax.annotation.Nonnull;
 import java.util.UUID;
 
 public class AxolotlEntity extends AnimalEntity {
-    public AxolotlEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public AxolotlEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/BeeEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/BeeEntity.java
index e05b44cf05b038c47fcac893d6dc81eefc579fdb..53bd964a550a13e17ec37a94174f0f0b265ebcf3 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/BeeEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/BeeEntity.java
@@ -32,7 +32,7 @@ import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityEventType;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
 import org.cloudburstmc.protocol.bedrock.packet.EntityEventPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.item.type.Item;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -40,7 +40,7 @@ import java.util.UUID;
 
 public class BeeEntity extends AnimalEntity {
 
-    public BeeEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public BeeEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/ChickenEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/ChickenEntity.java
index 164fb1b6c9a6ced9692a105d3bb4d97b9372fb86..b776fa0e7eaa2b8da13a4f3f45849e46d7befe3e 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/ChickenEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/ChickenEntity.java
@@ -26,7 +26,7 @@
 package org.geysermc.geyser.entity.type.living.animal;
 
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.item.type.Item;
 import org.geysermc.geyser.session.GeyserSession;
@@ -37,7 +37,7 @@ import java.util.UUID;
 public class ChickenEntity extends AnimalEntity {
     private static final Set<Item> VALID_FOOD = Set.of(Items.WHEAT_SEEDS, Items.MELON_SEEDS, Items.PUMPKIN_SEEDS, Items.BEETROOT_SEEDS);
 
-    public ChickenEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public ChickenEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/CowEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/CowEntity.java
index 01641c8c3d963ef0c767e493a8e19a1005883758..351803b7fe3ab52c90774cf49fcae90e02e6fd90 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/CowEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/CowEntity.java
@@ -29,7 +29,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.SoundEvent;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.session.GeyserSession;
@@ -40,7 +40,7 @@ import javax.annotation.Nonnull;
 import java.util.UUID;
 
 public class CowEntity extends AnimalEntity {
-    public CowEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public CowEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/FoxEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/FoxEntity.java
index 98c73cbce985fbcac8d79aa271b8599294cbc5f5..8fd3ad0e6d2ad27e9f6f929a7c29496b30779db2 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/FoxEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/FoxEntity.java
@@ -30,7 +30,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.IntEntit
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.item.type.Item;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -38,7 +38,7 @@ import java.util.UUID;
 
 public class FoxEntity extends AnimalEntity {
 
-    public FoxEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public FoxEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/FrogEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/FrogEntity.java
index 039ef5bf9869bd7665f0197c6f738b48caf95c1c..4ec7eb8039f80cc892d3dab486b2f7857c810b3f 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/FrogEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/FrogEntity.java
@@ -31,7 +31,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.ObjectEn
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.Entity;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.item.type.Item;
@@ -41,7 +41,7 @@ import java.util.OptionalInt;
 import java.util.UUID;
 
 public class FrogEntity extends AnimalEntity {
-    public FrogEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public FrogEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/GoatEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/GoatEntity.java
index 20b8f5ccfca6341b79bca4a6e56bf9089be92d77..a3ebf06b794a88d48e624483917f39da89f70d33 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/GoatEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/GoatEntity.java
@@ -32,7 +32,7 @@ import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.SoundEvent;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.session.GeyserSession;
@@ -49,7 +49,7 @@ public class GoatEntity extends AnimalEntity {
     private boolean hasLeftHorn;
     private boolean hasRightHorn;
 
-    public GoatEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public GoatEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/HoglinEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/HoglinEntity.java
index 154c2f688d0bb1e8342f714ccf3ec51110bb438d..f69b7d2c81470a548d34236214d41c11da5cd8a8 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/HoglinEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/HoglinEntity.java
@@ -28,7 +28,7 @@ package org.geysermc.geyser.entity.type.living.animal;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.BooleanEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.item.type.Item;
 import org.geysermc.geyser.session.GeyserSession;
@@ -38,7 +38,7 @@ import java.util.UUID;
 public class HoglinEntity extends AnimalEntity {
     private boolean isImmuneToZombification;
 
-    public HoglinEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public HoglinEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/MooshroomEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/MooshroomEntity.java
index 2d136a169bbc017ceb948cdf6c02d026c7936c3d..13274fb67b7befcbd7add5d4e9a271ae1b6ff414 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/MooshroomEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/MooshroomEntity.java
@@ -29,7 +29,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.ObjectEn
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.item.type.FlowerItem;
@@ -43,7 +43,7 @@ import java.util.UUID;
 public class MooshroomEntity extends AnimalEntity {
     private boolean isBrown = false;
 
-    public MooshroomEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public MooshroomEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/OcelotEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/OcelotEntity.java
index c81ddd52e27b27cc0749483d1dccc5400fd7bab2..8ea755101edc214faaaf39fb978f5ee3c9507e5f 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/OcelotEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/OcelotEntity.java
@@ -28,7 +28,7 @@ package org.geysermc.geyser.entity.type.living.animal;
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.item.type.Item;
@@ -41,7 +41,7 @@ import java.util.UUID;
 
 public class OcelotEntity extends AnimalEntity {
 
-    public OcelotEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public OcelotEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/PandaEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/PandaEntity.java
index 212eaa91e0d6d6b6c29b190c484dffe382c3ea19..cca39b92893b5042725eed030dd7ac57a45a4af1 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/PandaEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/PandaEntity.java
@@ -33,7 +33,7 @@ import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityEventType;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
 import org.cloudburstmc.protocol.bedrock.packet.EntityEventPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.item.type.Item;
@@ -49,7 +49,7 @@ public class PandaEntity extends AnimalEntity {
     private Gene mainGene = Gene.NORMAL;
     private Gene hiddenGene = Gene.NORMAL;
 
-    public PandaEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public PandaEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/PigEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/PigEntity.java
index 91e94321c71968cedf26d27805d73b693b53fa47..850a1069adecdb51a1d8236e0fa43276769e257f 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/PigEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/PigEntity.java
@@ -28,7 +28,7 @@ package org.geysermc.geyser.entity.type.living.animal;
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.item.type.Item;
@@ -42,7 +42,7 @@ import java.util.UUID;
 
 public class PigEntity extends AnimalEntity {
 
-    public PigEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public PigEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/PolarBearEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/PolarBearEntity.java
index 1d7777cdb6539fd75372cde3314208b319d62590..9c1fa18d0d212eda8bb3a74f3a648ceb8977dd7b 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/PolarBearEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/PolarBearEntity.java
@@ -26,7 +26,7 @@
 package org.geysermc.geyser.entity.type.living.animal;
 
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.item.type.Item;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -34,7 +34,7 @@ import java.util.UUID;
 
 public class PolarBearEntity extends AnimalEntity {
 
-    public PolarBearEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public PolarBearEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/PufferFishEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/PufferFishEntity.java
index d0d119593918a93bc235e38383a7dfa172b0d360..4aeb632ed0999bfa16d02816a1dfd863018e217e 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/PufferFishEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/PufferFishEntity.java
@@ -28,7 +28,7 @@ package org.geysermc.geyser.entity.type.living.animal;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.IntEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.living.AbstractFishEntity;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -36,7 +36,7 @@ import java.util.UUID;
 
 public class PufferFishEntity extends AbstractFishEntity {
 
-    public PufferFishEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public PufferFishEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/RabbitEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/RabbitEntity.java
index 1efa87ec82b1c2a9947bd408b32b4239c7bf1eb3..d96e42776d89a281d4f42f072c172df76aea56bb 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/RabbitEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/RabbitEntity.java
@@ -29,7 +29,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.IntEntit
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.item.type.Item;
 import org.geysermc.geyser.session.GeyserSession;
@@ -38,7 +38,7 @@ import java.util.UUID;
 
 public class RabbitEntity extends AnimalEntity {
 
-    public RabbitEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public RabbitEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/SheepEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/SheepEntity.java
index 8c94580127e0a7d498e2b35c774b0515b0226423..e1b941718c3802c8afcaf1d6ea2d7989acd62267 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/SheepEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/SheepEntity.java
@@ -30,7 +30,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.item.type.DyeItem;
@@ -44,7 +44,7 @@ import java.util.UUID;
 public class SheepEntity extends AnimalEntity {
     private int color;
 
-    public SheepEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public SheepEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/SnifferEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/SnifferEntity.java
index a97756e39018d55209ac75351bb2a82fd9924f69..3d2219bf4250b7eb142f90ee3d1c3b4c217949b7 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/SnifferEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/SnifferEntity.java
@@ -34,7 +34,7 @@ import org.cloudburstmc.protocol.bedrock.data.SoundEvent;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
 import org.cloudburstmc.protocol.bedrock.packet.LevelEventPacket;
 import org.cloudburstmc.protocol.bedrock.packet.LevelSoundEventPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.EntityDefinitions;
 import org.geysermc.geyser.entity.type.Tickable;
 import org.geysermc.geyser.item.type.Item;
@@ -50,7 +50,7 @@ public class SnifferEntity extends AnimalEntity implements Tickable {
     private Pose pose = Pose.STANDING; // Needed to call setDimensions for DIGGING state
     private int digTicks;
 
-    public SnifferEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public SnifferEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/StriderEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/StriderEntity.java
index e58fa5aca8d0bd488b243aa844d98558de91d450..9a5f6f2d9f65a52064eeaa291dd638c37f2509cb 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/StriderEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/StriderEntity.java
@@ -29,7 +29,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.BooleanE
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.Entity;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
@@ -46,7 +46,7 @@ public class StriderEntity extends AnimalEntity {
 
     private boolean isCold = false;
 
-    public StriderEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public StriderEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
 
         setFlag(EntityFlag.FIRE_IMMUNE, true);
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/TropicalFishEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/TropicalFishEntity.java
index b18e55a4896a557bbe78742ee2990e81e55ad833..0fb85c278d128bbf703cbc26e31ef490b3ad54fa 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/TropicalFishEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/TropicalFishEntity.java
@@ -30,7 +30,7 @@ import com.google.common.collect.ImmutableList;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import it.unimi.dsi.fastutil.ints.IntList;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.living.AbstractFishEntity;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -48,7 +48,7 @@ public class TropicalFishEntity extends AbstractFishEntity {
     private static final List<String> VARIANT_NAMES = ImmutableList.of("kob", "sunstreak", "snooper", "dasher", "brinely", "spotty", "flopper", "stripey", "glitter", "blockfish", "betty", "clayfish");
     private static final List<String> COLOR_NAMES = ImmutableList.of("white", "orange", "magenta", "light_blue", "yellow", "lime", "pink", "gray", "light_gray", "cyan", "purple", "blue", "brown", "green", "red", "black");
 
-    public TropicalFishEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public TropicalFishEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/TurtleEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/TurtleEntity.java
index 870ded1939b344e8e8564a273e074ba81f5e0cd8..e56a14173835bcaa6fe12a6db1ffa4d9e01ecb89 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/TurtleEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/TurtleEntity.java
@@ -28,7 +28,7 @@ package org.geysermc.geyser.entity.type.living.animal;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.BooleanEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.item.type.Item;
 import org.geysermc.geyser.session.GeyserSession;
@@ -37,7 +37,7 @@ import java.util.UUID;
 
 public class TurtleEntity extends AnimalEntity {
 
-    public TurtleEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public TurtleEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/AbstractHorseEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/AbstractHorseEntity.java
index 872f721906bb70575d70c7d6ff08a93f4fb947ab..ab8fbe99a48caadde735addde4ea3f67815d90a0 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/AbstractHorseEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/AbstractHorseEntity.java
@@ -34,7 +34,7 @@ import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
 import org.cloudburstmc.protocol.bedrock.data.inventory.ContainerType;
 import org.cloudburstmc.protocol.bedrock.packet.EntityEventPacket;
 import org.cloudburstmc.protocol.bedrock.packet.UpdateAttributesPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.attribute.GeyserAttributeType;
 import org.geysermc.geyser.entity.type.living.animal.AnimalEntity;
 import org.geysermc.geyser.inventory.GeyserItemStack;
@@ -56,7 +56,7 @@ public class AbstractHorseEntity extends AnimalEntity {
     private static final Set<Item> DONKEY_AND_HORSE_FOODS = Set.of(Items.GOLDEN_APPLE, Items.ENCHANTED_GOLDEN_APPLE,
             Items.GOLDEN_CARROT, Items.SUGAR, Items.APPLE, Items.WHEAT, Items.HAY_BLOCK);
 
-    public AbstractHorseEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public AbstractHorseEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
 
         // Specifies the size of the entity's inventory. Required to place slots in the entity.
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/CamelEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/CamelEntity.java
index 4ce6f062b3054cb56403fbc1056a0f26c09cd9a0..4d94e1bc999e7a65284a80db0426034ecfe27acd 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/CamelEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/CamelEntity.java
@@ -34,7 +34,7 @@ import org.cloudburstmc.protocol.bedrock.data.entity.EntityEventType;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
 import org.cloudburstmc.protocol.bedrock.data.inventory.ContainerType;
 import org.cloudburstmc.protocol.bedrock.packet.EntityEventPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.item.type.Item;
 import org.geysermc.geyser.session.GeyserSession;
@@ -45,7 +45,7 @@ public class CamelEntity extends AbstractHorseEntity {
 
     public static final float SITTING_HEIGHT_DIFFERENCE = 1.43F;
 
-    public CamelEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public CamelEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
 
         dirtyMetadata.put(EntityDataTypes.CONTAINER_TYPE, (byte) ContainerType.HORSE.getId());
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/ChestedHorseEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/ChestedHorseEntity.java
index 0fb9438d28ffc87f6dddc84ac474037451b782a0..0a7cdbdba72a5ba4df71ff286edb370ef77029d1 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/ChestedHorseEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/ChestedHorseEntity.java
@@ -27,7 +27,7 @@ package org.geysermc.geyser.entity.type.living.animal.horse;
 
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.session.GeyserSession;
@@ -37,7 +37,7 @@ import java.util.UUID;
 
 public class ChestedHorseEntity extends AbstractHorseEntity {
 
-    public ChestedHorseEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public ChestedHorseEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/HorseEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/HorseEntity.java
index dfa6ef30ac4be83d1108e593e920e6445a3e8241..d9b0ffc11806fc94a31883957051e375a80137d7 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/HorseEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/HorseEntity.java
@@ -28,14 +28,14 @@ package org.geysermc.geyser.entity.type.living.animal.horse;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.IntEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class HorseEntity extends AbstractHorseEntity {
 
-    public HorseEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public HorseEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/LlamaEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/LlamaEntity.java
index a32d7b1b5f2eb615b8b74bb2939d5c3068e3373b..0f2212ef4ed194b140550d02e525282bbc766597 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/LlamaEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/LlamaEntity.java
@@ -30,7 +30,7 @@ import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.inventory.ItemData;
 import org.cloudburstmc.protocol.bedrock.packet.MobArmorEquipmentPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.item.type.Item;
 import org.geysermc.geyser.session.GeyserSession;
@@ -39,7 +39,7 @@ import java.util.UUID;
 
 public class LlamaEntity extends ChestedHorseEntity {
 
-    public LlamaEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public LlamaEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
 
         dirtyMetadata.put(EntityDataTypes.CONTAINER_STRENGTH_MODIFIER, 3); // Presumably 3 slots for every 1 strength
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/SkeletonHorseEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/SkeletonHorseEntity.java
index 43c76202c87024bead3f0c5fa24a1c38d5e7ff25..6e53f2d46ff135c3869b6d6c56e74f6165ce162d 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/SkeletonHorseEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/SkeletonHorseEntity.java
@@ -27,7 +27,7 @@ package org.geysermc.geyser.entity.type.living.animal.horse;
 
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.util.InteractionResult;
@@ -37,7 +37,7 @@ import javax.annotation.Nonnull;
 import java.util.UUID;
 
 public class SkeletonHorseEntity extends AbstractHorseEntity {
-    public SkeletonHorseEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public SkeletonHorseEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/TraderLlamaEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/TraderLlamaEntity.java
index 4be0ef5e297124a0c6516b329bdd2e22ebb7d8cd..69183630dc8b690ff51f18200b57e29d306691e6 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/TraderLlamaEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/TraderLlamaEntity.java
@@ -27,14 +27,14 @@ package org.geysermc.geyser.entity.type.living.animal.horse;
 
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class TraderLlamaEntity extends LlamaEntity {
 
-    public TraderLlamaEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public TraderLlamaEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/ZombieHorseEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/ZombieHorseEntity.java
index 423537496c664f8b81e1cd785a553c8a0608fa22..8baa23fbc3692116eb3d996c0dd5e8938ae87a81 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/ZombieHorseEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/horse/ZombieHorseEntity.java
@@ -27,7 +27,7 @@ package org.geysermc.geyser.entity.type.living.animal.horse;
 
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.util.InteractionResult;
@@ -37,7 +37,7 @@ import javax.annotation.Nonnull;
 import java.util.UUID;
 
 public class ZombieHorseEntity extends AbstractHorseEntity {
-    public ZombieHorseEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public ZombieHorseEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/tameable/CatEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/tameable/CatEntity.java
index 7903d85caa927465b208016d0241ea25569e31e3..7a01d854ae4a9b27a51118bc183f741c4d3270e3 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/tameable/CatEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/tameable/CatEntity.java
@@ -32,7 +32,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.item.type.Item;
@@ -47,7 +47,7 @@ public class CatEntity extends TameableEntity {
 
     private byte collarColor;
 
-    public CatEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public CatEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/tameable/ParrotEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/tameable/ParrotEntity.java
index 43f379de80ec31b03a1245e0d349ab68eb6ddd35..35f3cdd931cbce0f1350d7f43d441bb9ef63a6d5 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/tameable/ParrotEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/tameable/ParrotEntity.java
@@ -28,7 +28,7 @@ package org.geysermc.geyser.entity.type.living.animal.tameable;
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.item.type.Item;
@@ -44,7 +44,7 @@ public class ParrotEntity extends TameableEntity {
     // Note: is the same as chicken. Reuse?
     private static final Set<Item> TAMING_FOOD = Set.of(Items.WHEAT_SEEDS, Items.MELON_SEEDS, Items.PUMPKIN_SEEDS, Items.BEETROOT_SEEDS);
 
-    public ParrotEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public ParrotEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/tameable/TameableEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/tameable/TameableEntity.java
index 5fc8c459de48dc7aa940957973501e263444d5df..f80045bdaecde3fd37bd3f83b9184c15b92c69e3 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/tameable/TameableEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/tameable/TameableEntity.java
@@ -31,7 +31,7 @@ import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
 import lombok.Getter;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.Entity;
 import org.geysermc.geyser.entity.type.living.animal.AnimalEntity;
 import org.geysermc.geyser.session.GeyserSession;
@@ -46,7 +46,7 @@ public class TameableEntity extends AnimalEntity {
     @Getter
     protected long ownerBedrockId;
 
-    public TameableEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public TameableEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/tameable/WolfEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/tameable/WolfEntity.java
index ecf0736a35b501848c54af0655079d63de5ae28e..503537fdf490abe356757e605edd76bd7e635a4c 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/tameable/WolfEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/animal/tameable/WolfEntity.java
@@ -31,7 +31,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.item.type.DyeItem;
@@ -56,7 +56,7 @@ public class WolfEntity extends TameableEntity {
 
     private byte collarColor;
 
-    public WolfEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public WolfEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/merchant/AbstractMerchantEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/merchant/AbstractMerchantEntity.java
index b8465f9cab81942758ca543fe0853fbf07a1c056..d725719c3ac91e4933967d43efa3562978198975 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/merchant/AbstractMerchantEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/merchant/AbstractMerchantEntity.java
@@ -28,7 +28,7 @@ package org.geysermc.geyser.entity.type.living.merchant;
 import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.EntityDefinitions;
 import org.geysermc.geyser.entity.type.living.AgeableEntity;
 import org.geysermc.geyser.inventory.GeyserItemStack;
@@ -42,7 +42,7 @@ import java.util.UUID;
 
 public class AbstractMerchantEntity extends AgeableEntity {
 
-    public AbstractMerchantEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public AbstractMerchantEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/merchant/VillagerEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/merchant/VillagerEntity.java
index 84fa7d1bdde5c247ba2b2736840d10a7a5ee16b6..f611030c22690ea810c5bb84d1d549a5d21e5be2 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/merchant/VillagerEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/merchant/VillagerEntity.java
@@ -33,7 +33,7 @@ import org.cloudburstmc.math.vector.Vector3i;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
 import org.cloudburstmc.protocol.bedrock.packet.MoveEntityAbsolutePacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.registry.BlockRegistries;
 import org.geysermc.geyser.registry.type.BlockMapping;
 import org.geysermc.geyser.session.GeyserSession;
@@ -85,7 +85,7 @@ public class VillagerEntity extends AbstractMerchantEntity {
     @Getter
     private boolean canTradeWith;
 
-    public VillagerEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public VillagerEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/AbstractSkeletonEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/AbstractSkeletonEntity.java
index 04b3bba1bbf04918477d37944f7d247349d68af6..485a09b912a1c09a39709a6320ef7d21a213ac5e 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/AbstractSkeletonEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/AbstractSkeletonEntity.java
@@ -28,14 +28,14 @@ package org.geysermc.geyser.entity.type.living.monster;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.ByteEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class AbstractSkeletonEntity extends MonsterEntity {
 
-    public AbstractSkeletonEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public AbstractSkeletonEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/BasePiglinEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/BasePiglinEntity.java
index 5f2647b7a2bbe8a1d39dfe717c4e817efa87565b..b7e1adb84c75686c5d504eda3a78dd810ccc919a 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/BasePiglinEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/BasePiglinEntity.java
@@ -28,7 +28,7 @@ package org.geysermc.geyser.entity.type.living.monster;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.BooleanEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
@@ -36,7 +36,7 @@ import java.util.UUID;
 public class BasePiglinEntity extends MonsterEntity {
     private boolean isImmuneToZombification;
 
-    public BasePiglinEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public BasePiglinEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/BlazeEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/BlazeEntity.java
index 43d78f4684dd820fe5f5b8efc9795e452f9bff29..ffd1d0cff19e8aa41871793b0e6595b9ffab1d0a 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/BlazeEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/BlazeEntity.java
@@ -28,14 +28,14 @@ package org.geysermc.geyser.entity.type.living.monster;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.ByteEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class BlazeEntity extends MonsterEntity {
 
-    public BlazeEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public BlazeEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/CreeperEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/CreeperEntity.java
index e507226815ea940451ccc69db044a41569843a59..9415fab55f55cdd1b01c043ee99e804e50898b2d 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/CreeperEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/CreeperEntity.java
@@ -31,7 +31,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.SoundEvent;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.util.InteractionResult;
@@ -47,7 +47,7 @@ public class CreeperEntity extends MonsterEntity {
      */
     private boolean ignitedByFlintAndSteel = false;
 
-    public CreeperEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public CreeperEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ElderGuardianEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ElderGuardianEntity.java
index 8890e72a974020e0dff136d7b509f730af5b16ff..422fe3977e99e98c94d97d8c729976a4006c8666 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ElderGuardianEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ElderGuardianEntity.java
@@ -27,14 +27,14 @@ package org.geysermc.geyser.entity.type.living.monster;
 
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class ElderGuardianEntity extends GuardianEntity {
 
-    public ElderGuardianEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public ElderGuardianEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/EnderDragonEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/EnderDragonEntity.java
index bb09a23f4cac0c0c615273fcbc87bf91bc6b4b8c..2825ed4b8797caf978e2480a02889cfabac60653 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/EnderDragonEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/EnderDragonEntity.java
@@ -37,7 +37,7 @@ import org.cloudburstmc.protocol.bedrock.packet.EntityEventPacket;
 import org.cloudburstmc.protocol.bedrock.packet.LevelEventPacket;
 import org.cloudburstmc.protocol.bedrock.packet.PlaySoundPacket;
 import org.cloudburstmc.protocol.bedrock.packet.SpawnParticleEffectPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.Tickable;
 import org.geysermc.geyser.entity.type.living.MobEntity;
 import org.geysermc.geyser.session.GeyserSession;
@@ -84,7 +84,7 @@ public class EnderDragonEntity extends MobEntity implements Tickable {
     private float wingPosition;
     private float lastWingPosition;
 
-    public EnderDragonEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public EnderDragonEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/EndermanEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/EndermanEntity.java
index 5b8e23f8bb0880a8a86e4d03b1eac7e0a13ad23b..acd3ce10b2e6561626f468aab0bf5fc144e6fac2 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/EndermanEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/EndermanEntity.java
@@ -33,14 +33,14 @@ import org.cloudburstmc.protocol.bedrock.data.definitions.BlockDefinition;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
 import org.cloudburstmc.protocol.bedrock.packet.LevelSoundEvent2Packet;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class EndermanEntity extends MonsterEntity {
 
-    public EndermanEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public EndermanEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/GhastEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/GhastEntity.java
index f7b9d17b8f566e9c0dc79048ea295d5430c4a5cb..87a685faf0561dc1d825a63e229d69def805346b 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/GhastEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/GhastEntity.java
@@ -28,7 +28,7 @@ package org.geysermc.geyser.entity.type.living.monster;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.BooleanEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.living.FlyingEntity;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -36,7 +36,7 @@ import java.util.UUID;
 
 public class GhastEntity extends FlyingEntity {
 
-    public GhastEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public GhastEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/GiantEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/GiantEntity.java
index e98c8f120a70caa6e2e5bb95c9f0b74fb15b805d..0fc67ed08391f85b82d7f2a66c5cd03fbd9ae009 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/GiantEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/GiantEntity.java
@@ -27,14 +27,14 @@ package org.geysermc.geyser.entity.type.living.monster;
 
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class GiantEntity extends MonsterEntity {
 
-    public GiantEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public GiantEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
 
         dirtyMetadata.put(EntityDataTypes.SCALE, 6f);
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/GuardianEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/GuardianEntity.java
index 92e50d207bcce21bb5b81ef57e1e84dd84d81ff0..036838f6f882ae15b2ee563ded34508966a4ef56 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/GuardianEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/GuardianEntity.java
@@ -28,7 +28,7 @@ package org.geysermc.geyser.entity.type.living.monster;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.IntEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.Entity;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -36,7 +36,7 @@ import java.util.UUID;
 
 public class GuardianEntity extends MonsterEntity {
 
-    public GuardianEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public GuardianEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/MonsterEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/MonsterEntity.java
index c0edc448cd7bf1b1601a811a8351b066ff8a5db7..fde75df9aaa85ff389993ff858dc34ee61a4fd1e 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/MonsterEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/MonsterEntity.java
@@ -26,7 +26,7 @@
 package org.geysermc.geyser.entity.type.living.monster;
 
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.living.CreatureEntity;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -34,7 +34,7 @@ import java.util.UUID;
 
 public class MonsterEntity extends CreatureEntity {
 
-    public MonsterEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public MonsterEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/PhantomEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/PhantomEntity.java
index 915e34e79ba628a1eedc0501f6d800e0ebaf8a47..4d610d20064cfdc6268c9aa2b2afabb4fbcdcfad 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/PhantomEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/PhantomEntity.java
@@ -28,14 +28,14 @@ package org.geysermc.geyser.entity.type.living.monster;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.IntEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.living.FlyingEntity;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class PhantomEntity extends FlyingEntity {
-    public PhantomEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public PhantomEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/PiglinEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/PiglinEntity.java
index 25fe7f8025df11f7940a5542fc068b0f577134a9..2a85eb7a163e3071c2678e96077d6d2be3e6895b 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/PiglinEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/PiglinEntity.java
@@ -30,7 +30,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
 import org.geysermc.geyser.session.GeyserSession;
@@ -42,7 +42,7 @@ import java.util.UUID;
 
 public class PiglinEntity extends BasePiglinEntity {
 
-    public PiglinEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public PiglinEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ShulkerEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ShulkerEntity.java
index 27dd45f4028b8994f5f6e94c259a17a03880755f..666c94b762fe82a71960aeabb7fcb8d4e4c19157 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ShulkerEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ShulkerEntity.java
@@ -31,7 +31,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.object.Direction;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.living.GolemEntity;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -39,7 +39,7 @@ import java.util.UUID;
 
 public class ShulkerEntity extends GolemEntity {
 
-    public ShulkerEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public ShulkerEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
         // Indicate that invisibility should be fixed through the resource pack
         setFlag(EntityFlag.BRIBED, true);
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/SkeletonEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/SkeletonEntity.java
index da11b27594c0e24553fbd530d73fea238c91cf2c..024067fd6a7e01112db710c3490a70cf8b321b4c 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/SkeletonEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/SkeletonEntity.java
@@ -28,7 +28,7 @@ package org.geysermc.geyser.entity.type.living.monster;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.BooleanEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
@@ -36,7 +36,7 @@ import java.util.UUID;
 public class SkeletonEntity extends AbstractSkeletonEntity {
     private boolean convertingToStray = false;
 
-    public SkeletonEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public SkeletonEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/SpiderEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/SpiderEntity.java
index 03e2349110d675dcf68d7c3a0aff73234cfb751f..e7eba5baf8239f0acd397a0bcfe9301468359f1c 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/SpiderEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/SpiderEntity.java
@@ -28,14 +28,14 @@ package org.geysermc.geyser.entity.type.living.monster;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.ByteEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class SpiderEntity extends MonsterEntity {
 
-    public SpiderEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public SpiderEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/VexEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/VexEntity.java
index 56a0975ae0c3ab5f6d3fcfc522624ebf1ca1d41f..8021d879e01f69a6a9ec2792fcbc6b63c1d7362a 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/VexEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/VexEntity.java
@@ -28,14 +28,14 @@ package org.geysermc.geyser.entity.type.living.monster;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.ByteEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class VexEntity extends MonsterEntity {
 
-    public VexEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public VexEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/WardenEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/WardenEntity.java
index 7a0c5e0403237bcacc1702f12fd5c22a1350e8a3..b4800d0703a5910207533c432b8300a0f2065dea 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/WardenEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/WardenEntity.java
@@ -32,7 +32,7 @@ import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
 import org.cloudburstmc.protocol.bedrock.packet.PlaySoundPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.Tickable;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.util.MathUtils;
@@ -46,7 +46,7 @@ public class WardenEntity extends MonsterEntity implements Tickable {
 
     private int sonicBoomTickDuration;
 
-    public WardenEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public WardenEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/WitherEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/WitherEntity.java
index 3abb7f12228c6ea8eaa6a69d8d9c77cfc80af479..fe9f7d810156b521152578dc2a74fa8057d85a3b 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/WitherEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/WitherEntity.java
@@ -29,7 +29,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.IntEntit
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataType;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.Entity;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -37,7 +37,7 @@ import java.util.UUID;
 
 public class WitherEntity extends MonsterEntity {
 
-    public WitherEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public WitherEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ZoglinEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ZoglinEntity.java
index 6e40573ba9e0dd69eb98cf394e312d4147e319f2..4127b13244c99b4bf57f13aea5216d1bd159e778 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ZoglinEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ZoglinEntity.java
@@ -29,14 +29,14 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.BooleanE
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class ZoglinEntity extends MonsterEntity {
 
-    public ZoglinEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public ZoglinEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ZombieEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ZombieEntity.java
index af6a30a10d4b968f2ee8c776fa40249f96f17789..ecde11e215c0b38b0f275bbce0f1df5b2fe0202e 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ZombieEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ZombieEntity.java
@@ -29,7 +29,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.BooleanE
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
@@ -37,7 +37,7 @@ import java.util.UUID;
 public class ZombieEntity extends MonsterEntity {
     private boolean convertingToDrowned = false;
 
-    public ZombieEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public ZombieEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ZombieVillagerEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ZombieVillagerEntity.java
index fbac8663fe34fad6f51c32ea930fdeedfa0a988b..121290e780892c04e90349e17486c89c7ddfea3a 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ZombieVillagerEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ZombieVillagerEntity.java
@@ -32,7 +32,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.living.merchant.VillagerEntity;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
@@ -45,7 +45,7 @@ import java.util.UUID;
 
 public class ZombieVillagerEntity extends ZombieEntity {
 
-    public ZombieVillagerEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public ZombieVillagerEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ZombifiedPiglinEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ZombifiedPiglinEntity.java
index 0a0fe63069246c098691db71adf0935e25213264..5a83be0fc4b0169ea33317bab5630181e7bf3c27 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ZombifiedPiglinEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/ZombifiedPiglinEntity.java
@@ -27,14 +27,14 @@ package org.geysermc.geyser.entity.type.living.monster;
 
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class ZombifiedPiglinEntity extends ZombieEntity {
 
-    public ZombifiedPiglinEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public ZombifiedPiglinEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
 
         setFlag(EntityFlag.FIRE_IMMUNE, true);
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/AbstractIllagerEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/AbstractIllagerEntity.java
index 90138742f89f798a84415323732f714f9b5e5c1b..de10b636fa17c8ed3305f1b0224fc77385ac32e0 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/AbstractIllagerEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/AbstractIllagerEntity.java
@@ -26,14 +26,14 @@
 package org.geysermc.geyser.entity.type.living.monster.raid;
 
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class AbstractIllagerEntity extends RaidParticipantEntity {
 
-    public AbstractIllagerEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public AbstractIllagerEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 }
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/PillagerEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/PillagerEntity.java
index d2f8377d32bb30030be70d541a21a7727695866d..94d1fff3402aa5bce8615223eea1ade1f0640c27 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/PillagerEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/PillagerEntity.java
@@ -27,7 +27,7 @@ package org.geysermc.geyser.entity.type.living.monster.raid;
 
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.registry.type.ItemMapping;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -35,7 +35,7 @@ import java.util.UUID;
 
 public class PillagerEntity extends AbstractIllagerEntity {
 
-    public PillagerEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public PillagerEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/RaidParticipantEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/RaidParticipantEntity.java
index 05becf490f9d955595a3a28e35c1f45dc7f0be29..dbc4771a2d68eebbe43186e4378d8f27faa5cedf 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/RaidParticipantEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/RaidParticipantEntity.java
@@ -26,7 +26,7 @@
 package org.geysermc.geyser.entity.type.living.monster.raid;
 
 import org.cloudburstmc.math.vector.Vector3f;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.living.monster.MonsterEntity;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -34,7 +34,7 @@ import java.util.UUID;
 
 public class RaidParticipantEntity extends MonsterEntity {
 
-    public RaidParticipantEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public RaidParticipantEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 }
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/SpellcasterIllagerEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/SpellcasterIllagerEntity.java
index f083437ae7edfc2d6cf1df214bcd5da5225a0ed9..b13f666520edf18e1df186c423a1cb501d39f923 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/SpellcasterIllagerEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/SpellcasterIllagerEntity.java
@@ -29,7 +29,7 @@ import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.ByteEnti
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.EntityDefinitions;
 import org.geysermc.geyser.session.GeyserSession;
 
@@ -40,7 +40,7 @@ public class SpellcasterIllagerEntity extends AbstractIllagerEntity {
     private static final int ATTACK_PARTICLE_COLOR = (102 << 16) | (77 << 8) | 89;
     private static final int WOLOLO_PARTICLE_COLOR = (179 << 16) | (128 << 8) | 51;
 
-    public SpellcasterIllagerEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public SpellcasterIllagerEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
         // OptionalPack usage
         setFlag(EntityFlag.BRIBED, this.definition == EntityDefinitions.ILLUSIONER);
diff --git a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/VindicatorEntity.java b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/VindicatorEntity.java
index ad99dda50632db6f71f73162d04d4edc29a298cb..73f688325eecd54b0d86169287d8d83c7b88e47b 100644
--- a/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/VindicatorEntity.java
+++ b/core/src/main/java/org/geysermc/geyser/entity/type/living/monster/raid/VindicatorEntity.java
@@ -28,14 +28,14 @@ package org.geysermc.geyser.entity.type.living.monster.raid;
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.type.ByteEntityMetadata;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.session.GeyserSession;
 
 import java.util.UUID;
 
 public class VindicatorEntity extends AbstractIllagerEntity {
 
-    public VindicatorEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, EntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
+    public VindicatorEntity(GeyserSession session, int entityId, long geyserId, UUID uuid, GeyserEntityDefinition<?> definition, Vector3f position, Vector3f motion, float yaw, float pitch, float headYaw) {
         super(session, entityId, geyserId, uuid, definition, position, motion, yaw, pitch, headYaw);
     }
 
diff --git a/core/src/main/java/org/geysermc/geyser/event/type/GeyserDefineEntitiesEventImpl.java b/core/src/main/java/org/geysermc/geyser/event/type/GeyserDefineEntitiesEventImpl.java
new file mode 100644
index 0000000000000000000000000000000000000000..06ee78986cc858b024e01ad4f8cb2ea3fee4e512
--- /dev/null
+++ b/core/src/main/java/org/geysermc/geyser/event/type/GeyserDefineEntitiesEventImpl.java
@@ -0,0 +1,46 @@
+/*
+ * Copyright (c) 2019-2023 GeyserMC. http://geysermc.org
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ * THE SOFTWARE.
+ *
+ * @author GeyserMC
+ * @link https://github.com/GeyserMC/Geyser
+ */
+
+package org.geysermc.geyser.event.type;
+
+import org.checkerframework.checker.nullness.qual.NonNull;
+import org.geysermc.geyser.api.entity.EntityDefinition;
+import org.geysermc.geyser.api.event.lifecycle.GeyserDefineEntitiesEvent;
+
+import java.util.List;
+
+public abstract class GeyserDefineEntitiesEventImpl implements GeyserDefineEntitiesEvent {
+    private final List<EntityDefinition> entityDefinitions;
+
+    public GeyserDefineEntitiesEventImpl(List<EntityDefinition> entityDefinitions) {
+        this.entityDefinitions = entityDefinitions;
+    }
+
+    @NonNull
+    @Override
+    public List<EntityDefinition> entityDefinitions() {
+        return this.entityDefinitions;
+    }
+}
diff --git a/core/src/main/java/org/geysermc/geyser/registry/Registries.java b/core/src/main/java/org/geysermc/geyser/registry/Registries.java
index 9b5ed8ae61c3bf67929863a143d1f4b5534058d7..abc27623804d2e9d33551d0df18f2d9edc193633 100644
--- a/core/src/main/java/org/geysermc/geyser/registry/Registries.java
+++ b/core/src/main/java/org/geysermc/geyser/registry/Registries.java
@@ -35,6 +35,7 @@ import it.unimi.dsi.fastutil.ints.Int2ObjectMap;
 import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
 import it.unimi.dsi.fastutil.objects.Object2IntMap;
 import it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap;
+import org.checkerframework.checker.nullness.qual.NonNull;
 import org.cloudburstmc.nbt.NbtMap;
 import org.cloudburstmc.nbt.NbtMapBuilder;
 import org.cloudburstmc.protocol.bedrock.data.inventory.crafting.PotionMixData;
@@ -42,11 +43,25 @@ import org.cloudburstmc.protocol.bedrock.data.inventory.crafting.recipe.RecipeDa
 import org.cloudburstmc.protocol.bedrock.packet.BedrockPacket;
 import org.geysermc.geyser.GeyserImpl;
 import org.geysermc.geyser.api.pack.ResourcePack;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.GeyserImpl;
+import org.geysermc.geyser.api.entity.EntityDefinition;
+import org.geysermc.geyser.api.event.lifecycle.GeyserDefineEntitiesEvent;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
+import org.geysermc.geyser.event.type.GeyserDefineEntitiesEventImpl;
 import org.geysermc.geyser.inventory.item.Enchantment.JavaEnchantment;
 import org.geysermc.geyser.inventory.recipe.GeyserRecipe;
 import org.geysermc.geyser.item.type.Item;
-import org.geysermc.geyser.registry.loader.*;
+import org.geysermc.geyser.registry.loader.BiomeIdentifierRegistryLoader;
+import org.geysermc.geyser.registry.loader.BlockEntityRegistryLoader;
+import org.geysermc.geyser.registry.loader.CollisionRegistryLoader;
+import org.geysermc.geyser.registry.loader.EnchantmentRegistryLoader;
+import org.geysermc.geyser.registry.loader.ParticleTypesRegistryLoader;
+import org.geysermc.geyser.registry.loader.PotionMixRegistryLoader;
+import org.geysermc.geyser.registry.loader.ProviderRegistryLoader;
+import org.geysermc.geyser.registry.loader.RegistryLoaders;
+import org.geysermc.geyser.registry.loader.SoundEventsRegistryLoader;
+import org.geysermc.geyser.registry.loader.SoundRegistryLoader;
+import org.geysermc.geyser.registry.loader.SoundTranslatorRegistryLoader;
 import org.geysermc.geyser.registry.populator.ItemRegistryPopulator;
 import org.geysermc.geyser.registry.populator.PacketRegistryPopulator;
 import org.geysermc.geyser.registry.populator.RecipeRegistryPopulator;
@@ -59,8 +74,16 @@ import org.geysermc.geyser.translator.level.block.entity.BlockEntityTranslator;
 import org.geysermc.geyser.translator.level.event.LevelEventTranslator;
 import org.geysermc.geyser.translator.sound.SoundInteractionTranslator;
 import org.geysermc.geyser.translator.sound.SoundTranslator;
+import org.geysermc.geyser.util.EntityUtils;
 
-import java.util.*;
+import java.util.ArrayList;
+import java.util.EnumMap;
+import java.util.IdentityHashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.Objects;
+import java.util.Set;
+import java.util.stream.Collectors;
 
 /**
  * Holds all the common registries in Geyser.
@@ -110,12 +133,12 @@ public final class Registries {
     /**
      * A map containing all entity types and their respective Geyser definitions
      */
-    public static final SimpleMappedRegistry<EntityType, EntityDefinition<?>> ENTITY_DEFINITIONS = SimpleMappedRegistry.create(RegistryLoaders.empty(() -> new EnumMap<>(EntityType.class)));
+    public static final SimpleMappedRegistry<EntityType, GeyserEntityDefinition<?>> ENTITY_DEFINITIONS = SimpleMappedRegistry.create(RegistryLoaders.empty(() -> new EnumMap<>(EntityType.class)));
 
     /**
-     * A map containing all Java entity identifiers and their respective Geyser definitions
+     * A map containing all entity identifiers and their respective Geyser definitions
      */
-    public static final SimpleMappedRegistry<String, EntityDefinition<?>> JAVA_ENTITY_IDENTIFIERS = SimpleMappedRegistry.create(RegistryLoaders.empty(Object2ObjectOpenHashMap::new));
+    public static final SimpleMappedRegistry<String, GeyserEntityDefinition<?>> ENTITY_IDENTIFIERS = SimpleMappedRegistry.create(RegistryLoaders.empty(Object2ObjectOpenHashMap::new));
 
     /**
      * A registry containing all the Java packet translators.
@@ -200,4 +223,27 @@ public final class Registries {
         }
         BIOMES_NBT.set(biomesNbt.build());
     }
+
+    public static void callRegistryEvents() {
+        // Call registry events
+        List<EntityDefinition> definitions = ENTITY_IDENTIFIERS.get().values().stream()
+                .map(def -> (EntityDefinition) def)
+                .filter(Objects::nonNull)
+                .collect(Collectors.toList());
+
+        GeyserDefineEntitiesEvent defineEntitiesEvent = new GeyserDefineEntitiesEventImpl(definitions) {
+            @Override
+            public boolean register(@NonNull EntityDefinition entityDefinition) {
+                GeyserEntityDefinition<?> geyserDefinition = (GeyserEntityDefinition<?>) entityDefinition;
+                if (!geyserDefinition.custom()) {
+                    return false;
+                }
+
+                EntityUtils.registerEntity(geyserDefinition.identifier(), geyserDefinition);
+                return true;
+            }
+        };
+
+        GeyserImpl.getInstance().eventBus().fire(defineEntitiesEvent);
+    }
 }
diff --git a/core/src/main/java/org/geysermc/geyser/registry/loader/ProviderRegistryLoader.java b/core/src/main/java/org/geysermc/geyser/registry/loader/ProviderRegistryLoader.java
index 13d7a4d77d867ffb876df63164294db4352efff0..7c3370d54367f1279e835c7bdf2839e148cc276c 100644
--- a/core/src/main/java/org/geysermc/geyser/registry/loader/ProviderRegistryLoader.java
+++ b/core/src/main/java/org/geysermc/geyser/registry/loader/ProviderRegistryLoader.java
@@ -32,6 +32,8 @@ import org.geysermc.geyser.api.block.custom.component.GeometryComponent;
 import org.geysermc.geyser.api.block.custom.component.MaterialInstance;
 import org.geysermc.geyser.api.block.custom.nonvanilla.JavaBlockState;
 import org.geysermc.geyser.api.command.Command;
+import org.geysermc.geyser.api.entity.EntityDefinition;
+import org.geysermc.geyser.api.entity.EntityIdentifier;
 import org.geysermc.geyser.api.event.EventRegistrar;
 import org.geysermc.geyser.api.extension.Extension;
 import org.geysermc.geyser.api.item.custom.CustomItemData;
@@ -39,6 +41,9 @@ import org.geysermc.geyser.api.item.custom.CustomItemOptions;
 import org.geysermc.geyser.api.item.custom.NonVanillaCustomItemData;
 import org.geysermc.geyser.api.pack.PathPackCodec;
 import org.geysermc.geyser.command.GeyserCommandManager;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityIdentifier;
+import org.geysermc.geyser.entity.type.Entity;
 import org.geysermc.geyser.event.GeyserEventRegistrar;
 import org.geysermc.geyser.item.GeyserCustomItemData;
 import org.geysermc.geyser.item.GeyserCustomItemOptions;
@@ -80,6 +85,10 @@ public class ProviderRegistryLoader implements RegistryLoader<Map<Class<?>, Prov
         providers.put(CustomItemOptions.Builder.class, args -> new GeyserCustomItemOptions.CustomItemOptionsBuilder());
         providers.put(NonVanillaCustomItemData.Builder.class, args -> new GeyserNonVanillaCustomItemData.NonVanillaCustomItemDataBuilder());
 
+        // entities
+        providers.put(EntityIdentifier.Builder.class, args -> new GeyserEntityIdentifier.EntityIdentifierBuilder());
+        providers.put(EntityDefinition.Builder.class, args -> new GeyserEntityDefinition.EntityDefinitionBuilder<>(Entity::new, true));
+
         return providers;
     }
 }
diff --git a/core/src/main/java/org/geysermc/geyser/session/GeyserSession.java b/core/src/main/java/org/geysermc/geyser/session/GeyserSession.java
index 673ff5f3781c9a0230ab5abe0880f6c6f0410515..5bcb09a3e01dfc5bd94e7b05fe8a8e0a794f917a 100644
--- a/core/src/main/java/org/geysermc/geyser/session/GeyserSession.java
+++ b/core/src/main/java/org/geysermc/geyser/session/GeyserSession.java
@@ -82,6 +82,8 @@ import org.checkerframework.checker.nullness.qual.Nullable;
 import org.checkerframework.common.value.qual.IntRange;
 import org.cloudburstmc.math.vector.*;
 import org.cloudburstmc.nbt.NbtMap;
+import org.cloudburstmc.nbt.NbtMapBuilder;
+import org.cloudburstmc.nbt.NbtType;
 import org.cloudburstmc.protocol.bedrock.BedrockDisconnectReasons;
 import org.cloudburstmc.protocol.bedrock.BedrockServerSession;
 import org.cloudburstmc.protocol.bedrock.data.*;
@@ -103,9 +105,11 @@ import org.geysermc.geyser.Constants;
 import org.geysermc.geyser.GeyserImpl;
 import org.geysermc.geyser.api.bedrock.camera.CameraShake;
 import org.geysermc.geyser.api.connection.GeyserConnection;
+import org.geysermc.geyser.api.entity.EntityIdentifier;
 import org.geysermc.geyser.api.entity.type.GeyserEntity;
 import org.geysermc.geyser.api.entity.type.player.GeyserPlayerEntity;
 import org.geysermc.geyser.api.event.bedrock.SessionLoginEvent;
+import org.geysermc.geyser.api.event.bedrock.SessionDefineEntitiesEvent;
 import org.geysermc.geyser.api.network.AuthType;
 import org.geysermc.geyser.api.network.RemoteServer;
 import org.geysermc.geyser.api.util.PlatformType;
@@ -113,6 +117,7 @@ import org.geysermc.geyser.command.GeyserCommandSource;
 import org.geysermc.geyser.configuration.EmoteOffhandWorkaroundOption;
 import org.geysermc.geyser.configuration.GeyserConfiguration;
 import org.geysermc.geyser.entity.EntityDefinitions;
+import org.geysermc.geyser.entity.GeyserEntityIdentifier;
 import org.geysermc.geyser.entity.attribute.GeyserAttributeType;
 import org.geysermc.geyser.entity.type.Entity;
 import org.geysermc.geyser.entity.type.ItemFrameEntity;
@@ -157,6 +162,7 @@ import java.util.concurrent.ConcurrentLinkedQueue;
 import java.util.concurrent.ScheduledFuture;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
+import java.util.stream.Collectors;
 
 @Getter
 public class GeyserSession implements GeyserConnection, GeyserCommandSource {
@@ -655,9 +661,7 @@ public class GeyserSession implements GeyserConnection, GeyserCommandSource {
         biomeDefinitionListPacket.setDefinitions(Registries.BIOMES_NBT.get());
         upstream.sendPacket(biomeDefinitionListPacket);
 
-        AvailableEntityIdentifiersPacket entityPacket = new AvailableEntityIdentifiersPacket();
-        entityPacket.setIdentifiers(Registries.BEDROCK_ENTITY_IDENTIFIERS.get());
-        upstream.sendPacket(entityPacket);
+        this.sendAvailableEntityIdentifiers();
 
         CreativeContentPacket creativePacket = new CreativeContentPacket();
         creativePacket.setContents(this.itemMappings.getCreativeItems());
@@ -693,6 +697,36 @@ public class GeyserSession implements GeyserConnection, GeyserCommandSource {
         upstream.sendPacket(gamerulePacket);
     }
 
+    public void sendAvailableEntityIdentifiers() {
+        NbtMap nbt = Registries.BEDROCK_ENTITY_IDENTIFIERS.get();
+        List<NbtMap> idlist = nbt.getList("idlist", NbtType.COMPOUND);
+        List<EntityIdentifier> identifiers = new ArrayList<>(idlist.size());
+        for (NbtMap identifier : idlist) {
+            identifiers.add(new GeyserEntityIdentifier(identifier));
+        }
+
+        NbtMapBuilder builder = nbt.toBuilder();
+        SessionDefineEntitiesEvent event = new SessionDefineEntitiesEvent(this, identifiers) {
+
+            @Override
+            public boolean register(@NonNull EntityIdentifier entityIdentifier) {
+                return identifiers.add(entityIdentifier);
+            }
+        };
+
+        this.geyser.eventBus().fire(event);
+
+        builder.putList("idlist", NbtType.COMPOUND, identifiers
+                .stream()
+                .map(identifer -> ((GeyserEntityIdentifier) identifer).nbt())
+                .collect(Collectors.toList())
+        );
+
+        AvailableEntityIdentifiersPacket entityPacket = new AvailableEntityIdentifiersPacket();
+        entityPacket.setIdentifiers(builder.build());
+        upstream.sendPacket(entityPacket);
+    }
+
     public void authenticate(String username) {
         if (loggedIn) {
             geyser.getLogger().severe(GeyserLocale.getLocaleStringLog("geyser.auth.already_loggedin", username));
diff --git a/core/src/main/java/org/geysermc/geyser/translator/level/block/entity/SpawnerBlockEntityTranslator.java b/core/src/main/java/org/geysermc/geyser/translator/level/block/entity/SpawnerBlockEntityTranslator.java
index d1af70d8d4579b491d16db0c950c42174da976e2..bdcc86f4b869384a2d6aa7c8b25f333f0c39b02b 100644
--- a/core/src/main/java/org/geysermc/geyser/translator/level/block/entity/SpawnerBlockEntityTranslator.java
+++ b/core/src/main/java/org/geysermc/geyser/translator/level/block/entity/SpawnerBlockEntityTranslator.java
@@ -30,7 +30,7 @@ import com.github.steveice10.opennbt.tag.builtin.CompoundTag;
 import com.github.steveice10.opennbt.tag.builtin.StringTag;
 import com.github.steveice10.opennbt.tag.builtin.Tag;
 import org.cloudburstmc.nbt.NbtMapBuilder;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.registry.Registries;
 
 @BlockEntity(type = BlockEntityType.MOB_SPAWNER)
@@ -75,7 +75,7 @@ public class SpawnerBlockEntityTranslator extends BlockEntityTranslator {
                 String entityId = idTag.getValue();
                 builder.put("EntityIdentifier", entityId);
 
-                EntityDefinition<?> definition = Registries.JAVA_ENTITY_IDENTIFIERS.get(entityId);
+                GeyserEntityDefinition<?> definition = Registries.ENTITY_IDENTIFIERS.get(entityId);
                 if (definition != null) {
                     builder.put("DisplayEntityWidth", definition.width());
                     builder.put("DisplayEntityHeight", definition.height());
diff --git a/core/src/main/java/org/geysermc/geyser/translator/protocol/java/JavaCommandsTranslator.java b/core/src/main/java/org/geysermc/geyser/translator/protocol/java/JavaCommandsTranslator.java
index e29570171f3ccefbbbceab5ef5cca0aa69d48870..98b509d8cf6df3ddc313994409b0b175fad3f4ed 100644
--- a/core/src/main/java/org/geysermc/geyser/translator/protocol/java/JavaCommandsTranslator.java
+++ b/core/src/main/java/org/geysermc/geyser/translator/protocol/java/JavaCommandsTranslator.java
@@ -324,7 +324,7 @@ public class JavaCommandsTranslator extends PacketTranslator<ClientboundCommands
             if (entityTypes != null) {
                 return entityTypes;
             }
-            return (entityTypes = Registries.JAVA_ENTITY_IDENTIFIERS.get().keySet().toArray(new String[0]));
+            return (entityTypes = Registries.ENTITY_IDENTIFIERS.get().keySet().toArray(new String[0]));
         }
 
         public String[] getItemNames() {
diff --git a/core/src/main/java/org/geysermc/geyser/translator/protocol/java/entity/JavaSetEntityDataTranslator.java b/core/src/main/java/org/geysermc/geyser/translator/protocol/java/entity/JavaSetEntityDataTranslator.java
index 54c14f7f083e2617721b4da3aa9f08f56d848799..3578e8baee0781ff6f1de0dfdab4191bd0a4c3fc 100644
--- a/core/src/main/java/org/geysermc/geyser/translator/protocol/java/entity/JavaSetEntityDataTranslator.java
+++ b/core/src/main/java/org/geysermc/geyser/translator/protocol/java/entity/JavaSetEntityDataTranslator.java
@@ -27,7 +27,7 @@ package org.geysermc.geyser.translator.protocol.java.entity;
 
 import com.github.steveice10.mc.protocol.data.game.entity.metadata.EntityMetadata;
 import com.github.steveice10.mc.protocol.packet.ingame.clientbound.entity.ClientboundSetEntityDataPacket;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.Entity;
 import org.geysermc.geyser.session.GeyserSession;
 import org.geysermc.geyser.translator.protocol.PacketTranslator;
@@ -42,7 +42,7 @@ public class JavaSetEntityDataTranslator extends PacketTranslator<ClientboundSet
         Entity entity = session.getEntityCache().getEntityByJavaId(packet.getEntityId());
         if (entity == null) return;
 
-        EntityDefinition<?> definition = entity.getDefinition();
+        GeyserEntityDefinition<?> definition = entity.getDefinition();
         for (EntityMetadata<?, ?> metadata : packet.getMetadata()) {
             if (metadata.getId() >= definition.translators().size()) {
                 if (session.getGeyser().getConfig().isDebugMode()) {
@@ -53,7 +53,7 @@ public class JavaSetEntityDataTranslator extends PacketTranslator<ClientboundSet
                 continue;
             }
 
-            ((EntityDefinition) definition).translateMetadata(entity, metadata);
+            ((GeyserEntityDefinition) definition).translateMetadata(entity, metadata);
         }
 
         entity.updateBedrockMetadata();
diff --git a/core/src/main/java/org/geysermc/geyser/translator/protocol/java/entity/spawn/JavaAddEntityTranslator.java b/core/src/main/java/org/geysermc/geyser/translator/protocol/java/entity/spawn/JavaAddEntityTranslator.java
index c17c9955dc9ae234d38515b9fc8710e2be9f67ae..73929e3143029fd41674346a737591ed604f7da9 100644
--- a/core/src/main/java/org/geysermc/geyser/translator/protocol/java/entity/spawn/JavaAddEntityTranslator.java
+++ b/core/src/main/java/org/geysermc/geyser/translator/protocol/java/entity/spawn/JavaAddEntityTranslator.java
@@ -32,7 +32,8 @@ import com.github.steveice10.mc.protocol.data.game.entity.type.EntityType;
 import com.github.steveice10.mc.protocol.packet.ingame.clientbound.entity.spawn.ClientboundAddEntityPacket;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.geysermc.geyser.GeyserImpl;
-import org.geysermc.geyser.entity.EntityDefinition;
+import org.geysermc.geyser.api.event.java.ServerSpawnEntityEvent;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
 import org.geysermc.geyser.entity.type.*;
 import org.geysermc.geyser.entity.type.player.PlayerEntity;
 import org.geysermc.geyser.registry.Registries;
@@ -47,12 +48,6 @@ public class JavaAddEntityTranslator extends PacketTranslator<ClientboundAddEnti
 
     @Override
     public void translate(GeyserSession session, ClientboundAddEntityPacket packet) {
-        EntityDefinition<?> definition = Registries.ENTITY_DEFINITIONS.get(packet.getType());
-        if (definition == null) {
-            session.getGeyser().getLogger().warning("Could not find an entity definition with type " + packet.getType());
-            return;
-        }
-
         Vector3f position = Vector3f.from(packet.getX(), packet.getY(), packet.getZ());
         Vector3f motion = Vector3f.from(packet.getMotionX(), packet.getMotionY(), packet.getMotionZ());
         float yaw = packet.getYaw();
@@ -85,9 +80,32 @@ public class JavaAddEntityTranslator extends PacketTranslator<ClientboundAddEnti
 
             entity.sendPlayer();
             SkinManager.requestAndHandleSkinAndCape(entity, session, null);
+        }
+
+        GeyserEntityDefinition<?> definition = Registries.ENTITY_DEFINITIONS.get(packet.getType());
+        if (definition == null) {
+            session.getGeyser().getLogger().warning("Could not find an entity definition with type " + packet.getType());
             return;
         }
 
+        ServerSpawnEntityEvent event = new ServerSpawnEntityEvent(session, packet.getEntityId(), packet.getUuid(), definition);
+        GeyserImpl.getInstance().eventBus().fire(event);
+
+        GeyserEntityDefinition<?> eventDefinition = (GeyserEntityDefinition<?>) event.entityDefinition();
+
+        // If the definition is changed, we need to update our current
+        // definition to reflect that.
+        if (!eventDefinition.equals(definition)) {
+            session.getGeyser().getLogger().debug("Replacing entity definition " + definition.identifier() + " with " + eventDefinition.identifier() + " for " + packet.getEntityId() + " (" + packet.getUuid() + ")");
+
+            definition = definition.toBuilder()
+                    .identifier(eventDefinition.entityIdentifier())
+                    .width(eventDefinition.width())
+                    .height(eventDefinition.height())
+                    .offset(eventDefinition.offset())
+                    .build();
+        }
+
         Entity entity;
         if (packet.getType() == EntityType.FALLING_BLOCK) {
             entity = new FallingBlockEntity(session, packet.getEntityId(), session.getEntityCache().getNextEntityId().incrementAndGet(), packet.getUuid(),
diff --git a/core/src/main/java/org/geysermc/geyser/util/EntityUtils.java b/core/src/main/java/org/geysermc/geyser/util/EntityUtils.java
index 68753c009d689d4378aad7d4eddd177b616555b0..69abbd27e3fe3bee84b85f55c48963adbef7f687 100644
--- a/core/src/main/java/org/geysermc/geyser/util/EntityUtils.java
+++ b/core/src/main/java/org/geysermc/geyser/util/EntityUtils.java
@@ -31,9 +31,14 @@ import com.github.steveice10.mc.protocol.data.game.entity.player.Hand;
 import com.github.steveice10.mc.protocol.data.game.entity.type.EntityType;
 import org.cloudburstmc.math.vector.Vector3f;
 import org.cloudburstmc.protocol.bedrock.data.GameType;
+import org.cloudburstmc.nbt.NbtMap;
+import org.cloudburstmc.nbt.NbtType;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityDataTypes;
 import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
+import org.geysermc.geyser.GeyserImpl;
 import org.geysermc.geyser.entity.EntityDefinitions;
+import org.geysermc.geyser.entity.GeyserEntityDefinition;
+import org.geysermc.geyser.entity.GeyserEntityIdentifier;
 import org.geysermc.geyser.entity.type.BoatEntity;
 import org.geysermc.geyser.entity.type.Entity;
 import org.geysermc.geyser.entity.type.living.ArmorStandEntity;
@@ -41,7 +46,10 @@ import org.geysermc.geyser.entity.type.living.animal.AnimalEntity;
 import org.geysermc.geyser.entity.type.living.animal.horse.CamelEntity;
 import org.geysermc.geyser.inventory.GeyserItemStack;
 import org.geysermc.geyser.item.Items;
+import org.geysermc.geyser.registry.Registries;
 
+import java.util.ArrayList;
+import java.util.List;
 import java.util.Locale;
 
 public final class EntityUtils {
@@ -275,6 +283,28 @@ public final class EntityUtils {
         };
     }
 
+    public static void registerEntity(String identifier, GeyserEntityDefinition<?> definition) {
+        if (definition.entityType() != null) {
+            Registries.ENTITY_DEFINITIONS.get().putIfAbsent(definition.entityType(), definition);
+            Registries.ENTITY_IDENTIFIERS.get().putIfAbsent(identifier, definition);
+        } else {
+            // We're dealing with a custom entity here
+            Registries.ENTITY_IDENTIFIERS.get().putIfAbsent(identifier, definition);
+
+            // Now let's add it to the entity identifiers
+            NbtMap nbt = Registries.BEDROCK_ENTITY_IDENTIFIERS.get();
+            List<NbtMap> idlist = new ArrayList<>(nbt.getList("idlist", NbtType.COMPOUND));
+            idlist.add(((GeyserEntityIdentifier) definition.entityIdentifier()).nbt());
+
+            NbtMap newIdentifiers = nbt.toBuilder()
+                    .putList("idlist", NbtType.COMPOUND, idlist)
+                    .build();
+
+            Registries.BEDROCK_ENTITY_IDENTIFIERS.set(newIdentifiers);
+            GeyserImpl.getInstance().getLogger().debug("Registered custom entity " + identifier);
+        }
+    }
+
     private EntityUtils() {
     }
 }
