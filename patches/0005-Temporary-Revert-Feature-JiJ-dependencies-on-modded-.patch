From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: byquanton <32410361+byquanton@users.noreply.github.com>
Date: Thu, 21 Mar 2024 10:05:23 +0000
Subject: [PATCH] Temporary Revert "Feature: JiJ dependencies on modded
 platforms (#4502)"

This reverts commit 867cf6da05c56ea5ead21533a6bfdebc601e60bf.

diff --git a/bootstrap/bungeecord/build.gradle.kts b/bootstrap/bungeecord/build.gradle.kts
index 1b57ffa5a799c4b50fb3f84b2fb2704c559a05be..4025569dda5182b1f2fc94008752992579999dee 100644
--- a/bootstrap/bungeecord/build.gradle.kts
+++ b/bootstrap/bungeecord/build.gradle.kts
@@ -1,7 +1,7 @@
 dependencies {
     api(projects.core)
+
     implementation(libs.adventure.text.serializer.bungeecord)
-    compileOnlyApi(libs.bungeecord.proxy)
 }
 
 platformRelocate("net.md_5.bungee.jni")
diff --git a/bootstrap/mod/fabric/build.gradle.kts b/bootstrap/mod/fabric/build.gradle.kts
index eb28e0e93e11316f2bd2a421fde114bf71153027..dac042ad79bf3e9ead4a00a9eaf2060c0d70bb1a 100644
--- a/bootstrap/mod/fabric/build.gradle.kts
+++ b/bootstrap/mod/fabric/build.gradle.kts
@@ -7,8 +7,6 @@ architectury {
     fabric()
 }
 
-val includeTransitive: Configuration = configurations.getByName("includeTransitive")
-
 dependencies {
     modImplementation(libs.fabric.loader)
     modApi(libs.fabric.api)
@@ -17,29 +15,14 @@ dependencies {
     shadow(project(path = ":mod", configuration = "transformProductionFabric")) {
         isTransitive = false
     }
-    shadow(projects.core) { isTransitive = false }
-    includeTransitive(projects.core)
-
-    // These are NOT transitively included, and instead shadowed + relocated.
-    // Avoids fabric complaining about non-SemVer versioning
-    // TODO: re-evaluate after loom 1.6 (https://github.com/FabricMC/fabric-loom/pull/1075)
-    shadow(libs.protocol.connection) { isTransitive = false }
-    shadow(libs.protocol.common) { isTransitive = false }
-    shadow(libs.protocol.codec) { isTransitive = false }
-    shadow(libs.mcauthlib) { isTransitive = false }
-    shadow(libs.raknet) { isTransitive = false }
-    shadow(libs.netty.codec.haproxy) { isTransitive = false }
-    shadow("org.cloudburstmc:nbt:3.0.2.Final") { isTransitive = false }
-    shadow("io.netty:netty-codec-dns:4.1.103.Final") { isTransitive = false }
-    shadow("io.netty:netty-resolver-dns-classes-macos:4.1.103.Final") { isTransitive = false }
-
-    // Consequences of shading + relocating mcauthlib: shadow/relocate mcpl!
-    shadow(libs.mcprotocollib) { isTransitive = false }
-
-    // Since we also relocate cloudburst protocol: shade erosion common
-    shadow(libs.erosion.common) { isTransitive = false }
+    shadow(projects.core) {
+        exclude(group = "com.google.guava", module = "guava")
+        exclude(group = "com.google.code.gson", module = "gson")
+        exclude(group = "org.slf4j")
+        exclude(group = "com.nukkitx.fastutil")
+        exclude(group = "io.netty.incubator")
+    }
 
-    // Permissions
     modImplementation(libs.fabric.permissions)
     include(libs.fabric.permissions)
 }
@@ -48,16 +31,6 @@ application {
     mainClass.set("org.geysermc.geyser.platform.fabric.GeyserFabricMain")
 }
 
-relocate("org.cloudburstmc.nbt")
-relocate("org.cloudburstmc.netty")
-relocate("org.cloudburstmc.protocol")
-relocate("io.netty.handler.codec.dns")
-relocate("io.netty.handler.codec.haproxy")
-relocate("io.netty.resolver.dns.macos")
-relocate("com.github.steveice10.mc.protocol")
-relocate("com.github.steveice10.mc.auth")
-relocate("com.github.steveice10.packetlib")
-
 tasks {
     remapJar {
         archiveBaseName.set("Geyser-Fabric")
diff --git a/bootstrap/mod/neoforge/build.gradle.kts b/bootstrap/mod/neoforge/build.gradle.kts
index 2a414e6dd5dc452e83b8733be0007154e00c85ab..d85087542e7f2bf3bb4b5587f063539f271d14bc 100644
--- a/bootstrap/mod/neoforge/build.gradle.kts
+++ b/bootstrap/mod/neoforge/build.gradle.kts
@@ -2,17 +2,11 @@ plugins {
     application
 }
 
-// This is provided by "org.cloudburstmc.math.mutable" too, so yeet.
-// NeoForge's class loader is *really* annoying.
-provided("org.cloudburstmc.math", "api")
-
 architectury {
     platformSetupLoomIde()
     neoForge()
 }
 
-val includeTransitive: Configuration = configurations.getByName("includeTransitive")
-
 dependencies {
     // See https://github.com/google/guava/issues/6618
     modules {
@@ -27,9 +21,12 @@ dependencies {
     shadow(project(path = ":mod", configuration = "transformProductionNeoForge")) {
         isTransitive = false
     }
-    shadow(project(path = ":core")) { isTransitive = false }
-
-    includeTransitive(projects.core)
+    shadow(projects.core) {
+        exclude(group = "com.google.guava", module = "guava")
+        exclude(group = "com.google.code.gson", module = "gson")
+        exclude(group = "org.slf4j")
+        exclude(group = "io.netty.incubator")
+    }
 }
 
 application {
@@ -37,6 +34,10 @@ application {
 }
 
 tasks {
+    shadowJar {
+        relocate("it.unimi.dsi.fastutil", "org.geysermc.relocate.fastutil")
+    }
+
     remapJar {
         archiveBaseName.set("Geyser-NeoForge")
     }
diff --git a/bootstrap/spigot/build.gradle.kts b/bootstrap/spigot/build.gradle.kts
index 41da1a0de5c987b8c3d219e04626b28f383556be..129064cd406a7cf4fd2ad24f907573f86e0fdcff 100644
--- a/bootstrap/spigot/build.gradle.kts
+++ b/bootstrap/spigot/build.gradle.kts
@@ -11,11 +11,18 @@ dependencies {
     implementation(libs.commodore)
 
     implementation(libs.adventure.text.serializer.bungeecord)
-
-    compileOnly(libs.folia.api)
-    compileOnly(libs.paper.mojangapi)
-
-    compileOnlyApi(libs.viaversion)
+    
+    // Both folia-api and paper-mojangapi only provide Java 17 versions for 1.19
+    compileOnly(libs.folia.api) {
+        attributes {
+            attribute(TargetJvmVersion.TARGET_JVM_VERSION_ATTRIBUTE, 17)
+        }
+    }
+    compileOnly(libs.paper.mojangapi) {
+        attributes {
+            attribute(TargetJvmVersion.TARGET_JVM_VERSION_ATTRIBUTE, 17)
+        }
+    }
 }
 
 platformRelocate("it.unimi.dsi.fastutil")
diff --git a/bootstrap/velocity/build.gradle.kts b/bootstrap/velocity/build.gradle.kts
index a21fb234929ff5400a0d4d5c5c9b14be97fa6c0f..8908b2afd4aaef14bb14b594c5cc0bf61345229a 100644
--- a/bootstrap/velocity/build.gradle.kts
+++ b/bootstrap/velocity/build.gradle.kts
@@ -1,8 +1,6 @@
 dependencies {
     annotationProcessor(libs.velocity.api)
     api(projects.core)
-
-    compileOnlyApi(libs.velocity.api)
 }
 
 platformRelocate("com.fasterxml.jackson")
diff --git a/bootstrap/viaproxy/build.gradle.kts b/bootstrap/viaproxy/build.gradle.kts
index 01c5b5b3455977f0515b5c1c1c8cb625c870f943..4d5d4f94933896c763b3d2f3074e5e02f02c9250 100644
--- a/bootstrap/viaproxy/build.gradle.kts
+++ b/bootstrap/viaproxy/build.gradle.kts
@@ -1,7 +1,5 @@
 dependencies {
     api(projects.core)
-
-    compileOnlyApi(libs.viaproxy)
 }
 
 platformRelocate("net.kyori")
diff --git a/build-logic/src/main/kotlin/extensions.kt b/build-logic/src/main/kotlin/extensions.kt
index 41e11344b98219b25a22ddba5ab364624d4fc30d..b4a14f678747b8a49038975a311c302a69dfa417 100644
--- a/build-logic/src/main/kotlin/extensions.kt
+++ b/build-logic/src/main/kotlin/extensions.kt
@@ -58,20 +58,19 @@ fun Project.platformRelocate(pattern: String, exclusion: String = "") {
 
 val providedDependencies = mutableMapOf<String, MutableSet<String>>()
 
-fun getProvidedDependenciesForProject(projectName: String): MutableSet<String> {
-    return providedDependencies.getOrDefault(projectName, emptySet()).toMutableSet()
-}
-
-fun Project.provided(pattern: String, name: String, excludedOn: Int = 0b110) {
+fun Project.provided(pattern: String, name: String, version: String, excludedOn: Int = 0b110) {
     providedDependencies.getOrPut(project.name) { mutableSetOf() }
-        .add("${calcExclusion(pattern, 0b100, excludedOn)}:${calcExclusion(name, 0b10, excludedOn)}")
+        .add("${calcExclusion(pattern, 0b100, excludedOn)}:" +
+                "${calcExclusion(name, 0b10, excludedOn)}:" +
+                calcExclusion(version, 0b1, excludedOn))
+    dependencies.add("compileOnlyApi", "$pattern:$name:$version")
 }
 
 fun Project.provided(dependency: ProjectDependency) =
-    provided(dependency.group!!, dependency.name)
+    provided(dependency.group!!, dependency.name, dependency.version!!)
 
 fun Project.provided(dependency: MinimalExternalModuleDependency) =
-    provided(dependency.module.group, dependency.module.name)
+    provided(dependency.module.group, dependency.module.name, dependency.versionConstraint.requiredVersion)
 
 fun Project.provided(provider: Provider<MinimalExternalModuleDependency>) =
     provided(provider.get())
diff --git a/build-logic/src/main/kotlin/geyser.modded-conventions.gradle.kts b/build-logic/src/main/kotlin/geyser.modded-conventions.gradle.kts
index 91bde525e1261d883fe8fb530c89fabcb29ed82e..0842eae846538a26c4648517e2d7ca03afe9c0ed 100644
--- a/build-logic/src/main/kotlin/geyser.modded-conventions.gradle.kts
+++ b/build-logic/src/main/kotlin/geyser.modded-conventions.gradle.kts
@@ -11,31 +11,6 @@ plugins {
     id("com.modrinth.minotaur")
 }
 
-// These are provided by Minecraft/modded platforms already, no need to include them
-provided("com.google.code.gson", "gson")
-provided("com.google.guava", ".*")
-provided("org.slf4j", "slf4j-api")
-provided("com.nukkitx.fastutil", ".*")
-provided("org.cloudburstmc.fastutil.maps", ".*")
-provided("org.cloudburstmc.fastutil.sets", ".*")
-provided("org.cloudburstmc.fastutil.commons", ".*")
-provided("org.cloudburstmc.fastutil", ".*")
-provided("org.checkerframework", "checker-qual")
-provided("io.netty", "netty-transport-classes-epoll")
-provided("io.netty", "netty-transport-native-epoll")
-provided("io.netty", "netty-transport-native-unix-common")
-provided("io.netty", "netty-transport-classes-kqueue")
-provided("io.netty", "netty-transport-native-kqueue")
-provided("io.netty", "netty-handler")
-provided("io.netty", "netty-common")
-provided("io.netty", "netty-buffer")
-provided("io.netty", "netty-resolver")
-provided("io.netty", "netty-transport")
-provided("io.netty", "netty-codec")
-provided("io.netty", "netty-resolver-dns")
-provided("io.netty", "netty-resolver-dns-native-macos")
-provided("org.ow2.asm", "asm")
-
 architectury {
     minecraft = "1.20.4"
 }
@@ -44,10 +19,6 @@ loom {
     silentMojangMappingsLicense()
 }
 
-configurations {
-    create("includeTransitive").isTransitive = true
-}
-
 tasks {
     // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
     // if it is present.
@@ -63,6 +34,28 @@ tasks {
         // The remapped shadowJar is the final desired mod jar
         archiveVersion.set(project.version.toString())
         archiveClassifier.set("shaded")
+
+        relocate("org.objectweb.asm", "org.geysermc.relocate.asm")
+        relocate("org.yaml", "org.geysermc.relocate.yaml") // https://github.com/CardboardPowered/cardboard/issues/139
+        relocate("com.fasterxml.jackson", "org.geysermc.relocate.jackson")
+        relocate("net.kyori", "org.geysermc.relocate.kyori")
+
+        dependencies {
+            // Exclude everything EXCEPT some DNS stuff required for HAProxy
+            exclude(dependency("io.netty:netty-transport-classes-epoll:.*"))
+            exclude(dependency("io.netty:netty-transport-native-epoll:.*"))
+            exclude(dependency("io.netty:netty-transport-native-unix-common:.*"))
+            exclude(dependency("io.netty:netty-transport-classes-kqueue:.*"))
+            exclude(dependency("io.netty:netty-transport-native-kqueue:.*"))
+            exclude(dependency("io.netty:netty-handler:.*"))
+            exclude(dependency("io.netty:netty-common:.*"))
+            exclude(dependency("io.netty:netty-buffer:.*"))
+            exclude(dependency("io.netty:netty-resolver:.*"))
+            exclude(dependency("io.netty:netty-transport:.*"))
+            exclude(dependency("io.netty:netty-codec:.*"))
+            exclude(dependency("io.netty:netty-resolver-dns:.*"))
+            exclude(dependency("io.netty:netty-resolver-dns-native-macos:.*"))
+        }
     }
 
     remapJar {
@@ -80,27 +73,6 @@ tasks {
     }
 }
 
-afterEvaluate {
-    val providedDependencies = getProvidedDependenciesForProject(project.name)
-
-    // These are shaded, no need to JiJ them
-    configurations["shadow"].dependencies.forEach {shadowed ->
-        println("Not including shadowed dependency: ${shadowed.group}:${shadowed.name}")
-        providedDependencies.add("${shadowed.group}:${shadowed.name}")
-    }
-
-    // Now: Include all transitive dependencies that aren't excluded
-    configurations["includeTransitive"].resolvedConfiguration.resolvedArtifacts.forEach { dep ->
-        if (!providedDependencies.contains("${dep.moduleVersion.id.group}:${dep.moduleVersion.id.name}")
-            and !providedDependencies.contains("${dep.moduleVersion.id.group}:.*")) {
-            println("Including dependency via JiJ: ${dep.id}")
-            dependencies.add("include", dep.moduleVersion.id.toString())
-        } else {
-            println("Not including ${dep.id} for ${project.name}!")
-        }
-    }
-}
-
 dependencies {
     minecraft("com.mojang:minecraft:1.20.4")
     mappings(loom.officialMojangMappings())
diff --git a/build-logic/src/main/kotlin/geyser.publish-conventions.gradle.kts b/build-logic/src/main/kotlin/geyser.publish-conventions.gradle.kts
index 4588ee52176d093530d4de716435eac07dd4631d..9c5129f49cf0b85a6d11d5060adb137c5b0ac0a1 100644
--- a/build-logic/src/main/kotlin/geyser.publish-conventions.gradle.kts
+++ b/build-logic/src/main/kotlin/geyser.publish-conventions.gradle.kts
@@ -7,9 +7,3 @@ indra {
     publishSnapshotsTo("kalimero2", "https://repo.kalimero2.com/snapshots")
     publishReleasesTo("kalimero2", "https://repo.kalimero2.com/releases")
 }
-
-publishing {
-    // skip shadow jar from publishing. Workaround for https://github.com/johnrengelman/shadow/issues/651
-    val javaComponent = project.components["java"] as AdhocComponentWithVariants
-    javaComponent.withVariantsFromConfiguration(configurations["shadowRuntimeElements"]) { skip() }
-}
\ No newline at end of file
diff --git a/build-logic/src/main/kotlin/geyser.shadow-conventions.gradle.kts b/build-logic/src/main/kotlin/geyser.shadow-conventions.gradle.kts
index c160e5ec6955e4f8d7157d81b4a20f7a04d463a7..dde85c33a97b945475e82f22a821a08f8a76a99a 100644
--- a/build-logic/src/main/kotlin/geyser.shadow-conventions.gradle.kts
+++ b/build-logic/src/main/kotlin/geyser.shadow-conventions.gradle.kts
@@ -7,6 +7,7 @@ plugins {
 
 tasks {
     named<Jar>("jar") {
+        archiveClassifier.set("unshaded")
         from(project.rootProject.file("LICENSE"))
     }
     val shadowJar = named<ShadowJar>("shadowJar") {
